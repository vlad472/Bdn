var mainBundle = (function () {
  'use strict';

  /**
   * @this {Promise}
   */
  function finallyConstructor(callback) {
    var constructor = this.constructor;
    return this.then(
      function(value) {
        // @ts-ignore
        return constructor.resolve(callback()).then(function() {
          return value;
        });
      },
      function(reason) {
        // @ts-ignore
        return constructor.resolve(callback()).then(function() {
          // @ts-ignore
          return constructor.reject(reason);
        });
      }
    );
  }

  // Store setTimeout reference so promise-polyfill will be unaffected by
  // other code modifying setTimeout (like sinon.useFakeTimers())
  var setTimeoutFunc = setTimeout;

  function isArray(x) {
    return Boolean(x && typeof x.length !== 'undefined');
  }

  function noop() {}

  // Polyfill for Function.prototype.bind
  function bind(fn, thisArg) {
    return function() {
      fn.apply(thisArg, arguments);
    };
  }

  /**
   * @constructor
   * @param {Function} fn
   */
  function Promise$1(fn) {
    if (!(this instanceof Promise$1))
      throw new TypeError('Promises must be constructed via new');
    if (typeof fn !== 'function') throw new TypeError('not a function');
    /** @type {!number} */
    this._state = 0;
    /** @type {!boolean} */
    this._handled = false;
    /** @type {Promise|undefined} */
    this._value = undefined;
    /** @type {!Array<!Function>} */
    this._deferreds = [];

    doResolve(fn, this);
  }

  function handle(self, deferred) {
    while (self._state === 3) {
      self = self._value;
    }
    if (self._state === 0) {
      self._deferreds.push(deferred);
      return;
    }
    self._handled = true;
    Promise$1._immediateFn(function() {
      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
      if (cb === null) {
        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
        return;
      }
      var ret;
      try {
        ret = cb(self._value);
      } catch (e) {
        reject(deferred.promise, e);
        return;
      }
      resolve(deferred.promise, ret);
    });
  }

  function resolve(self, newValue) {
    try {
      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
      if (newValue === self)
        throw new TypeError('A promise cannot be resolved with itself.');
      if (
        newValue &&
        (typeof newValue === 'object' || typeof newValue === 'function')
      ) {
        var then = newValue.then;
        if (newValue instanceof Promise$1) {
          self._state = 3;
          self._value = newValue;
          finale(self);
          return;
        } else if (typeof then === 'function') {
          doResolve(bind(then, newValue), self);
          return;
        }
      }
      self._state = 1;
      self._value = newValue;
      finale(self);
    } catch (e) {
      reject(self, e);
    }
  }

  function reject(self, newValue) {
    self._state = 2;
    self._value = newValue;
    finale(self);
  }

  function finale(self) {
    if (self._state === 2 && self._deferreds.length === 0) {
      Promise$1._immediateFn(function() {
        if (!self._handled) {
          Promise$1._unhandledRejectionFn(self._value);
        }
      });
    }

    for (var i = 0, len = self._deferreds.length; i < len; i++) {
      handle(self, self._deferreds[i]);
    }
    self._deferreds = null;
  }

  /**
   * @constructor
   */
  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.promise = promise;
  }

  /**
   * Take a potentially misbehaving resolver function and make sure
   * onFulfilled and onRejected are only called once.
   *
   * Makes no guarantees about asynchrony.
   */
  function doResolve(fn, self) {
    var done = false;
    try {
      fn(
        function(value) {
          if (done) return;
          done = true;
          resolve(self, value);
        },
        function(reason) {
          if (done) return;
          done = true;
          reject(self, reason);
        }
      );
    } catch (ex) {
      if (done) return;
      done = true;
      reject(self, ex);
    }
  }

  Promise$1.prototype['catch'] = function(onRejected) {
    return this.then(null, onRejected);
  };

  Promise$1.prototype.then = function(onFulfilled, onRejected) {
    // @ts-ignore
    var prom = new this.constructor(noop);

    handle(this, new Handler(onFulfilled, onRejected, prom));
    return prom;
  };

  Promise$1.prototype['finally'] = finallyConstructor;

  Promise$1.all = function(arr) {
    return new Promise$1(function(resolve, reject) {
      if (!isArray(arr)) {
        return reject(new TypeError('Promise.all accepts an array'));
      }

      var args = Array.prototype.slice.call(arr);
      if (args.length === 0) return resolve([]);
      var remaining = args.length;

      function res(i, val) {
        try {
          if (val && (typeof val === 'object' || typeof val === 'function')) {
            var then = val.then;
            if (typeof then === 'function') {
              then.call(
                val,
                function(val) {
                  res(i, val);
                },
                reject
              );
              return;
            }
          }
          args[i] = val;
          if (--remaining === 0) {
            resolve(args);
          }
        } catch (ex) {
          reject(ex);
        }
      }

      for (var i = 0; i < args.length; i++) {
        res(i, args[i]);
      }
    });
  };

  Promise$1.resolve = function(value) {
    if (value && typeof value === 'object' && value.constructor === Promise$1) {
      return value;
    }

    return new Promise$1(function(resolve) {
      resolve(value);
    });
  };

  Promise$1.reject = function(value) {
    return new Promise$1(function(resolve, reject) {
      reject(value);
    });
  };

  Promise$1.race = function(arr) {
    return new Promise$1(function(resolve, reject) {
      if (!isArray(arr)) {
        return reject(new TypeError('Promise.race accepts an array'));
      }

      for (var i = 0, len = arr.length; i < len; i++) {
        Promise$1.resolve(arr[i]).then(resolve, reject);
      }
    });
  };

  // Use polyfill for setImmediate for performance gains
  Promise$1._immediateFn =
    // @ts-ignore
    (typeof setImmediate === 'function' &&
      function(fn) {
        // @ts-ignore
        setImmediate(fn);
      }) ||
    function(fn) {
      setTimeoutFunc(fn, 0);
    };

  Promise$1._unhandledRejectionFn = function _unhandledRejectionFn(err) {
    if (typeof console !== 'undefined' && console) {
      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
    }
  };

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob:
      'FileReader' in self &&
      'Blob' in self &&
      (function() {
        try {
          new Blob();
          return true
        } catch (e) {
          return false
        }
      })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  function isDataView(obj) {
    return obj && DataView.prototype.isPrototypeOf(obj)
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ];

    var isArrayBufferView =
      ArrayBuffer.isView ||
      function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift();
        return {done: value === undefined, value: value}
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      };
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value);
      }, this);
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        this.append(header[0], header[1]);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
  };

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function(name) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null
  };

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  };

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value);
  };

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this);
      }
    }
  };

  Headers.prototype.keys = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push(name);
    });
    return iteratorFor(items)
  };

  Headers.prototype.values = function() {
    var items = [];
    this.forEach(function(value) {
      items.push(value);
    });
    return iteratorFor(items)
  };

  Headers.prototype.entries = function() {
    var items = [];
    this.forEach(function(value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items)
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result);
      };
      reader.onerror = function() {
        reject(reader.error);
      };
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function(body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        this._bodyText = body = Object.prototype.toString.call(body);
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this);
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      };

      this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
        } else {
          return this.blob().then(readBlobAsArrayBuffer)
        }
      };
    }

    this.text = function() {
      var rejected = consumed(this);
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    };

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      };
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    };

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      this.signal = input.signal;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    } else {
      this.url = String(input);
    }

    this.credentials = options.credentials || this.credentials || 'same-origin';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.signal = options.signal || this.signal;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body);
  }

  Request.prototype.clone = function() {
    return new Request(this, {body: this._bodyInit})
  };

  function decode(body) {
    var form = new FormData();
    body
      .trim()
      .split('&')
      .forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = options.status === undefined ? 200 : options.status;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  };

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''});
    response.type = 'error';
    return response
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  };

  var DOMException = self.DOMException;
  try {
    new DOMException();
  } catch (err) {
    DOMException = function(message, name) {
      this.message = message;
      this.name = name;
      var error = Error(message);
      this.stack = error.stack;
    };
    DOMException.prototype = Object.create(Error.prototype);
    DOMException.prototype.constructor = DOMException;
  }

  function fetch$1(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init);

      if (request.signal && request.signal.aborted) {
        return reject(new DOMException('Aborted', 'AbortError'))
      }

      var xhr = new XMLHttpRequest();

      function abortXhr() {
        xhr.abort();
      }

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'));
      };

      xhr.onabort = function() {
        reject(new DOMException('Aborted', 'AbortError'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value);
      });

      if (request.signal) {
        request.signal.addEventListener('abort', abortXhr);

        xhr.onreadystatechange = function() {
          // DONE (success or failure)
          if (xhr.readyState === 4) {
            request.signal.removeEventListener('abort', abortXhr);
          }
        };
      }

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    })
  }

  fetch$1.polyfill = true;

  if (!self.fetch) {
    self.fetch = fetch$1;
    self.Headers = Headers;
    self.Request = Request;
    self.Response = Response;
  }

  if (window && !window.Promise) {
    window.Promise = Promise$1;
  }

  if (!String.prototype.includes) {
    String.prototype.includes = function () {
      'use strict';

      return String.prototype.indexOf.apply(this, arguments) !== -1;
    };
  }

  if (!Array.prototype.includes) {
    //or use Object.defineProperty
    Array.prototype.includes = function (search) {
      return !!~this.indexOf(search);
    };
  } // Prepend polyfill


  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty('prepend')) {
        return;
      }

      Object.defineProperty(item, 'prepend', {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function prepend() {
          var argArr = Array.prototype.slice.call(arguments),
              docFrag = document.createDocumentFragment();
          argArr.forEach(function (argItem) {
            var isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });
          this.insertBefore(docFrag, this.firstChild);
        }
      });
    });
  })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // Find Polyfill
  // https://tc39.github.io/ecma262/#sec-array.prototype.find


  if (!Array.prototype.find) {
    Object.defineProperty(Array.prototype, 'find', {
      value: function value(predicate) {
        // 1. Let O be ? ToObject(this value).
        if (this == null) {
          throw TypeError('"this" is null or not defined');
        }

        var o = Object(this); // 2. Let len be ? ToLength(? Get(O, "length")).

        var len = o.length >>> 0; // 3. If IsCallable(predicate) is false, throw a TypeError exception.

        if (typeof predicate !== 'function') {
          throw TypeError('predicate must be a function');
        } // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.


        var thisArg = arguments[1]; // 5. Let k be 0.

        var k = 0; // 6. Repeat, while k < len

        while (k < len) {
          // a. Let Pk be ! ToString(k).
          // b. Let kValue be ? Get(O, Pk).
          // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
          // d. If testResult is true, return kValue.
          var kValue = o[k];

          if (predicate.call(thisArg, kValue, k, o)) {
            return kValue;
          } // e. Increase k by 1.


          k++;
        } // 7. Return undefined.


        return undefined;
      },
      configurable: true,
      writable: true
    });
  }

  var polyfills = /*#__PURE__*/Object.freeze({

  });

  var styles = "@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/8a533745-7bc5-4dcd-8552-d9952208de6f.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/8a533745-7bc5-4dcd-8552-d9952208de6f.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/ffbb4591-1a9c-443b-9b6e-6ceb6a3ca76b.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/e44c8656-a389-4ecb-838c-3c135565d6b3.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/fcdcba61-8d4e-41db-9c06-24a5238587f1.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/54af9b67-908f-49ac-8aa0-d3959c0e28dc.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/54af9b67-908f-49ac-8aa0-d3959c0e28dc.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/b821b539-3f6c-4ee1-8d8d-c331fb7aedce.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/7368a75b-895f-4b33-ac15-1364f4ff3f9f.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/9cd874e4-d629-4f8a-8760-b877ec0e5d9e.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: italic;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/0f774eeb-e868-4bd6-9055-79542afd5208.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/0f774eeb-e868-4bd6-9055-79542afd5208.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/cdb13a7a-2f13-4f7c-b7a3-01b4ccef574d.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/40a8594b-08b2-4a38-97d9-958c95360b20.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/bcc8880e-b967-43ce-a210-d1404cbdc736.ttf\") format(\"truetype\");\n  font-weight: 500;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/653875a7-77e2-4995-97f2-4c9de734eb69.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/653875a7-77e2-4995-97f2-4c9de734eb69.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/445f40df-cbad-41e8-92eb-b4438eb872fc.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/ed8af8bb-2ddb-4128-a83b-837173705425.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/7401384a-83d5-4f49-a886-089029ce641c.ttf\") format(\"truetype\");\n  font-weight: 500;\n  font-style: italic;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/5cd9741a-b33e-4cd7-a197-e850a6e920b2.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/5cd9741a-b33e-4cd7-a197-e850a6e920b2.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/601fdeac-544b-4132-8e0d-f24e0a72e489.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/680a604b-6cec-4a82-8d1c-3a77fb66cee5.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/ef6af46e-3064-450c-9902-48bb726bd026.ttf\") format(\"truetype\");\n  font-weight: 800;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/96eee7b7-99e1-4bc6-9099-86d14aa4b25a.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/96eee7b7-99e1-4bc6-9099-86d14aa4b25a.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/ec5c34fc-3ad0-4147-9b77-e978a00b7653.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/e2a9f569-6858-48b4-b5c0-30c014123cd1.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/fb00b17a-2053-49b7-9d53-68cf5c842ba1.ttf\") format(\"truetype\");\n  font-weight: 800;\n  font-style: italic;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/69d25c38-dbab-4326-9230-923d3c18889b.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/69d25c38-dbab-4326-9230-923d3c18889b.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/7bc581c3-bb28-4f5d-a9c5-3018fcfbfbd9.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/4e811424-cd97-4afb-bf5a-965c3b39905d.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/124573c7-0c5e-4c89-8a3a-4ee9aee5d3a9.ttf\") format(\"truetype\");\n  font-weight: 900;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/b3dc84d3-a366-4d54-85cd-a4a909be2322.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/b3dc84d3-a366-4d54-85cd-a4a909be2322.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/e5071d6e-c3d6-4c88-8042-a4c33b65387f.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/53426c00-fe27-497e-bafe-d62c9c2f02b5.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/1d0866b5-0d7c-4fde-988c-c45899a3503f.ttf\") format(\"truetype\");\n  font-weight: 900;\n  font-style: italic;\n}\n@font-face {\n  font-family: \"FF Mark W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/b9275bbe-5494-4561-8869-49b8b4213b0e.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/b9275bbe-5494-4561-8869-49b8b4213b0e.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/e6f5bc67-2b84-4b0a-b32a-0ec6c2b8634e.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/b428d7d4-bc34-4bdf-a27b-13bf549f613c.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/ffmark/2864b8c0-7389-464a-845c-23d708d5665c.ttf\") format(\"truetype\");\n  font-weight: 950;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"Cairo\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Regular.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Regular.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Regular.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Regular.ttf\") format(\"truetype\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Regular.svg#\") format(\"svg\");\n  font-weight: 1 699;\n}\n@font-face {\n  font-family: \"Cairo\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Bold.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Bold.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Bold.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Bold.ttf\") format(\"truetype\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/1.0.0/Fonts/Cairo-Bold.svg#\") format(\"svg\");\n  font-weight: 700 999;\n}\n@font-face {\n  font-family: \"Neue Frutiger World W05_n4\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/2b60fc6c-fa8d-43f1-a9b8-6c5c77815ab6.eot?#iefix\") format(\"eot\");\n}\n@font-face {\n  font-family: \"Neue Frutiger World W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/2b60fc6c-fa8d-43f1-a9b8-6c5c77815ab6.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/2b60fc6c-fa8d-43f1-a9b8-6c5c77815ab6.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/8bdf6867-c434-4e1e-b0cd-8653db148cd9.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/75ffdee7-26c9-43d8-9fcd-6383663c6891.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/f455f05f-2737-4d93-b58a-f15fc8dbd9ec.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"Neue Frutiger World W05_i4\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/43d95c29-a881-4e0b-92d0-4d82b49bb518.eot?#iefix\") format(\"eot\");\n}\n@font-face {\n  font-family: \"Neue Frutiger World W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/43d95c29-a881-4e0b-92d0-4d82b49bb518.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/43d95c29-a881-4e0b-92d0-4d82b49bb518.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/37724264-30a8-41d0-922a-c16f9941551e.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/62af9f13-d1bd-4e6e-bab1-57fc299d990c.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/93db667a-1eb8-41e9-8552-260c3665e7a5.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: italic;\n}\n@font-face {\n  font-family: \"Neue Frutiger World W05_n7\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/39e3636b-a1e0-405f-b107-b8c085dbcab4.eot?#iefix\") format(\"eot\");\n}\n@font-face {\n  font-family: \"Neue Frutiger World W05\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/39e3636b-a1e0-405f-b107-b8c085dbcab4.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/39e3636b-a1e0-405f-b107-b8c085dbcab4.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/cfbc054a-704d-4ef8-bdff-935a38de18ed.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/829467b2-67b5-4c02-b47c-25da7513a62f.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/neuefruitegerworld/8a7d27b5-8d29-46fe-84c5-2f6e0b345b83.ttf\") format(\"truetype\");\n  font-weight: 700;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"RixSGo\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.eot?#iefix\") format(\"eot\");\n}\n@font-face {\n  font-family: \"RixSGo\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"RixSGo\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoM.ttf\") format(\"truetype\");\n  font-weight: 400;\n  font-style: italic;\n}\n@font-face {\n  font-family: \"RixSGo\";\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoB.eot?#iefix\");\n  src: url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoB.eot?#iefix\") format(\"eot\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoB.woff2\") format(\"woff2\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoB.woff\") format(\"woff\"), url(\"https://lolstatic-a.akamaihd.net/awesomefonts/Fonts/rixsg/RixSGoB.ttf\") format(\"truetype\");\n  font-weight: 700;\n  font-style: normal;\n}";

  var styles$1 = /*#__PURE__*/Object.freeze({
    'default': styles
  });

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function commonjsRequire () {
  	throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
  }

  function unwrapExports (x) {
  	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  function getCjsExportFromNamespace (n) {
  	return n && n['default'] || n;
  }

  var svg4everybody = createCommonjsModule(function (module) {
    !function (root, factory) {
      "function" == typeof undefined && undefined.amd ? // AMD. Register as an anonymous module unless amdModuleId is set
      undefined([], function () {
        return root.svg4everybody = factory();
      }) : "object" == 'object' && module.exports ? // Node. Does not work with strict CommonJS, but
      // only CommonJS-like environments that support module.exports,
      // like Node.
      module.exports = factory() : root.svg4everybody = factory();
    }(commonjsGlobal, function () {
      /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */
      function embed(parent, svg, target) {
        // if the target exists
        if (target) {
          // create a document fragment to hold the contents of the target
          var fragment = document.createDocumentFragment(),
              viewBox = !svg.hasAttribute("viewBox") && target.getAttribute("viewBox"); // conditionally set the viewBox on the svg

          viewBox && svg.setAttribute("viewBox", viewBox); // copy the contents of the clone into the fragment

          for ( // clone the target
          var clone = target.cloneNode(!0); clone.childNodes.length;) {
            fragment.appendChild(clone.firstChild);
          } // append the fragment into the svg


          parent.appendChild(fragment);
        }
      }

      function loadreadystatechange(xhr) {
        // listen to changes in the request
        xhr.onreadystatechange = function () {
          // if the request is ready
          if (4 === xhr.readyState) {
            // get the cached html document
            var cachedDocument = xhr._cachedDocument; // ensure the cached html document based on the xhr response

            cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(""), cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item
            xhr._embeds.splice(0).map(function (item) {
              // get the cached target
              var target = xhr._cachedTarget[item.id]; // ensure the cached target

              target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), // embed the target into the svg
              embed(item.parent, item.svg, target);
            });
          }
        }, // test the ready state change immediately
        xhr.onreadystatechange();
      }

      function svg4everybody(rawopts) {
        function oninterval() {
          // while the index exists in the live <use> collection
          for ( // get the cached <use> index
          var index = 0; index < uses.length;) {
            // get the current <use>
            var use = uses[index],
                parent = use.parentNode,
                svg = getSVGAncestor(parent),
                src = use.getAttribute("data-href") || use.getAttribute("xlink:href") || use.getAttribute("href");

            if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), svg && src) {
              if (polyfill) {
                if (!opts.validate || opts.validate(src, svg, use)) {
                  // remove the <use> element
                  parent.removeChild(use); // parse the src and get the url and id

                  var srcSplit = src.split("#"),
                      url = srcSplit.shift(),
                      id = srcSplit.join("#"); // if the link is external

                  if (url.length) {
                    // get the cached xhr request
                    var xhr = requests[url]; // ensure the xhr request exists

                    xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open("GET", url), xhr.send(), xhr._embeds = []), // add the svg and id as an item to the xhr embeds list
                    xhr._embeds.push({
                      parent: parent,
                      svg: svg,
                      id: id
                    }), // prepare the xhr ready state change event
                    loadreadystatechange(xhr);
                  } else {
                    // embed the local id into the svg
                    embed(parent, svg, document.getElementById(id));
                  }
                } else {
                  // increase the index when the previous value was not "valid"
                  ++index, ++numberOfSvgUseElementsToBypass;
                }
              }
            } else {
              // increase the index when the previous value was not "valid"
              ++index;
            }
          } // continue the interval


          (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);
        }

        var polyfill,
            opts = Object(rawopts),
            newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/,
            webkitUA = /\bAppleWebKit\/(\d+)\b/,
            olderEdgeUA = /\bEdge\/12\.(\d+)\b/,
            edgeUA = /\bEdge\/.(\d+)\b/,
            inIframe = window.top !== window.self;
        polyfill = "polyfill" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe; // create xhr requests object

        var requests = {},
            requestAnimationFrame = window.requestAnimationFrame || setTimeout,
            uses = document.getElementsByTagName("use"),
            numberOfSvgUseElementsToBypass = 0; // conditionally start the interval if the polyfill is active

        polyfill && oninterval();
      }

      function getSVGAncestor(node) {
        for (var svg = node; "svg" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode);) {}

        return svg;
      }

      return svg4everybody;
    });
  });

  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  var REACT_ELEMENT_TYPE;

  function _jsx(type, props, key, children) {
    if (!REACT_ELEMENT_TYPE) {
      REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol["for"] && Symbol["for"]("react.element") || 0xeac7;
    }

    var defaultProps = type && type.defaultProps;
    var childrenLength = arguments.length - 3;

    if (!props && childrenLength !== 0) {
      props = {
        children: void 0
      };
    }

    if (props && defaultProps) {
      for (var propName in defaultProps) {
        if (props[propName] === void 0) {
          props[propName] = defaultProps[propName];
        }
      }
    } else if (!props) {
      props = defaultProps || {};
    }

    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = new Array(childrenLength);

      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 3];
      }

      props.children = childArray;
    }

    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key === undefined ? null : '' + key,
      ref: null,
      props: props,
      _owner: null
    };
  }

  function _asyncIterator(iterable) {
    var method;

    if (typeof Symbol !== "undefined") {
      if (Symbol.asyncIterator) {
        method = iterable[Symbol.asyncIterator];
        if (method != null) return method.call(iterable);
      }

      if (Symbol.iterator) {
        method = iterable[Symbol.iterator];
        if (method != null) return method.call(iterable);
      }
    }

    throw new TypeError("Object is not async iterable");
  }

  function _AwaitValue(value) {
    this.wrapped = value;
  }

  function _AsyncGenerator(gen) {
    var front, back;

    function send(key, arg) {
      return new Promise(function (resolve, reject) {
        var request = {
          key: key,
          arg: arg,
          resolve: resolve,
          reject: reject,
          next: null
        };

        if (back) {
          back = back.next = request;
        } else {
          front = back = request;
          resume(key, arg);
        }
      });
    }

    function resume(key, arg) {
      try {
        var result = gen[key](arg);
        var value = result.value;
        var wrappedAwait = value instanceof _AwaitValue;
        Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {
          if (wrappedAwait) {
            resume("next", arg);
            return;
          }

          settle(result.done ? "return" : "normal", arg);
        }, function (err) {
          resume("throw", err);
        });
      } catch (err) {
        settle("throw", err);
      }
    }

    function settle(type, value) {
      switch (type) {
        case "return":
          front.resolve({
            value: value,
            done: true
          });
          break;

        case "throw":
          front.reject(value);
          break;

        default:
          front.resolve({
            value: value,
            done: false
          });
          break;
      }

      front = front.next;

      if (front) {
        resume(front.key, front.arg);
      } else {
        back = null;
      }
    }

    this._invoke = send;

    if (typeof gen.return !== "function") {
      this.return = undefined;
    }
  }

  if (typeof Symbol === "function" && Symbol.asyncIterator) {
    _AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
      return this;
    };
  }

  _AsyncGenerator.prototype.next = function (arg) {
    return this._invoke("next", arg);
  };

  _AsyncGenerator.prototype.throw = function (arg) {
    return this._invoke("throw", arg);
  };

  _AsyncGenerator.prototype.return = function (arg) {
    return this._invoke("return", arg);
  };

  function _wrapAsyncGenerator(fn) {
    return function () {
      return new _AsyncGenerator(fn.apply(this, arguments));
    };
  }

  function _awaitAsyncGenerator(value) {
    return new _AwaitValue(value);
  }

  function _asyncGeneratorDelegate(inner, awaitWrap) {
    var iter = {},
        waiting = false;

    function pump(key, value) {
      waiting = true;
      value = new Promise(function (resolve) {
        resolve(inner[key](value));
      });
      return {
        done: false,
        value: awaitWrap(value)
      };
    }

    ;

    if (typeof Symbol === "function" && Symbol.iterator) {
      iter[Symbol.iterator] = function () {
        return this;
      };
    }

    iter.next = function (value) {
      if (waiting) {
        waiting = false;
        return value;
      }

      return pump("next", value);
    };

    if (typeof inner.throw === "function") {
      iter.throw = function (value) {
        if (waiting) {
          waiting = false;
          throw value;
        }

        return pump("throw", value);
      };
    }

    if (typeof inner.return === "function") {
      iter.return = function (value) {
        return pump("return", value);
      };
    }

    return iter;
  }

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  function _asyncToGenerator(fn) {
    return function () {
      var self = this,
          args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);

        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }

        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _defineEnumerableProperties(obj, descs) {
    for (var key in descs) {
      var desc = descs[key];
      desc.configurable = desc.enumerable = true;
      if ("value" in desc) desc.writable = true;
      Object.defineProperty(obj, key, desc);
    }

    if (Object.getOwnPropertySymbols) {
      var objectSymbols = Object.getOwnPropertySymbols(descs);

      for (var i = 0; i < objectSymbols.length; i++) {
        var sym = objectSymbols[i];
        var desc = descs[sym];
        desc.configurable = desc.enumerable = true;
        if ("value" in desc) desc.writable = true;
        Object.defineProperty(obj, sym, desc);
      }
    }

    return obj;
  }

  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);

      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }

    return obj;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(source, true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(source).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !_isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return _construct(Class, arguments, _getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return _setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  function _instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
      return !!right[Symbol.hasInstance](left);
    } else {
      return left instanceof right;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  function _newArrowCheck(innerThis, boundThis) {
    if (innerThis !== boundThis) {
      throw new TypeError("Cannot instantiate an arrow function");
    }
  }

  function _objectDestructuringEmpty(obj) {
    if (obj == null) throw new TypeError("Cannot destructure undefined");
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = _getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get;
    } else {
      _get = function _get(target, property, receiver) {
        var base = _superPropBase(target, property);

        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  function set(target, property, value, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.set) {
      set = Reflect.set;
    } else {
      set = function set(target, property, value, receiver) {
        var base = _superPropBase(target, property);

        var desc;

        if (base) {
          desc = Object.getOwnPropertyDescriptor(base, property);

          if (desc.set) {
            desc.set.call(receiver, value);
            return true;
          } else if (!desc.writable) {
            return false;
          }
        }

        desc = Object.getOwnPropertyDescriptor(receiver, property);

        if (desc) {
          if (!desc.writable) {
            return false;
          }

          desc.value = value;
          Object.defineProperty(receiver, property, desc);
        } else {
          _defineProperty(receiver, property, value);
        }

        return true;
      };
    }

    return set(target, property, value, receiver);
  }

  function _set(target, property, value, receiver, isStrict) {
    var s = set(target, property, value, receiver || target);

    if (!s && isStrict) {
      throw new Error('failed to set property');
    }

    return value;
  }

  function _taggedTemplateLiteral(strings, raw) {
    if (!raw) {
      raw = strings.slice(0);
    }

    return Object.freeze(Object.defineProperties(strings, {
      raw: {
        value: Object.freeze(raw)
      }
    }));
  }

  function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) {
      raw = strings.slice(0);
    }

    strings.raw = raw;
    return strings;
  }

  function _temporalRef(val, name) {
    if (val === _temporalUndefined) {
      throw new ReferenceError(name + " is not defined - temporal dead zone");
    } else {
      return val;
    }
  }

  function _readOnlyError(name) {
    throw new Error("\"" + name + "\" is read-only");
  }

  function _classNameTDZError(name) {
    throw new Error("Class \"" + name + "\" cannot be referenced in computed property keys.");
  }

  var _temporalUndefined = {};

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
  }

  function _slicedToArrayLoose(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimitLoose(arr, i) || _nonIterableRest();
  }

  function _toArray(arr) {
    return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _iterableToArrayLimitLoose(arr, i) {
    var _arr = [];

    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
      _arr.push(_step.value);

      if (i && _arr.length === i) break;
    }

    return _arr;
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  function _skipFirstGeneratorNext(fn) {
    return function () {
      var it = fn.apply(this, arguments);
      it.next();
      return it;
    };
  }

  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];

    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }

    return (hint === "string" ? String : Number)(input);
  }

  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");

    return typeof key === "symbol" ? key : String(key);
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.');
  }

  function _initializerDefineProperty(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object.keys(descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  var id = 0;

  function _classPrivateFieldLooseKey(name) {
    return "__private_" + id++ + "_" + name;
  }

  function _classPrivateFieldLooseBase(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
      throw new TypeError("attempted to use private field on non-instance");
    }

    return receiver;
  }

  function _classPrivateFieldGet(receiver, privateMap) {
    var descriptor = privateMap.get(receiver);

    if (!descriptor) {
      throw new TypeError("attempted to get private field on non-instance");
    }

    if (descriptor.get) {
      return descriptor.get.call(receiver);
    }

    return descriptor.value;
  }

  function _classPrivateFieldSet(receiver, privateMap, value) {
    var descriptor = privateMap.get(receiver);

    if (!descriptor) {
      throw new TypeError("attempted to set private field on non-instance");
    }

    if (descriptor.set) {
      descriptor.set.call(receiver, value);
    } else {
      if (!descriptor.writable) {
        throw new TypeError("attempted to set read only private field");
      }

      descriptor.value = value;
    }

    return value;
  }

  function _classPrivateFieldDestructureSet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
      throw new TypeError("attempted to set private field on non-instance");
    }

    var descriptor = privateMap.get(receiver);

    if (descriptor.set) {
      if (!("__destrObj" in descriptor)) {
        descriptor.__destrObj = {
          set value(v) {
            descriptor.set.call(receiver, v);
          }

        };
      }

      return descriptor.__destrObj;
    } else {
      if (!descriptor.writable) {
        throw new TypeError("attempted to set read only private field");
      }

      return descriptor;
    }
  }

  function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {
    if (receiver !== classConstructor) {
      throw new TypeError("Private static access of wrong provenance");
    }

    return descriptor.value;
  }

  function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {
    if (receiver !== classConstructor) {
      throw new TypeError("Private static access of wrong provenance");
    }

    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }

    descriptor.value = value;
    return value;
  }

  function _classStaticPrivateMethodGet(receiver, classConstructor, method) {
    if (receiver !== classConstructor) {
      throw new TypeError("Private static access of wrong provenance");
    }

    return method;
  }

  function _classStaticPrivateMethodSet() {
    throw new TypeError("attempted to set read only static private field");
  }

  function _decorate(decorators, factory, superClass, mixins) {
    var api = _getDecoratorsApi();

    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        api = mixins[i](api);
      }
    }

    var r = factory(function initialize(O) {
      api.initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = api.decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators);
    api.initializeClassElements(r.F, decorated.elements);
    return api.runClassFinishers(r.F, decorated.finishers);
  }

  function _getDecoratorsApi() {
    _getDecoratorsApi = function () {
      return api;
    };

    var api = {
      elementsDefinitionOrder: [["method"], ["field"]],
      initializeInstanceElements: function (O, elements) {
        ["method", "field"].forEach(function (kind) {
          elements.forEach(function (element) {
            if (element.kind === kind && element.placement === "own") {
              this.defineClassElement(O, element);
            }
          }, this);
        }, this);
      },
      initializeClassElements: function (F, elements) {
        var proto = F.prototype;
        ["method", "field"].forEach(function (kind) {
          elements.forEach(function (element) {
            var placement = element.placement;

            if (element.kind === kind && (placement === "static" || placement === "prototype")) {
              var receiver = placement === "static" ? F : proto;
              this.defineClassElement(receiver, element);
            }
          }, this);
        }, this);
      },
      defineClassElement: function (receiver, element) {
        var descriptor = element.descriptor;

        if (element.kind === "field") {
          var initializer = element.initializer;
          descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver)
          };
        }

        Object.defineProperty(receiver, element.key, descriptor);
      },
      decorateClass: function (elements, decorators) {
        var newElements = [];
        var finishers = [];
        var placements = {
          static: [],
          prototype: [],
          own: []
        };
        elements.forEach(function (element) {
          this.addElementPlacement(element, placements);
        }, this);
        elements.forEach(function (element) {
          if (!_hasDecorators(element)) return newElements.push(element);
          var elementFinishersExtras = this.decorateElement(element, placements);
          newElements.push(elementFinishersExtras.element);
          newElements.push.apply(newElements, elementFinishersExtras.extras);
          finishers.push.apply(finishers, elementFinishersExtras.finishers);
        }, this);

        if (!decorators) {
          return {
            elements: newElements,
            finishers: finishers
          };
        }

        var result = this.decorateConstructor(newElements, decorators);
        finishers.push.apply(finishers, result.finishers);
        result.finishers = finishers;
        return result;
      },
      addElementPlacement: function (element, placements, silent) {
        var keys = placements[element.placement];

        if (!silent && keys.indexOf(element.key) !== -1) {
          throw new TypeError("Duplicated element (" + element.key + ")");
        }

        keys.push(element.key);
      },
      decorateElement: function (element, placements) {
        var extras = [];
        var finishers = [];

        for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) {
          var keys = placements[element.placement];
          keys.splice(keys.indexOf(element.key), 1);
          var elementObject = this.fromElementDescriptor(element);
          var elementFinisherExtras = this.toElementFinisherExtras((0, decorators[i])(elementObject) || elementObject);
          element = elementFinisherExtras.element;
          this.addElementPlacement(element, placements);

          if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
          }

          var newExtras = elementFinisherExtras.extras;

          if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
              this.addElementPlacement(newExtras[j], placements);
            }

            extras.push.apply(extras, newExtras);
          }
        }

        return {
          element: element,
          finishers: finishers,
          extras: extras
        };
      },
      decorateConstructor: function (elements, decorators) {
        var finishers = [];

        for (var i = decorators.length - 1; i >= 0; i--) {
          var obj = this.fromClassDescriptor(elements);
          var elementsAndFinisher = this.toClassDescriptor((0, decorators[i])(obj) || obj);

          if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
          }

          if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;

            for (var j = 0; j < elements.length - 1; j++) {
              for (var k = j + 1; k < elements.length; k++) {
                if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) {
                  throw new TypeError("Duplicated element (" + elements[j].key + ")");
                }
              }
            }
          }
        }

        return {
          elements: elements,
          finishers: finishers
        };
      },
      fromElementDescriptor: function (element) {
        var obj = {
          kind: element.kind,
          key: element.key,
          placement: element.placement,
          descriptor: element.descriptor
        };
        var desc = {
          value: "Descriptor",
          configurable: true
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);
        if (element.kind === "field") obj.initializer = element.initializer;
        return obj;
      },
      toElementDescriptors: function (elementObjects) {
        if (elementObjects === undefined) return;
        return _toArray(elementObjects).map(function (elementObject) {
          var element = this.toElementDescriptor(elementObject);
          this.disallowProperty(elementObject, "finisher", "An element descriptor");
          this.disallowProperty(elementObject, "extras", "An element descriptor");
          return element;
        }, this);
      },
      toElementDescriptor: function (elementObject) {
        var kind = String(elementObject.kind);

        if (kind !== "method" && kind !== "field") {
          throw new TypeError('An element descriptor\'s .kind property must be either "method" or' + ' "field", but a decorator created an element descriptor with' + ' .kind "' + kind + '"');
        }

        var key = _toPropertyKey(elementObject.key);

        var placement = String(elementObject.placement);

        if (placement !== "static" && placement !== "prototype" && placement !== "own") {
          throw new TypeError('An element descriptor\'s .placement property must be one of "static",' + ' "prototype" or "own", but a decorator created an element descriptor' + ' with .placement "' + placement + '"');
        }

        var descriptor = elementObject.descriptor;
        this.disallowProperty(elementObject, "elements", "An element descriptor");
        var element = {
          kind: kind,
          key: key,
          placement: placement,
          descriptor: Object.assign({}, descriptor)
        };

        if (kind !== "field") {
          this.disallowProperty(elementObject, "initializer", "A method descriptor");
        } else {
          this.disallowProperty(descriptor, "get", "The property descriptor of a field descriptor");
          this.disallowProperty(descriptor, "set", "The property descriptor of a field descriptor");
          this.disallowProperty(descriptor, "value", "The property descriptor of a field descriptor");
          element.initializer = elementObject.initializer;
        }

        return element;
      },
      toElementFinisherExtras: function (elementObject) {
        var element = this.toElementDescriptor(elementObject);

        var finisher = _optionalCallableProperty(elementObject, "finisher");

        var extras = this.toElementDescriptors(elementObject.extras);
        return {
          element: element,
          finisher: finisher,
          extras: extras
        };
      },
      fromClassDescriptor: function (elements) {
        var obj = {
          kind: "class",
          elements: elements.map(this.fromElementDescriptor, this)
        };
        var desc = {
          value: "Descriptor",
          configurable: true
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);
        return obj;
      },
      toClassDescriptor: function (obj) {
        var kind = String(obj.kind);

        if (kind !== "class") {
          throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator' + ' created a class descriptor with .kind "' + kind + '"');
        }

        this.disallowProperty(obj, "key", "A class descriptor");
        this.disallowProperty(obj, "placement", "A class descriptor");
        this.disallowProperty(obj, "descriptor", "A class descriptor");
        this.disallowProperty(obj, "initializer", "A class descriptor");
        this.disallowProperty(obj, "extras", "A class descriptor");

        var finisher = _optionalCallableProperty(obj, "finisher");

        var elements = this.toElementDescriptors(obj.elements);
        return {
          elements: elements,
          finisher: finisher
        };
      },
      runClassFinishers: function (constructor, finishers) {
        for (var i = 0; i < finishers.length; i++) {
          var newConstructor = (0, finishers[i])(constructor);

          if (newConstructor !== undefined) {
            if (typeof newConstructor !== "function") {
              throw new TypeError("Finishers must return a constructor.");
            }

            constructor = newConstructor;
          }
        }

        return constructor;
      },
      disallowProperty: function (obj, name, objectType) {
        if (obj[name] !== undefined) {
          throw new TypeError(objectType + " can't have a ." + name + " property.");
        }
      }
    };
    return api;
  }

  function _createElementDescriptor(def) {
    var key = _toPropertyKey(def.key);

    var descriptor;

    if (def.kind === "method") {
      descriptor = {
        value: def.value,
        writable: true,
        configurable: true,
        enumerable: false
      };
    } else if (def.kind === "get") {
      descriptor = {
        get: def.value,
        configurable: true,
        enumerable: false
      };
    } else if (def.kind === "set") {
      descriptor = {
        set: def.value,
        configurable: true,
        enumerable: false
      };
    } else if (def.kind === "field") {
      descriptor = {
        configurable: true,
        writable: true,
        enumerable: true
      };
    }

    var element = {
      kind: def.kind === "field" ? "field" : "method",
      key: key,
      placement: def.static ? "static" : def.kind === "field" ? "own" : "prototype",
      descriptor: descriptor
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === "field") element.initializer = def.value;
    return element;
  }

  function _coalesceGetterSetter(element, other) {
    if (element.descriptor.get !== undefined) {
      other.descriptor.get = element.descriptor.get;
    } else {
      other.descriptor.set = element.descriptor.set;
    }
  }

  function _coalesceClassElements(elements) {
    var newElements = [];

    var isSameElement = function (other) {
      return other.kind === "method" && other.key === element.key && other.placement === element.placement;
    };

    for (var i = 0; i < elements.length; i++) {
      var element = elements[i];
      var other;

      if (element.kind === "method" && (other = newElements.find(isSameElement))) {
        if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) {
          if (_hasDecorators(element) || _hasDecorators(other)) {
            throw new ReferenceError("Duplicated methods (" + element.key + ") can't be decorated.");
          }

          other.descriptor = element.descriptor;
        } else {
          if (_hasDecorators(element)) {
            if (_hasDecorators(other)) {
              throw new ReferenceError("Decorators can't be placed on different accessors with for " + "the same property (" + element.key + ").");
            }

            other.decorators = element.decorators;
          }

          _coalesceGetterSetter(element, other);
        }
      } else {
        newElements.push(element);
      }
    }

    return newElements;
  }

  function _hasDecorators(element) {
    return element.decorators && element.decorators.length;
  }

  function _isDataDescriptor(desc) {
    return desc !== undefined && !(desc.value === undefined && desc.writable === undefined);
  }

  function _optionalCallableProperty(obj, name) {
    var value = obj[name];

    if (value !== undefined && typeof value !== "function") {
      throw new TypeError("Expected '" + name + "' to be a function");
    }

    return value;
  }

  function _classPrivateMethodGet(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) {
      throw new TypeError("attempted to get private field on non-instance");
    }

    return fn;
  }

  function _classPrivateMethodSet() {
    throw new TypeError("attempted to reassign private method");
  }

  function _wrapRegExp(re, groups) {
    _wrapRegExp = function (re, groups) {
      return new BabelRegExp(re, groups);
    };

    var _RegExp = _wrapNativeSuper(RegExp);

    var _super = RegExp.prototype;

    var _groups = new WeakMap();

    function BabelRegExp(re, groups) {
      var _this = _RegExp.call(this, re);

      _groups.set(_this, groups);

      return _this;
    }

    _inherits(BabelRegExp, _RegExp);

    BabelRegExp.prototype.exec = function (str) {
      var result = _super.exec.call(this, str);

      if (result) result.groups = buildGroups(result, this);
      return result;
    };

    BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {
      if (typeof substitution === "string") {
        var groups = _groups.get(this);

        return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) {
          return "$" + groups[name];
        }));
      } else if (typeof substitution === "function") {
        var _this = this;

        return _super[Symbol.replace].call(this, str, function () {
          var args = [];
          args.push.apply(args, arguments);

          if (typeof args[args.length - 1] !== "object") {
            args.push(buildGroups(args, _this));
          }

          return substitution.apply(this, args);
        });
      } else {
        return _super[Symbol.replace].call(this, str, substitution);
      }
    };

    function buildGroups(result, re) {
      var g = _groups.get(re);

      return Object.keys(g).reduce(function (groups, name) {
        groups[name] = result[g[name]];
        return groups;
      }, Object.create(null));
    }

    return _wrapRegExp.apply(this, arguments);
  }

  var n,l,u,t,i,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n);}function h(n,l,u){var t,i=arguments,o={};for(t in l)"key"!==t&&"ref"!==t&&(o[t]=l[t]);if(arguments.length>3)for(u=[u],t=3;t<arguments.length;t++)u.push(i[t]);if(null!=u&&(o.children=u),"function"==typeof n&&null!=n.defaultProps)for(t in n.defaultProps)void 0===o[t]&&(o[t]=n.defaultProps[t]);return v(n,o,l&&l.key,l&&l.ref)}function v(l,u,t,i){var o={type:l,props:u,key:t,ref:i,__k:null,__:null,__b:0,__e:null,__d:null,__c:null,constructor:void 0};return n.vnode&&n.vnode(o),o}function p(){return {}}function y(n){return n.children}function d(n,l){this.props=n,this.context=l;}function m(n,l){if(null==l)return n.__?m(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return "function"==typeof n.type?m(n):null}function w(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return w(n)}}function g(l){(!l.__d&&(l.__d=!0)&&1===u.push(l)||i!==n.debounceRendering)&&((i=n.debounceRendering)||t)(k);}function k(){var n,l,t,i,o,r,f;for(u.sort(function(n,l){return l.__v.__b-n.__v.__b});n=u.pop();)n.__d&&(t=void 0,i=void 0,r=(o=(l=n).__v).__e,(f=l.__P)&&(t=[],i=T(f,o,s({},o),l.__n,void 0!==f.ownerSVGElement,null,t,null==r?m(o):r),$(t,o),i!=r&&w(o)));}function _(n,l,u,t,i,o,r,c,s){var h,v,p,y,d,w,g,k=u&&u.__k||e,_=k.length;if(c==f&&(c=null!=o?o[0]:_?m(u,0):null),h=0,l.__k=b(l.__k,function(u){if(null!=u){if(u.__=l,u.__b=l.__b+1,null===(p=k[h])||p&&u.key==p.key&&u.type===p.type)k[h]=void 0;else for(v=0;v<_;v++){if((p=k[v])&&u.key==p.key&&u.type===p.type){k[v]=void 0;break}p=null;}if(y=T(n,u,p=p||f,t,i,o,r,c,s),(v=u.ref)&&p.ref!=v&&(g||(g=[]),p.ref&&g.push(p.ref,null,u),g.push(v,u.__c||y,u)),null!=y){if(null==w&&(w=y),null!=u.__d)y=u.__d,u.__d=null;else if(o==p||y!=c||null==y.parentNode){n:if(null==c||c.parentNode!==n)n.appendChild(y);else{for(d=c,v=0;(d=d.nextSibling)&&v<_;v+=2)if(d==y)break n;n.insertBefore(y,c);}"option"==l.type&&(n.value="");}c=y.nextSibling,"function"==typeof l.type&&(l.__d=y);}}return h++,u}),l.__e=w,null!=o&&"function"!=typeof l.type)for(h=o.length;h--;)null!=o[h]&&a(o[h]);for(h=_;h--;)null!=k[h]&&A(k[h],k[h]);if(g)for(h=0;h<g.length;h++)z(g[h],g[++h],g[++h]);}function b(n,l,u){if(null==u&&(u=[]),null==n||"boolean"==typeof n)l&&u.push(l(null));else if(Array.isArray(n))for(var t=0;t<n.length;t++)b(n[t],l,u);else u.push(l?l("string"==typeof n||"number"==typeof n?v(null,n,null,null):null!=n.__e||null!=n.__c?v(n.type,n.props,n.key,null):n):n);return u}function x(n,l,u,t,i){var o;for(o in u)o in l||P(n,o,null,u[o],t);for(o in l)i&&"function"!=typeof l[o]||"value"===o||"checked"===o||u[o]===l[o]||P(n,o,l[o],u[o],t);}function C(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]="number"==typeof u&&!1===c.test(l)?u+"px":null==u?"":u;}function P(n,l,u,t,i){var o,r,f,e,c;if(i?"className"===l&&(l="class"):"class"===l&&(l="className"),"key"===l||"children"===l);else if("style"===l)if(o=n.style,"string"==typeof u)o.cssText=u;else{if("string"==typeof t&&(o.cssText="",t=null),t)for(r in t)u&&r in u||C(o,r,"");if(u)for(f in u)t&&u[f]===t[f]||C(o,f,u[f]);}else"o"===l[0]&&"n"===l[1]?(e=l!==(l=l.replace(/Capture$/,"")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(t||n.addEventListener(l,N,e),(n.l||(n.l={}))[l]=u):n.removeEventListener(l,N,e)):"list"!==l&&"tagName"!==l&&"form"!==l&&"type"!==l&&!i&&l in n?n[l]=null==u?"":u:"function"!=typeof u&&"dangerouslySetInnerHTML"!==l&&(l!==(l=l.replace(/^xlink:?/,""))?null==u||!1===u?n.removeAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase()):n.setAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase(),u):null==u||!1===u?n.removeAttribute(l):n.setAttribute(l,u));}function N(l){this.l[l.type](n.event?n.event(l):l);}function T(l,u,t,i,o,r,f,e,c){var a,h,v,p,m,w,g,k,x,C,P=u.type;if(void 0!==u.constructor)return null;(a=n.__b)&&a(u);try{n:if("function"==typeof P){if(k=u.props,x=(a=P.contextType)&&i[a.__c],C=a?x?x.props.value:a.__:i,t.__c?g=(h=u.__c=t.__c).__=h.__E:("prototype"in P&&P.prototype.render?u.__c=h=new P(k,C):(u.__c=h=new d(k,C),h.constructor=P,h.render=D),x&&x.sub(h),h.props=k,h.state||(h.state={}),h.context=C,h.__n=i,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=P.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,P.getDerivedStateFromProps(k,h.__s))),p=h.props,m=h.state,v)null==P.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==P.getDerivedStateFromProps&&k!==p&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(k,C),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(k,h.__s,C)){for(h.props=k,h.state=h.__s,h.__d=!1,h.__v=u,u.__e=t.__e,u.__k=t.__k,h.__h.length&&f.push(h),a=0;a<u.__k.length;a++)u.__k[a]&&(u.__k[a].__=u);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(k,h.__s,C),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(p,m,w);});}h.context=C,h.props=k,h.state=h.__s,(a=n.__r)&&a(u),h.__d=!1,h.__v=u,h.__P=l,a=h.render(h.props,h.state,h.context),u.__k=b(null!=a&&a.type==y&&null==a.key?a.props.children:a),null!=h.getChildContext&&(i=s(s({},i),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(w=h.getSnapshotBeforeUpdate(p,m)),_(l,u,t,i,o,r,f,e,c),h.base=u.__e,h.__h.length&&f.push(h),g&&(h.__E=h.__=null),h.__e=null;}else u.__e=j(t.__e,u,t,i,o,r,f,c);(a=n.diffed)&&a(u);}catch(l){n.__e(l,u,t);}return u.__e}function $(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u);});}catch(l){n.__e(l,u.__v);}});}function j(n,l,u,t,i,o,r,c){var s,a,h,v,p,y=u.props,d=l.props;if(i="svg"===l.type||i,null==n&&null!=o)for(s=0;s<o.length;s++)if(null!=(a=o[s])&&(null===l.type?3===a.nodeType:a.localName===l.type)){n=a,o[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(d);n=i?document.createElementNS("http://www.w3.org/2000/svg",l.type):document.createElement(l.type),o=null;}if(null===l.type)null!=o&&(o[o.indexOf(n)]=null),y!==d&&n.data!=d&&(n.data=d);else if(l!==u){if(null!=o&&(o=e.slice.call(n.childNodes)),h=(y=u.props||f).dangerouslySetInnerHTML,v=d.dangerouslySetInnerHTML,!c){if(y===f)for(y={},p=0;p<n.attributes.length;p++)y[n.attributes[p].name]=n.attributes[p].value;(v||h)&&(v&&h&&v.__html==h.__html||(n.innerHTML=v&&v.__html||""));}x(n,d,y,i,c),l.__k=l.props.children,v||_(n,l,u,t,"foreignObject"!==l.type&&i,o,r,f,c),c||("value"in d&&void 0!==d.value&&d.value!==n.value&&(n.value=null==d.value?"":d.value),"checked"in d&&void 0!==d.checked&&d.checked!==n.checked&&(n.checked=d.checked));}return n}function z(l,u,t){try{"function"==typeof l?l(u):l.current=u;}catch(l){n.__e(l,t);}}function A(l,u,t){var i,o,r;if(n.unmount&&n.unmount(l),(i=l.ref)&&(i.current&&i.current!==l.__e||z(i,null,u)),t||"function"==typeof l.type||(t=null!=(o=l.__e)),l.__e=l.__d=null,null!=(i=l.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount();}catch(l){n.__e(l,u);}i.base=i.__P=null;}if(i=l.__k)for(r=0;r<i.length;r++)i[r]&&A(i[r],u,t);null!=o&&a(o);}function D(n,l,u){return this.constructor(n,u)}function E(l,u,t){var i,r,c;n.__&&n.__(l,u),r=(i=t===o)?null:t&&t.__k||u.__k,l=h(y,null,[l]),c=[],T(u,(i?u:t||u).__k=l,r||f,f,void 0!==u.ownerSVGElement,t&&!i?[t]:r?null:e.slice.call(u.childNodes),c,t||f,i),$(c,l);}function H(n,l){E(n,l,o);}function I(n,l){return l=s(s({},n.props),l),arguments.length>2&&(l.children=e.slice.call(arguments,2)),v(n.type,l,l.key||n.key,l.ref||n.ref)}function L(n){var l={},u={__c:"__cC"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var t,i=this;return this.getChildContext||(t=[],this.getChildContext=function(){return l[u.__c]=i,l},this.shouldComponentUpdate=function(l){n.value!==l.value&&t.some(function(n){n.context=l.value,g(n);});},this.sub=function(n){t.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){t.splice(t.indexOf(n),1),l&&l.call(n);};}),n.children}};return u.Consumer.contextType=u,u}n={__e:function(n,l){for(var u,t;l=l.__;)if((u=l.__c)&&!u.__)try{if(u.constructor&&null!=u.constructor.getDerivedStateFromError&&(t=!0,u.setState(u.constructor.getDerivedStateFromError(n))),null!=u.componentDidCatch&&(t=!0,u.componentDidCatch(n)),t)return g(u.__E=u)}catch(l){n=l;}throw n}},l=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=this.__s!==this.state?this.__s:this.__s=s({},this.state),"function"==typeof n&&(n=n(u,this.props)),n&&s(u,n),null!=n&&this.__v&&(this.__e=!1,l&&this.__h.push(l),g(this));},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),g(this));},d.prototype.render=y,u=[],t="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,o=f,r=0;

  var common = createCommonjsModule(function (module) {
    'use strict';
    /**
     * Common utility functions
     */

    var commonUtil = module.exports = {
      /**
       * Local soped window. It allows tests to mock the window object if needed.
       * @type {Object}
       */
      window: window,

      /**
       * Recursively apply config settings.
       *
       * @param  {Object} defaults  Base object to be overriden for this level.
       * @param  {Object} config    Overrides for this level, if any.
       * @param  {Integer} maxDepth Maximum number of recursion.
       * @return {Object}           Recursively overriden object.
       */
      deepOverride: function deepOverride(defaults, config, maxDepth) {
        /*jshint maxcomplexity:8*/
        var options = {};

        if (maxDepth === undefined) {
          maxDepth = Infinity;
        } // Apply config to defaults.


        for (var p in defaults) {
          if (defaults.hasOwnProperty(p)) {
            // Recurse into objects only. Arrays are treated as overridable values.
            var notNull = defaults[p] !== null;
            var isObject = _typeof(defaults[p]) === 'object';
            isObject = isObject && !commonUtil.isArray(defaults[p]);

            if (config === undefined) {
              options[p] = defaults[p];
            } else if (maxDepth > 0 && notNull && isObject) {
              options[p] = commonUtil.deepOverride(defaults[p], config[p], maxDepth - 1);
            } else if (!config.hasOwnProperty(p)) {
              options[p] = defaults[p];
            } else if (config[p] !== undefined) {
              options[p] = config[p];
            }
          }
        }

        return options;
      },

      /**
       * Determines whether a variable is an array in a cross-browser way.
       * @param  {Object}  arg An object.
       * @return {Boolean}     True if arg is an array.
       */
      isArray: function isArray(arg) {
        if (Array.isArray) {
          return Array.isArray(arg);
        } else {
          return Object.prototype.toString.call(arg) === '[object Array]';
        }
      },

      /**
       * Determines whether an object is empty.
       * @param  {Object}   obj An object.
       * @return {Boolean}  true if obj is empty.
       */
      isEmptyObject: function isEmptyObject(obj) {
        var name;

        for (name in obj) {
          if (obj.hasOwnProperty(name)) {
            return false;
          }
        }

        return obj !== null;
      },

      /**
       * Iterates over an object or array and applies a function to each element.
       *
       * @param  {Object|Array} object An object or array. It will be iterated over.
       * @param  {Function} iterator A function applied to all items in object.
       * @return {Array} new mapped array
       */
      map: function map(object, iterator) {
        // Never iterate over null objects.
        if (object === null) {
          return;
        }

        var results = [];

        if (Object.keys) {
          var keys = Object.keys(object);
          var nKeys = keys.length;

          for (var i = 0; i < nKeys; i++) {
            var key = keys[i];
            results.push(iterator(key, object[key]));
          }
        } else {
          // Polifill for IE<9 since for..in is slower than the above option.
          for (var k in object) {
            if (object.hasOwnProperty(k)) {
              results.push(iterator(k, object[k]));
            }
          }
        }

        return results;
      },

      /**
       * Iterates over elements of array,
       * returning an array of all elements predicate returns truthy for.
       *
       * @param  {Array} The array to iterate over.
       * @param  {Function} The predicate function invoked per iteration.
       * @return {Array} new filtered array
       */
      filter: function filter(array, predicate) {
        // Never iterate over null objects or non-array
        if (array === null || !this.isArray(array)) {
          return;
        }

        var results = [];

        for (var i = 0; i < array.length; i++) {
          if (predicate(array[i])) {
            results.push(array[i]);
          }
        }

        return results;
      },

      /**
       * Executes given function on the next process tick
       *
       * This implementation of process.nextTick from Node.js is inefficient.
       * If this becomes a problem, we can replace it with the solution found here:
       * timnew.me/blog/2014/06/23/process-nexttick-implementation-in-browser
       *
       * @param  {Function} Function to execute
       */
      nextTick: function nextTick(fn) {
        setTimeout(fn, 0);
      },

      /**
       * Adds styles to the page.
       * Creates a style tag with the contents of css.
       *
       * @param  {String} css String with styles.
       */
      appendStyles: function appendStyles(css) {
        var head = document.head || document.getElementsByTagName('head')[0];
        var styleElement = document.createElement('style');
        styleElement.type = 'text/css';
        /**
         * @font-face fix.
         * IE8 does not support to add @font-face definitions on CSS that
         * are not attached to the DOM yet, so we must add the style tag first.
         */

        head.appendChild(styleElement); //  handle differnt methods for adding css to the style element

        if (styleElement.styleSheet) {
          styleElement.styleSheet.cssText = css; // Also set innerHTML for by IE 9/10.

          try {
            styleElement.innerHTML = css;
          } catch (e) {// Ignore ie8 errors.
          }
        } else {
          styleElement.appendChild(document.createTextNode(css));
        }
      },

      /**
       * Adds an external script to the page.
       *
       * @param  {String} src the url of the script to add.
       */
      appendScript: function appendScript(src) {
        var head = document.head || document.getElementsByTagName('head')[0];
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = src;
        head.appendChild(script);
      },

      /**
       * Ensures a variable/script include is in the page.
       * Returns a [fake] promise with a then(callback) function
       *
       * @param  {String} variableName the name of the global variable to look for
       * @param  {Object} options A hash of options
       *    Valid keys are: url (script to include), interval (time between checks)
       * @todo Could write another function to recursively call
       *       this with a dependency chain
       */
      ensureScript: function ensureScript(variableName, options) {
        // Interval between lookups
        var interval = options.interval ? options.interval : 10; // True when script is loaded

        var loaded = false;
        var callback = false;

        var check = function check() {
          var exists = true;
          var parts = variableName.split('.');
          var baseObject = window;

          for (var i = 0; exists && i < parts.length; i++) {
            if (baseObject.hasOwnProperty) {
              exists = baseObject.hasOwnProperty(parts[i]);
            } else {
              // Supports IE<8 not having window.hasOwnProperty
              exists = baseObject[parts[i]] ? true : false;
            }

            baseObject = baseObject[parts[i]];
          }

          if (exists) {
            loaded = true;

            if (callback) {
              callback.call();
            }
          } else {
            if (options.url) {
              commonUtil.appendScript(options.url);
              delete options.url;
            }

            setTimeout(check, interval);
          }
        };

        check();
        return {
          then: function then(cb) {
            // If already loaded
            if (loaded) {
              cb.call();
            } else {
              // Set this up to be called once loaded
              callback = cb;
            }
          }
        };
      },

      /**
       * Checks a class exists on an element
       *
       * @param {Object} elem   Object to check for class name
       * @param {String} name   CSS class name
       * @return {Boolean}      Whether name exists on elem
       */
      hasClass: function hasClass(elem, name) {
        var elemClassName = ' ' + elem.className + ' ';
        var searchClassName = ' ' + name + ' ';
        return elemClassName.indexOf(searchClassName) > -1;
      },

      /**
       * Toggle a class on an element
       *
       * @param {Object} elem      Object to toggle class name on
       * @param {String} name      CSS class name
       * @param {Boolean} [state]  Set to `true` to add class, `false` to remove, `undefined` to toggle
       */
      toggleClass: function toggleClass(elem, name, state) {
        if (!elem) return;
        var hasClass = typeof state === 'boolean' ? !state : commonUtil.hasClass(elem, name);

        if (hasClass) {
          commonUtil.removeClass(elem, name);
        } else {
          commonUtil.addClass(elem, name);
        }
      },

      /**
       * Add a class on an element
       *
       * @param {Object} elem   Object to addclass name on
       * @param {String} name   CSS class name
       */
      addClass: function addClass(elem, name) {
        if (!elem) return;
        var classes = elem.className.split(/\s+/);

        if (classes.indexOf(name) === -1) {
          classes.splice(classes.length, 0, name);
          elem.className = classes.join(' ');
        }
      },

      /**
       * Remove a class on an element
       *
       * @param {Object} elem   Object to remove class name on
       * @param {String} name   CSS class name
       */
      removeClass: function removeClass(elem, name) {
        if (!elem) return;
        var classes = elem.className.split(/\s+/);

        for (var i = classes.length; i >= 0; i--) {
          if (classes[i] === name) {
            classes.splice(i, 1);
            elem.className = classes.join(' ');
          }
        }
      },

      /**
       * Returns the second and top level domain
       *
       * @param  {String} fallback fallback domain if match fails
       * @return {String} second and top level domain, or fallback if match fails
       */
      getCurrentDomain: function getCurrentDomain(fallback) {
        var domain = commonUtil.window.location.hostname; // matches second and top level domain
        // For 'www.leagueoflegends.co.kr' it matches 'leagueoflegends.co.kr'

        var re = /([a-z]+\.[a-z]{2,4}(\.[a-z]{2,4})?)$/i;
        var match = domain.match(re);

        if (match !== null) {
          return match[1];
        }

        return fallback;
      },

      /**
       * Creates Cross-Origin Resource Sharing (CORS) that is supports the
       * following browsers:
       * -Chrome 3+
       * -Firefox 3.5+
       * -Opera 12+
       * -Safari 4+
       * -Internet Explorer 8+
       * @param method
       * @param url
       * @return Open request or null if CORS is not supported by the browser
       */
      createCORSRequest: function createCORSRequest(method, url) {
        var xhr = new XMLHttpRequest();

        if ('withCredentials' in xhr) {
          // Check if the XMLHttpRequest object has a "withCredentials" property.
          // "withCredentials" only exists on XMLHTTPRequest2 objects.
          xhr.open(method, url, true);
        } else if (typeof XDomainRequest != 'undefined') {
          // Otherwise, check if XDomainRequest.
          // XDomainRequest only exists in IE, and is IE's way of making CORS
          // requests.
          xhr = new XDomainRequest();
          xhr.open(method, url);
        } else {
          // Otherwise, CORS is not supported by the browser.
          xhr = null;
        }

        return xhr;
      },

      /**
       * Allows a plugin add Event handling in a cleaner way.
       *
       * @param {Object} obj    Object triggering the event.
       * @param {String} type   The type of event.
       * @param {Function} fn   The function to execute when event fires.
       */
      addEvent: function addEvent(obj, type, fn) {
        if (!obj) {
          return;
        }

        if (obj.attachEvent) {
          obj['e' + type + fn] = fn;

          obj[type + fn] = function () {
            obj['e' + type + fn](commonUtil.window.event);
          };

          obj.attachEvent('on' + type, obj[type + fn]);
        } else {
          obj.addEventListener(type, fn, false);
        }
      },

      /**
       * Allows a plugin remove Event handling in a cleaner way.
       *
       * @param {Object} obj    Object triggering the event.
       * @param {String} type   The type of event.
       * @param {Function} fn   The function to execute when event fires.
       */
      removeEvent: function removeEvent(obj, type, fn) {
        if (!obj) {
          return;
        }

        if (obj.detachEvent) {
          obj.detachEvent('on' + type, obj[type + fn]);
          obj[type + fn] = null;
        } else {
          obj.removeEventListener(type, fn, false);
        }
      },

      /**
       * Sets a cookie in the browser.
       *
       * @param {String} cookie  The cookie name
       * @param {String} value   The value for the cookie
       * @param {Object} options An object with options.
       *   Valid keys are: expires, path, domain, secure.
       */
      setCookie: function setCookie(cookie, value, options) {
        cookie = encodeURIComponent(cookie);
        value = encodeURIComponent(value);
        var cookieString = cookie + '=' + value + ';';
        options = options || {};

        if (options.expires) {
          cookieString = cookieString + 'expires=' + options.expires + ';';
        }

        if (options.path) {
          cookieString = cookieString + 'path=' + options.path + ';';
        }

        if (options.domain && options.domain != 'localhost') {
          cookieString = cookieString + 'domain=' + options.domain + ';';
        }

        if (options.secure) {
          cookieString = cookieString + 'secure;';
        }

        document.cookie = cookieString;
      },

      /**
       * Gets a cookie previously set.
       *
       * @param  {String} cookie the name of the cookie to get.
       * @return {String}        the value of the cookie, or false if not present.
       */
      getCookie: function getCookie(cookie) {
        cookie = encodeURIComponent(cookie);
        var regex = new RegExp(cookie + '=([^;]*)'),
            match = regex.exec(document.cookie);

        if (match) {
          return decodeURIComponent(match[1]);
        }

        return false;
      },

      /**
       * Deletes a cookie.
       *
       */
      delCookie: function delCookie(cookie) {
        commonUtil.setCookie(cookie, '', {
          expires: 'Thu, 01 Jan 1970 00:00:01 GMT'
        });
      },

      /**
       * Converts an HTML string to a dom element
       * Note limitations: https://stackoverflow.com/questions/494143/
       */
      createElementFromHTML: function createElementFromHTML(htmlString) {
        var div = document.createElement('div');
        div.innerHTML = htmlString.trim();
        return div.firstChild;
      },
      isDescendantOfId: function isDescendantOfId(el, id) {
        do {
          if (!el) return false;
          if (el.id === id) return true;
        } while (el = el.parentElement);

        return false;
      },
      isDescendantOfClass: function isDescendantOfClass(el, className) {
        do {
          if (!el) return false;
          if (this.hasClass(el, className)) return true;
        } while (el = el.parentElement);

        return false;
      },
      isDescendantOfEl: function isDescendantOfEl(el, target) {
        if (!target) return false;

        do {
          if (!el) return false;
          if (el === target) return true;
        } while (el = el.parentElement);

        return false;
      },

      /**
       * Responsible for determining what the `global.renderInto` element is if it is passed
       * if the passed value is a valid element by ID or direct HTMLElement reference
       * an HTMLElement will be returned. Otherwise, false will be given back
       * @param {string | HTMLElement} renderInto
       * @return {HTMLElement | false}
       */
      determineRenderIntoElement: function determineRenderIntoElement(renderInto) {
        var el = false;

        if (typeof renderInto === 'string' && document.getElementById(renderInto) !== null) {
          el = document.getElementById(renderInto);
        } else if (renderInto instanceof Object) {
          el = renderInto;
        }

        return el;
      },
      determineDeferredFilePrefix: function determineDeferredFilePrefix() {
        var filePrefix = 'playvalorantfinal';

        if (filePrefix !== 'riotbar.product_identifier') {
          // Not the key?
          filePrefix += '.';
        } else {
          filePrefix = '';
        }

        return filePrefix;
      },

      /**
       * Checks current page URL to see if the link is a match against the regular expression
       * @param {RegExp} regex
       * @return {boolean}
       */
      checkLinkMatch: function checkLinkMatch(regex) {
        if (!regex) {
          return false;
        }

        if (typeof regex === 'string') {
          regex = new RegExp(regex);
        }

        if (!window || !window.location) {
          return false;
        }

        var link = this.getCurrentURLPath();
        return regex.test(link);
      },
      getCurrentURLPath: function getCurrentURLPath() {
        return window.location.pathname;
      },
      logError: function logError(err) {
        console && console.error ? console.error(err) : void 0;
      }
    };
  });
  var common_1 = common.window;
  var common_2 = common.deepOverride;
  var common_3 = common.isArray;
  var common_4 = common.isEmptyObject;
  var common_5 = common.map;
  var common_6 = common.filter;
  var common_7 = common.nextTick;
  var common_8 = common.appendStyles;
  var common_9 = common.appendScript;
  var common_10 = common.ensureScript;
  var common_11 = common.hasClass;
  var common_12 = common.toggleClass;
  var common_13 = common.addClass;
  var common_14 = common.removeClass;
  var common_15 = common.getCurrentDomain;
  var common_16 = common.createCORSRequest;
  var common_17 = common.addEvent;
  var common_18 = common.removeEvent;
  var common_19 = common.setCookie;
  var common_20 = common.getCookie;
  var common_21 = common.delCookie;
  var common_22 = common.createElementFromHTML;
  var common_23 = common.isDescendantOfId;
  var common_24 = common.isDescendantOfClass;
  var common_25 = common.isDescendantOfEl;
  var common_26 = common.determineRenderIntoElement;
  var common_27 = common.determineDeferredFilePrefix;
  var common_28 = common.checkLinkMatch;
  var common_29 = common.getCurrentURLPath;
  var common_30 = common.logError;

  var styles$2 = "/* Breakpoints */\n/* Common Mixins */\n/*\n * SVG styles and reset.\n * Pointer events are set to none due to an IE event.\n * Wrap all SVGs in a container and bind events to that container\n */\n#riotbar-bar svg, #riotbar-subbar .riotbar-footer svg, #riotbar-application-switcher svg {\n  pointer-events: none;\n}\n#riotbar-bar svg.hide, #riotbar-subbar .riotbar-footer svg.hide, #riotbar-application-switcher svg.hide {\n  display: none;\n}\n#riotbar-bar svg.block, #riotbar-subbar .riotbar-footer svg.block, #riotbar-application-switcher svg.block {\n  display: block;\n}\n#riotbar-bar svg.inline-block, #riotbar-subbar .riotbar-footer svg.inline-block, #riotbar-application-switcher svg.inline-block {\n  display: inline-block;\n}\n#riotbar-bar svg.float-left, #riotbar-subbar .riotbar-footer svg.float-left, #riotbar-application-switcher svg.float-left {\n  float: left;\n}\n#riotbar-bar svg.float-right, #riotbar-subbar .riotbar-footer svg.float-right, #riotbar-application-switcher svg.float-right {\n  float: right;\n}\n#riotbar-bar svg use, #riotbar-subbar .riotbar-footer svg use, #riotbar-application-switcher svg use {\n  pointer-events: none;\n}\n\n.riotbar-root {\n  position: static;\n}\n\nbody.riotbar-present {\n  margin: 0px;\n  overflow-x: hidden;\n  padding: 0px;\n  position: static;\n}\n\n.riotbar-clearfix {\n  zoom: 1;\n  /* ie 6/7 */\n}\n.riotbar-clearfix:before, .riotbar-clearfix:after {\n  content: \"\";\n  display: table;\n}\n.riotbar-clearfix:after {\n  clear: both;\n}\n\n.riotbar-base-element {\n  /* RiotBar Reset\n     based on Eric Meyer's CSS Reset, but targeted within .riotbar\n        - http://meyerweb.com/eric/tools/css/reset/\n     Note\n       - removed html & body selectors, which don't apply for .riotbar\n       - To optimize the generated css, we have commented out some unused selectors\n  */\n  /* HTML5 display-role reset for older browsers */\n  /*\n    @TODO: do we want to size some things to the size of the content?\n    - the locale switcher would be a good example of something where this would apply.\n\n    We can creat a new class like this which can be applied to elements like the `riotbar-subbar` ...\n       ... which perhaps should be renamed the `riotbar-document-bar`\n\n    .riotbar-docwidth {\n      width: 1000px;\n      width: 100%;\n      margin: 0 auto;\n      padding: 0 10px;\n    }\n\n    This width attribute of this css would then become a configuration option,\n    which apps could override.  We would use js to set the width property of the class.\n    This way our templates and css can easily adapt to the various desktop page widths that we encounter.\n    The configuration option might not be a simple width.  Perhaps, if we provide a breakpoint declaration\n    system in the configs, then we cana more complex breakpoint system rule s\n\n\n   */\n}\n.riotbar-base-element,\n.riotbar-base-element div, .riotbar-base-element span,\n.riotbar-base-element h1, .riotbar-base-element h2, .riotbar-base-element h3, .riotbar-base-element h4, .riotbar-base-element h5, .riotbar-base-element h6,\n.riotbar-base-element a,\n.riotbar-base-element img,\n.riotbar-base-element ol, .riotbar-base-element ul, .riotbar-base-element li,\n.riotbar-base-element strong, .riotbar-base-element em {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  font-size: 100%;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  vertical-align: baseline;\n  /* prevent text selection */\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  /* Fix webkit fonts */\n  -webkit-font-smoothing: antialiased;\n}\n.riotbar-base-element:lang(ar),\n.riotbar-base-element div:lang(ar), .riotbar-base-element span:lang(ar),\n.riotbar-base-element h1:lang(ar), .riotbar-base-element h2:lang(ar), .riotbar-base-element h3:lang(ar), .riotbar-base-element h4:lang(ar), .riotbar-base-element h5:lang(ar), .riotbar-base-element h6:lang(ar),\n.riotbar-base-element a:lang(ar),\n.riotbar-base-element img:lang(ar),\n.riotbar-base-element ol:lang(ar), .riotbar-base-element ul:lang(ar), .riotbar-base-element li:lang(ar),\n.riotbar-base-element strong:lang(ar), .riotbar-base-element em:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n.riotbar-base-element:lang(ru),\n.riotbar-base-element div:lang(ru), .riotbar-base-element span:lang(ru),\n.riotbar-base-element h1:lang(ru), .riotbar-base-element h2:lang(ru), .riotbar-base-element h3:lang(ru), .riotbar-base-element h4:lang(ru), .riotbar-base-element h5:lang(ru), .riotbar-base-element h6:lang(ru),\n.riotbar-base-element a:lang(ru),\n.riotbar-base-element img:lang(ru),\n.riotbar-base-element ol:lang(ru), .riotbar-base-element ul:lang(ru), .riotbar-base-element li:lang(ru),\n.riotbar-base-element strong:lang(ru), .riotbar-base-element em:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n.riotbar-base-element:lang(ko), .riotbar-base-element:lang(kr),\n.riotbar-base-element div:lang(ko),\n.riotbar-base-element div:lang(kr), .riotbar-base-element span:lang(ko), .riotbar-base-element span:lang(kr),\n.riotbar-base-element h1:lang(ko),\n.riotbar-base-element h1:lang(kr), .riotbar-base-element h2:lang(ko), .riotbar-base-element h2:lang(kr), .riotbar-base-element h3:lang(ko), .riotbar-base-element h3:lang(kr), .riotbar-base-element h4:lang(ko), .riotbar-base-element h4:lang(kr), .riotbar-base-element h5:lang(ko), .riotbar-base-element h5:lang(kr), .riotbar-base-element h6:lang(ko), .riotbar-base-element h6:lang(kr),\n.riotbar-base-element a:lang(ko),\n.riotbar-base-element a:lang(kr),\n.riotbar-base-element img:lang(ko),\n.riotbar-base-element img:lang(kr),\n.riotbar-base-element ol:lang(ko),\n.riotbar-base-element ol:lang(kr), .riotbar-base-element ul:lang(ko), .riotbar-base-element ul:lang(kr), .riotbar-base-element li:lang(ko), .riotbar-base-element li:lang(kr),\n.riotbar-base-element strong:lang(ko),\n.riotbar-base-element strong:lang(kr), .riotbar-base-element em:lang(ko), .riotbar-base-element em:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n.riotbar-base-element ol, .riotbar-base-element ul {\n  list-style: none;\n}\n.riotbar-base-element,\n.riotbar-base-element * {\n  box-sizing: border-box;\n  position: static;\n  /* default to ensure overrides from other websites don't mess with us */\n}\n.riotbar-base-element .riotbar-pagewidth {\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0px;\n}\n.riotbar-base-element a,\n.riotbar-base-element a:link,\n.riotbar-base-element a:visited {\n  text-decoration: none;\n  color: #F9F9F9;\n}\n\n#riotbar-bar-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin: 0;\n  border: 0;\n  width: 100%;\n}\n#riotbar-bar-wrapper.riotbar-sticky {\n  position: fixed;\n  z-index: 10000;\n}\n\n#riotbar-bar {\n  background-color: #111111;\n  border-bottom: 2px solid #333333;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  font-size: 14px !important;\n  font-weight: bold;\n  height: 80px;\n  line-height: normal;\n  position: relative;\n  text-align: left;\n  width: 100%;\n  z-index: 3000000;\n}\n#riotbar-bar .sub-menu-header-icon {\n  color: #F9F9F9;\n}\n#riotbar-bar .sub-menu-header-icon svg, #riotbar-bar .sub-menu-header-icon span {\n  display: none;\n  float: left;\n}\n#riotbar-bar:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-bar:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-bar:lang(ko), #riotbar-bar:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-bar .riotbar-navbar-separator {\n  border-left: 2px solid #7E7E7E;\n  display: inline-block;\n  font-size: 14px;\n  height: 30px;\n  margin-left: 0.25em;\n  margin-right: 0.25em;\n  margin-top: 24px;\n  vertical-align: top;\n  opacity: 0.4;\n}\n#riotbar-bar .riotbar-navbar-separator.riotbar-title-separator {\n  margin-right: 0.85em;\n}\n#riotbar-bar .riotbar-bar-content {\n  text-align: center;\n  height: 80px;\n  flex: 1;\n}\n@media (max-width: 1024px) {\n  #riotbar-bar .riotbar-bar-content {\n    padding-left: 0;\n  }\n}\n#riotbar-bar .riotbar-left-content, #riotbar-bar .riotbar-content {\n  opacity: 1;\n  transition: opacity 0.5s cubic-bezier(0.06, 0.81, 0, 0.98) 0s;\n}\n#riotbar-bar .riotbar-left-content {\n  height: 80px;\n  padding-top: 15px;\n  padding-right: 30px;\n}\n@media (max-width: 1024px) {\n  #riotbar-bar .riotbar-left-content {\n    padding-right: 0;\n  }\n}\n#riotbar-bar.sidebar-open .riotbar-bar-content, #riotbar-bar.sidebar-open .riotbar-left-content {\n  opacity: 0.25;\n}\n#riotbar-bar .riotbar-right-mobile-content {\n  display: none;\n  right: 70px;\n}\n@media (max-width: 1024px) {\n  #riotbar-bar .riotbar-right-mobile-content {\n    display: block;\n  }\n  #riotbar-bar .riotbar-right-mobile-content #riotbar-service-status-messages {\n    right: -10px;\n  }\n}\n#riotbar-bar .riotbar-right-content, #riotbar-bar .riotbar-right-mobile-content {\n  bottom: 0;\n  top: 0;\n}\n@media (max-width: 1024px) {\n  #riotbar-bar.riotbar-mobile-responsive .riotbar-right-content .riotbar-navmenu-dropdown {\n    transform: translateX(100%);\n    width: 315px;\n    overflow-y: auto;\n  }\n}\n#riotbar-bar .riotbar-right-content {\n  padding-right: 16px;\n  right: 0px;\n}\n@media (max-width: 1024px) {\n  #riotbar-bar .riotbar-right-content {\n    padding-right: 0;\n  }\n  #riotbar-bar .riotbar-right-content #riotbar-service-status, #riotbar-bar .riotbar-right-content #riotbar-account {\n    display: none;\n  }\n}\n#riotbar-bar .riotbar-right-content .riotbar-right-content-icons {\n  margin: 0px 12px;\n  float: left;\n  white-space: nowrap;\n  color: #F9F9F9;\n}\n#riotbar-bar .riotbar-right-content .riotbar-right-content-icons .lang-switch-trigger {\n  cursor: pointer;\n  display: block;\n}\n#riotbar-bar .riotbar-right-content .riotbar-right-content-icons .riotbar-navmenu-right-icon {\n  float: left;\n}\n#riotbar-bar .riotbar-right-content .riotbar-right-content-icons .riotbar-navmenu-right-icon .lang-switch-trigger svg {\n  margin-top: 32px;\n  pointer-events: none;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown {\n  background: #212121;\n  border-top: 2px solid #262626;\n  box-shadow: -3px 3px 6px rgba(0, 0, 0, 0.5);\n  margin: 0;\n  opacity: 0;\n  overflow: visible;\n  padding-bottom: 18px;\n  position: fixed;\n  height: 100%;\n  text-align: left;\n  transform: translateY(-5%);\n  top: 0px;\n  right: 0;\n  visibility: hidden;\n  width: 460px;\n  z-index: 10;\n  transition: transform 300ms, opacity 300ms;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .lang-switch-dropdown {\n  z-index: 11;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown a {\n  padding-left: 18px;\n  padding-right: 18px;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown.riotbar-click-active {\n  visibility: visible;\n  transform: translateX(0%);\n  opacity: 1;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown.slide-out {\n  visibility: visible;\n  transform: translateX(100%);\n  opacity: 1;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .sub-menu-header {\n  height: 78px;\n  background-color: #111111;\n  border-bottom: 2px solid #262626;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .sub-menu-header a {\n  cursor: pointer;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .sub-menu-header .sub-menu-header-text {\n  font-size: 18px;\n  position: absolute;\n  top: 22px;\n  left: 40px;\n  color: #F9F9F9;\n  text-overflow: ellipsis;\n  max-width: 200px;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .sub-menu-header .sub-menu-back {\n  position: absolute;\n  top: 20px;\n  height: 30px;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .sub-menu-header .sub-menu-back svg {\n  display: inline-block;\n  margin-top: 12px;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .sub-menu-header .sub-menu-close {\n  position: absolute;\n  top: 21px;\n  right: 31px;\n  width: 32px;\n  height: 32px;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .sub-menu-header .sub-menu-close svg {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .side-menu-icon {\n  position: absolute;\n  top: 28px;\n  right: 30px;\n  width: 10px;\n  height: 10px;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-dropdown .side-menu-icon svg {\n  display: block;\n}\n#riotbar-bar .riotbar-right-content .riotbar-navmenu-touchpoints, #riotbar-bar .riotbar-right-content .riotbar-navmenu-links {\n  transition: opacity 0.2s linear;\n}\n#riotbar-bar .riotbar-right-content.riotbar-click-active .riotbar-navmenu-touchpoints {\n  display: block;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link {\n  position: relative;\n  display: block;\n  font-size: 16px;\n  font-weight: 800;\n  margin: 0;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-transform: uppercase;\n  transition: color 1s cubic-bezier(0.06, 0.81, 0, 0.98);\n  border-bottom: 1px solid #111111;\n  cursor: pointer;\n  letter-spacing: 0.1em;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link.disabled {\n  color: #7E7E7E;\n  cursor: default;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link.disabled svg {\n  position: absolute;\n  right: 25px;\n  top: 25px;\n  fill: #7E7E7E;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link.riotbar-active-link {\n  background-color: #333333;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link:lang(ar) {\n  letter-spacing: 0;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link.riotbar-active-link {\n  color: #F9F9F9;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link:last-child {\n  margin-bottom: 0;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link.show-auth-sub-menu {\n  text-transform: none;\n  background-color: #171717;\n  letter-spacing: 0;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link.show-auth-sub-menu svg.arrow-down {\n  margin-left: 10px;\n  margin-bottom: 3px;\n  transform: rotate(270deg);\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link .sideMenuIcons {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  width: 100px;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link .sideMenuIcons .lang-switch-trigger {\n  width: 32px;\n  height: 32px;\n  position: absolute;\n  right: 31px;\n  top: 5px;\n  padding: 0;\n  border-radius: 16px;\n  background-color: #212121;\n}\n#riotbar-bar .riotbar-right-content a.riotbar-navmenu-link .sideMenuIcons .lang-switch-trigger svg {\n  position: absolute;\n  top: 9px;\n  left: 9px;\n}\n#riotbar-bar .riotbar-right-content.riotbar-menu-transition .riotbar-navmenu-touchpoints, #riotbar-bar .riotbar-right-content.riotbar-menu-transition .riotbar-navmenu-links {\n  opacity: 0;\n}\n#riotbar-bar .riotbar-right-content.riotbar-show-links .riotbar-navmenu-links {\n  display: block;\n}\n#riotbar-bar #riotbar-mobile-nav {\n  display: none;\n  margin-right: 10px;\n  margin-left: 10px;\n}\n#riotbar-bar #riotbar-mobile-nav a {\n  margin-top: 23px;\n  display: inline-block;\n  cursor: pointer;\n}\n@media (max-width: 1024px) {\n  #riotbar-bar #riotbar-mobile-nav {\n    display: inline !important;\n  }\n}\n\n#riotbar-subbar {\n  position: relative;\n  top: 0px;\n  width: 100%;\n  z-index: 10;\n  /* this z-index is questionable, but is required to place it above the lolkit header */\n  pointer-events: none;\n  text-align: left;\n}\n#riotbar-subbar:lang(ar) {\n  direction: rtl;\n}\n#riotbar-subbar .riotbar-subcontent {\n  pointer-events: auto;\n}\n\n@media screen and (max-width: 1024px) {\n  #riotbar-bar .riotbar-right-content a.riotbar-navmenu-link .sideMenuIcons .lang-switch-trigger {\n    top: 12px;\n    right: 30px;\n  }\n}\n/** Global Keyframes **/\n/* Keyframes */\n/* Basic Fade-in effect */\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-moz-keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n/* Slide in from left animation */\n@keyframes slideInFromLeft {\n  0% {\n    left: -76vw;\n  }\n  100% {\n    left: 0;\n  }\n}\n@-moz-keyframes slideInFromLeft {\n  0% {\n    left: -76vw;\n  }\n  100% {\n    left: 0;\n  }\n}\n@-webkit-keyframes slideInFromLeft {\n  0% {\n    left: -76vw;\n  }\n  100% {\n    left: 0;\n  }\n}\n#riotbar-account {\n  float: left;\n  white-space: nowrap;\n}\n#riotbar-account .riotbar-anonymous-link {\n  cursor: pointer;\n  display: inline-block;\n  margin: 0 15px;\n  transition: color 300ms cubic-bezier(0.06, 0.81, 0, 0.98);\n  vertical-align: middle;\n  font-size: 11px;\n  line-height: 80px;\n  text-transform: uppercase;\n}\n#riotbar-account .riotbar-anonymous-link.theme-button {\n  font-size: 11px;\n  font-weight: 600;\n  text-align: center;\n  border-radius: 2px;\n  line-height: 16px;\n  height: 41px;\n  padding: 12px 0;\n  position: relative;\n  min-width: 129px;\n  max-width: 220px;\n  z-index: 0;\n  text-overflow: ellipsis;\n  margin-top: 20px;\n}\n#riotbar-account .riotbar-anonymous-link.theme-button:hover:before {\n  opacity: 1;\n}\n.i18n-hu #riotbar-account .riotbar-anonymous-link.theme-button {\n  font-size: 13px;\n  letter-spacing: -0.6px;\n}\n#riotbar-account .riotbar-summoner-name {\n  color: #F9F9F9;\n  font-size: 16px;\n  margin-top: 7px;\n  font-weight: bold;\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.7);\n}\n#riotbar-account .riotbar-summoner-name:lang(ar) {\n  line-height: 1.4em;\n}\n@media (max-width: 640px) {\n  .riotbar-mobile-responsive #riotbar-account .riotbar-anonymous-link {\n    display: none;\n  }\n  .riotbar-mobile-responsive #riotbar-account .riotbar-anonymous-link.riotbar-account-action {\n    display: inline-block;\n  }\n}\n\n#riotbar-account-bar {\n  cursor: pointer;\n  float: right;\n  height: 80px;\n  margin-top: 0;\n  padding-top: 23px;\n  padding-right: 16px;\n  padding-left: 16px;\n}\n#riotbar-account-bar .riotbar-summoner-info {\n  float: left;\n  margin: -3px 0 -10px 0;\n}\n#riotbar-account-bar .riotbar-summoner-info svg {\n  margin-left: 11px;\n  margin-bottom: 2px;\n  transition: transform 0.25s ease-out;\n}\n#riotbar-account-bar.active .riotbar-summoner-info svg {\n  transform: rotate(180deg);\n}\n.riotbar-not-responsive #riotbar-account-bar:hover .riotbar-summoner-info svg {\n  transform: rotate(180deg);\n}\n@media (min-width: 1025px) {\n  .riotbar-mobile-responsive #riotbar-account-bar:hover .riotbar-summoner-info svg, .riotbar-mobile-responsive #riotbar-account-bar.YES .riotbar-summoner-info svg {\n    transform: rotate(180deg);\n  }\n}\n@media (max-width: 640px) {\n  .riotbar-mobile-responsive #riotbar-account-bar {\n    border-left: none;\n  }\n  .riotbar-mobile-responsive #riotbar-account-bar .riotbar-summoner-info {\n    display: none;\n  }\n}\n\n#riotbar-account-dropdown-plugins {\n  height: 50px;\n  position: absolute;\n  right: 0;\n  top: 12px;\n}\n\n#riotbar-account-dropdown {\n  background: #111;\n  border-top: 1px solid #262626;\n  box-shadow: -3px 3px 6px rgba(0, 0, 0, 0.5);\n  margin: 0;\n  opacity: 0;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  text-align: left;\n  transform: translateY(-5%);\n  transition: transform 300ms, opacity 300ms;\n  top: 79px;\n  visibility: hidden;\n  z-index: 10;\n}\n#riotbar-account-dropdown .riotbar-account-info {\n  border-bottom: 1px solid #262626;\n  display: none;\n  margin-bottom: 18px;\n  padding-bottom: 18px;\n}\n#riotbar-account-dropdown .riotbar-account-info .riotbar-summoner-name {\n  max-width: 175px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n@media (max-width: 640px) {\n  .riotbar-mobile-responsive #riotbar-account-dropdown .riotbar-account-info {\n    display: block;\n  }\n}\n#riotbar-account.active #riotbar-account-dropdown {\n  opacity: 1;\n  transform: translateX(0%);\n  visibility: visible;\n  width: 200px;\n}\n@media (min-width: 1025px) {\n  #riotbar-account-dropdown {\n    width: 200px;\n  }\n  #riotbar-account:hover #riotbar-account-dropdown {\n    opacity: 1;\n    transform: translateX(0%);\n    visibility: visible;\n  }\n}\n@media (max-width: 1024px) {\n  .riotbar-mobile-responsive #riotbar-account-dropdown {\n    content: \"sidebar\";\n    transform: none;\n    transition: width 300ms, opacity 300ms;\n    width: 0;\n  }\n}\n\n#riotbar-account-dropdown-links {\n  font-size: 0;\n  position: relative;\n  white-space: normal;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link {\n  cursor: pointer;\n  display: block;\n  font-size: 11px;\n  line-height: 1.5em;\n  text-transform: uppercase;\n  transition: color 300ms cubic-bezier(0.06, 0.81, 0, 0.98);\n  width: 200px;\n  padding: 15px 0 15px 15px;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link:lang(ar) {\n  padding: 15px 15px 15px 0;\n  text-align: right;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link .riotbar-link-subtext {\n  color: #a09a8e;\n  display: block;\n  font-size: 11px;\n  text-transform: none;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n}\n#riotbar-account-dropdown-links a.riotbar-account-link .riotbar-link-subtext:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link .riotbar-link-subtext:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link .riotbar-link-subtext:lang(ko), #riotbar-account-dropdown-links a.riotbar-account-link .riotbar-link-subtext:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link .riotbar-link-subtext:lang(ar) {\n  text-align: right;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link:first-child {\n  margin-top: 0;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link:last-child {\n  margin-bottom: 0;\n}\n#riotbar-account-dropdown-links a.riotbar-account-link:hover {\n  background-color: #333333;\n}\n\n#riotbar-account-warning {\n  background-color: #352039;\n  color: #F9F9F9;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  font-size: 12px;\n  font-weight: 600;\n  min-height: 20px;\n  padding: 1px 0 0;\n  position: absolute;\n  width: 100%;\n  margin: 0;\n  text-align: center;\n}\n#riotbar-account-warning:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-account-warning:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-account-warning:lang(ko), #riotbar-account-warning:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-account-warning svg {\n  display: inline-block;\n  line-height: 16px;\n  vertical-align: middle;\n  margin: 0 15px 0 0;\n}\n#riotbar-account-warning svg:lang(ar) {\n  margin: 0 0 0 15px;\n}\n#riotbar-account-warning a {\n  display: inline-block;\n  line-height: 16px;\n  color: #F9F9F9;\n  padding-bottom: 3px;\n  padding-left: 10%;\n  padding-right: 10%;\n}\n#riotbar-account-warning a span {\n  margin-left: 10px;\n  color: #F9F9F9;\n}\n\n#riotbar-alerts-container {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  z-index: 1000;\n}\n#riotbar-alerts-container .riotbar-alert {\n  background-color: #BE29CC;\n  color: #F9F9F9;\n  animation-name: alertSlideUp;\n  animation-duration: 0.25s;\n  animation-fill-mode: forwards;\n}\n#riotbar-alerts-container .riotbar-alert.riotbar-alert-is-closing {\n  animation-name: alertSlideDown;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-inner {\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 1200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n@media (max-width: 1024px) {\n  #riotbar-alerts-container .riotbar-alert .riotbar-alert-inner {\n    flex-direction: column;\n    -ms-flex-direction: column;\n  }\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content {\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  text-align: left;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(ko), #riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-title {\n  padding: 0 0 10px 0;\n  font-size: 1.6rem;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-body {\n  font-size: 1.2rem;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container {\n  padding: 10px 0;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button {\n  max-height: 68px;\n  cursor: pointer;\n  padding: 20px 40px;\n  margin: 0 20px;\n  background-color: #8E1F99;\n  border-radius: 4px;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(ko), #riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:hover {\n  background-color: #7B1385;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:active {\n  background-color: #670770;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button.riotbar-alert-button-secondary {\n  background-color: #b41bc6;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button.riotbar-alert-button-secondary:hover {\n  background-color: #b421be;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button.riotbar-alert-button-secondary:active {\n  background-color: #b429b6;\n}\n@media (max-width: 1024px) {\n  #riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button {\n    margin: 10px 0;\n  }\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-close-container {\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-close-container svg {\n  cursor: pointer;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-close-container svg:hover {\n  opacity: 0.7;\n}\n\n@keyframes alertSlideUp {\n  from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(0%);\n  }\n}\n@keyframes alertSlideDown {\n  from {\n    transform: translateY(0%);\n  }\n  to {\n    transform: translateY(100%);\n  }\n}\n/* Legacy CSS -- to be deleted */\n#riotbar-alerts {\n  position: relative;\n  width: 100%;\n  z-index: 10;\n  /* Any immediate elements will fade in - these are the actual alerts */\n}\n#riotbar-alerts:lang(ar) {\n  direction: rtl;\n}\n#riotbar-alerts > div,\n#riotbar-alerts > p,\n#riotbar-alerts > span {\n  animation: fadeIn 0.75s;\n}\n#riotbar-alerts a:link,\n#riotbar-alerts a:visited {\n  color: #71b5bd;\n  text-decoration: none;\n}\n#riotbar-alerts a.active,\n#riotbar-alerts a:hover,\n#riotbar-alerts a:active {\n  color: #ffffff;\n}\n#riotbar-alerts a.btn-gold-trim:link,\n#riotbar-alerts a.btn-gold-trim:visited {\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  color: #dec58d;\n  font-weight: bold;\n  padding: 2px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  display: inline;\n  display: inline-block;\n  cursor: pointer;\n  background-color: #151515;\n  background: linear-gradient(to bottom, #313131 0%, #000000 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\"#313131\", endColorstr=\"#000000\",GradientType=0 );\n  border: 1px solid #766e4c;\n  text-transform: uppercase;\n  margin: -2px 0 -2px 10px;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ar),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ru),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ko), #riotbar-alerts a.btn-gold-trim:link:lang(kr),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ko),\n#riotbar-alerts a.btn-gold-trim:visited:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ar),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ar) {\n  margin: -2px 10px -2px 0;\n}\n#riotbar-alerts a.btn-gold-trim.active,\n#riotbar-alerts a.btn-gold-trim:hover,\n#riotbar-alerts a.btn-gold-trim:active {\n  color: #f7da9b;\n}\n\n#riotbar-alerts-container {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  z-index: 1000;\n}\n#riotbar-alerts-container .riotbar-alert {\n  background-color: #BE29CC;\n  color: #F9F9F9;\n  animation-name: alertSlideUp;\n  animation-duration: 0.25s;\n  animation-fill-mode: forwards;\n}\n#riotbar-alerts-container .riotbar-alert.riotbar-alert-is-closing {\n  animation-name: alertSlideDown;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-inner {\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 1200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n@media (max-width: 1024px) {\n  #riotbar-alerts-container .riotbar-alert .riotbar-alert-inner {\n    flex-direction: column;\n    -ms-flex-direction: column;\n  }\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content {\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  text-align: left;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(ko), #riotbar-alerts-container .riotbar-alert .riotbar-alert-content:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-title {\n  padding: 0 0 10px 0;\n  font-size: 1.6rem;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-body {\n  font-size: 1.2rem;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container {\n  padding: 10px 0;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button {\n  max-height: 68px;\n  cursor: pointer;\n  padding: 20px 40px;\n  margin: 0 20px;\n  background-color: #8E1F99;\n  border-radius: 4px;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(ko), #riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:hover {\n  background-color: #7B1385;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button:active {\n  background-color: #670770;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button.riotbar-alert-button-secondary {\n  background-color: #b41bc6;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button.riotbar-alert-button-secondary:hover {\n  background-color: #b421be;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button.riotbar-alert-button-secondary:active {\n  background-color: #b429b6;\n}\n@media (max-width: 1024px) {\n  #riotbar-alerts-container .riotbar-alert .riotbar-alert-buttons-container .riotbar-alert-button {\n    margin: 10px 0;\n  }\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-close-container {\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-close-container svg {\n  cursor: pointer;\n}\n#riotbar-alerts-container .riotbar-alert .riotbar-alert-close-container svg:hover {\n  opacity: 0.7;\n}\n\n@keyframes alertSlideUp {\n  from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(0%);\n  }\n}\n@keyframes alertSlideDown {\n  from {\n    transform: translateY(0%);\n  }\n  to {\n    transform: translateY(100%);\n  }\n}\n/* Legacy CSS -- to be deleted */\n#riotbar-alerts {\n  position: relative;\n  width: 100%;\n  z-index: 10;\n  /* Any immediate elements will fade in - these are the actual alerts */\n}\n#riotbar-alerts:lang(ar) {\n  direction: rtl;\n}\n#riotbar-alerts > div,\n#riotbar-alerts > p,\n#riotbar-alerts > span {\n  animation: fadeIn 0.75s;\n}\n#riotbar-alerts a:link,\n#riotbar-alerts a:visited {\n  color: #71b5bd;\n  text-decoration: none;\n}\n#riotbar-alerts a.active,\n#riotbar-alerts a:hover,\n#riotbar-alerts a:active {\n  color: #ffffff;\n}\n#riotbar-alerts a.btn-gold-trim:link,\n#riotbar-alerts a.btn-gold-trim:visited {\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  color: #dec58d;\n  font-weight: bold;\n  padding: 2px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  display: inline;\n  display: inline-block;\n  cursor: pointer;\n  background-color: #151515;\n  background: linear-gradient(to bottom, #313131 0%, #000000 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\"#313131\", endColorstr=\"#000000\",GradientType=0 );\n  border: 1px solid #766e4c;\n  text-transform: uppercase;\n  margin: -2px 0 -2px 10px;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ar),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ru),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ko), #riotbar-alerts a.btn-gold-trim:link:lang(kr),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ko),\n#riotbar-alerts a.btn-gold-trim:visited:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n#riotbar-alerts a.btn-gold-trim:link:lang(ar),\n#riotbar-alerts a.btn-gold-trim:visited:lang(ar) {\n  margin: -2px 10px -2px 0;\n}\n#riotbar-alerts a.btn-gold-trim.active,\n#riotbar-alerts a.btn-gold-trim:hover,\n#riotbar-alerts a.btn-gold-trim:active {\n  color: #f7da9b;\n}\n\n#riotbar-application-switcher {\n  position: relative;\n  top: 0;\n  width: 100%;\n  z-index: 3000001;\n  pointer-events: none;\n  text-align: left;\n  background-color: #F9F9F9;\n  animation: fadeIn 0.25s forwards, appSwitcherSlideDown 0.2s forwards;\n}\n#riotbar-application-switcher:lang(ar) {\n  direction: rtl;\n}\n#riotbar-application-switcher .riotbar-subcontent {\n  pointer-events: auto;\n  color: #111111;\n  width: 100%;\n  padding: 0;\n}\n#riotbar-application-switcher #riotbar-application-switcher-content {\n  min-height: 320px;\n  max-height: 620px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-tabs-wrapper {\n  opacity: 0;\n  animation: fadeIn 0.25s forwards;\n  animation-delay: 0.2s;\n  margin: 0;\n  padding: 24px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-tabs-wrapper > span {\n  margin: 0 16px;\n  font-size: 24px;\n  font-weight: 950;\n  font-family: \"FF Mark W05\", sans-serif;\n  cursor: pointer;\n  color: #C7C7C7;\n  transition: color 0.1s linear;\n}\n#riotbar-application-switcher .riotbar-application-switcher-tabs-wrapper > span:hover {\n  color: #7E7E7E;\n}\n#riotbar-application-switcher .riotbar-application-switcher-tabs-wrapper > span.riotbar-application-selected-tab {\n  color: #333333;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper {\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding: 0 32px 32px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card {\n  float: left;\n  padding: 0 0.4%;\n  -webkit-animation: fadeIn 0.25s forwards;\n  animation: fadeIn 0.25s forwards;\n  opacity: 0;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card:nth-child(1) {\n  animation-delay: 0.15s;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card:nth-child(2) {\n  animation-delay: 0.2s;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card:nth-child(3) {\n  animation-delay: 0.25s;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card:nth-child(4) {\n  animation-delay: 0.3s;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card:nth-child(5) {\n  animation-delay: 0.35s;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card:nth-child(6) {\n  animation-delay: 0.4s;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card img {\n  width: 100%;\n  height: auto;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  display: block;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card img:hover {\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card > a {\n  display: block;\n  position: relative;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card h4 {\n  color: #7E7E7E;\n  font-size: 11px;\n  margin-top: 16px;\n  font-weight: 800;\n  letter-spacing: 0.03em;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card h4:lang(ar) {\n  letter-spacing: 0;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card .riotbar-platform-availability-wrapper {\n  color: #5f5c5c;\n  margin-top: 8px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card .riotbar-platform-availability-wrapper .riotbar-platform-availability-icon-wrapper {\n  float: left;\n  padding-right: 8px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card .riotbar-platform-availability-wrapper .riotbar-platform-availability-icon-wrapper .riotbar-application-platform-icon {\n  height: 11px;\n  width: 11px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card .riotbar-platform-availability-wrapper:after {\n  content: \" \";\n  clear: both;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper:after {\n  content: \" \";\n  clear: both;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-promo {\n  width: 25%;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-game {\n  width: 12.5%;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore {\n  width: 16.6%;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore .riotbar-application-switcher-card-image-wrapper {\n  position: relative;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore .riotbar-application-card-title-wrapper {\n  position: absolute;\n  bottom: 8%;\n  left: 8%;\n  right: 8%;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore h4 {\n  font-family: \"FF Mark W05\", sans-serif;\n  font-weight: 900;\n  color: #f9f9f9;\n  font-size: 20px;\n  line-height: 1.014rem;\n  text-shadow: 1px 1px 1px rgba(51, 51, 51, 0.4);\n  letter-spacing: -0.01rem;\n  transition: transform 0.15s linear;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore h4:lang(ar) {\n  letter-spacing: 0;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder {\n  /* Shimmer styles here */\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder .riotbar-application-switcher-card-image-wrapper {\n  width: 100%;\n  height: 250px;\n  position: relative;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder .riotbar-application-switcher-card-image-wrapper svg {\n  position: absolute;\n  left: calc(50% - 16px);\n  top: calc(50% - 22px);\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder .riotbar-application-card-title-wrapper {\n  width: 60%;\n  height: 30px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder .riotbar-platform-availability-wrapper {\n  width: 30%;\n  height: 22px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder .riotbar-application-switcher-card-image-wrapper,\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder .riotbar-application-card-title-wrapper,\n#riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-placeholder .riotbar-platform-availability-wrapper {\n  animation-name: placeholderShimmer;\n  animation-duration: 3s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  background: #7E7E7E;\n  opacity: 0.1;\n  background-image: linear-gradient(to right, #7E7E7E 0%, #C7C7C7 5%, #7E7E7E 10%, #7E7E7E 100%);\n  background-size: 800px 104px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-arrow {\n  position: absolute;\n  top: -16px;\n  left: 45px;\n}\n#riotbar-application-switcher .riotbar-application-switcher-mobile-header {\n  display: none;\n}\n#riotbar-application-switcher #riotbar-application-switcher-desktop-close {\n  position: absolute;\n  top: 30px;\n  right: 40px;\n  cursor: pointer;\n}\n#riotbar-application-switcher #riotbar-application-switcher-desktop-close svg {\n  vertical-align: middle;\n  display: inline-block;\n}\n#riotbar-application-switcher #riotbar-application-switcher-desktop-visit-riot-games {\n  display: inline-block;\n  padding: 6px 12px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 11px;\n  margin-right: 10px;\n}\n#riotbar-application-switcher #riotbar-application-switcher-desktop-visit-riot-games a {\n  color: #111111;\n}\n#riotbar-application-switcher #riotbar-application-switcher-desktop-visit-riot-games:hover {\n  background-color: #e2e2e2;\n}\n\n#riotbar-page-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background-color: #111111;\n  opacity: 0;\n  transition: opacity 0.15s;\n}\n\nbody.riotbar-application-switcher-open #riotbar-page-overlay {\n  z-index: 500;\n  opacity: 0.7;\n}\n\n@media (max-width: 1024px) {\n  body.riotbar-application-switcher-open {\n    overflow-y: hidden;\n  }\n\n  #riotbar-application-switcher {\n    width: 75vw;\n    height: 100vh;\n    left: -76vw;\n    top: -80px;\n    pointer-events: all;\n    animation: slideInFromLeft 0.3s forwards;\n    overflow-y: auto;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-tabs-wrapper > span {\n    font-size: 18px;\n  }\n  #riotbar-application-switcher #riotbar-application-switcher-desktop-close {\n    display: none;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-arrow {\n    display: none;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper.riotbar-switcher-cards-wrapper-selected-riot-games .riotbar-application-switcher-card {\n    margin: 12px auto;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper.riotbar-switcher-cards-wrapper-selected-explore .riotbar-application-switcher-card {\n    margin: 8px auto;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card h4 {\n    font-size: 12px;\n    margin: 6px 0px 0px;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-game {\n    width: 50%;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-promo {\n    width: 100%;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore {\n    width: 50%;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore h4 {\n    font-size: 24px;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-mobile-header {\n    display: block;\n    width: 100%;\n    position: relative;\n    padding: 24px;\n    border-bottom: 1px solid #e8e8e8;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-mobile-header:after {\n    content: \" \";\n    clear: both;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-mobile-logo-wrapper {\n    display: inline-block;\n    height: 32px;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-close {\n    float: right;\n    top: 32px;\n    right: 32px;\n    cursor: pointer;\n    z-index: 300;\n  }\n}\n@media (max-width: 768px) {\n  #riotbar-application-switcher .riotbar-application-switcher-tabs-wrapper {\n    margin: 24px 24px 18px 4px;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper {\n    overflow-y: hidden;\n    overflow-x: auto;\n    padding: 0 12px 32px;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper.riotbar-switcher-cards-wrapper-selected-explore div.riotbar-application-switcher-card {\n    margin: 6px auto;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper.riotbar-switcher-cards-wrapper-selected-riot-games div.riotbar-application-switcher-card {\n    margin: 12px auto;\n    padding: 0 1.2%;\n  }\n  #riotbar-application-switcher .riotbar-application-switcher-cards-wrapper .riotbar-application-switcher-card-explore h4 {\n    font-size: 14px;\n  }\n}\n/* cards dropdown slide down effect */\n@keyframes appSwitcherSlideDown {\n  0% {\n    top: -80px;\n  }\n  100% {\n    top: 0;\n  }\n}\n@-moz-keyframes appSwitcherSlideDown {\n  0% {\n    top: -80px;\n  }\n  100% {\n    top: 0;\n  }\n}\n@-webkit-keyframes appSwitcherSlideDown {\n  0% {\n    top: -80px;\n  }\n  100% {\n    top: 0;\n  }\n}\n/* Card placeholder shimmer effect */\n@keyframes placeholderShimmer {\n  0% {\n    background-position: -600px 0;\n  }\n  100% {\n    background-position: 600px 0;\n  }\n}\n@-moz-keyframes placeholderShimmer {\n  0% {\n    background-position: -600px 0;\n  }\n  100% {\n    background-position: 600px 0;\n  }\n}\n@-webkit-keyframes placeholderShimmer {\n  0% {\n    background-position: -600px 0;\n  }\n  100% {\n    background-position: 600px 0;\n  }\n}\n.localization-management-list {\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  display: none;\n  width: 240px;\n  background-color: #F9F9F9;\n  border-radius: 4px;\n}\n.localization-management-list:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n.localization-management-list:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n.localization-management-list:lang(ko), .localization-management-list:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n.localization-management-list.active {\n  display: block;\n}\n.localization-management-list ul {\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  font-size: 12px;\n  max-height: 360px;\n  overflow-x: auto;\n}\n.localization-management-list ul:lang(ar) {\n  direction: rtl;\n  text-align: right;\n}\n.localization-management-list ul li {\n  display: block;\n  height: 40px;\n  line-height: 40px;\n  padding: 0;\n  cursor: pointer;\n}\n.localization-management-list ul li .lang-name {\n  text-transform: uppercase;\n  display: inline-block;\n  width: 20px;\n}\n.localization-management-list ul li a, .localization-management-list ul li a:visited, .localization-management-list ul li a:link {\n  transition: color 0.3s linear;\n  position: relative;\n  display: inline-block;\n  text-decoration: none;\n  color: #999999;\n  width: 100%;\n  padding: 0 0 0 20px;\n}\n.localization-management-list ul li a:lang(ar), .localization-management-list ul li a:visited:lang(ar), .localization-management-list ul li a:link:lang(ar) {\n  padding: 0 20px 0 0;\n}\n.localization-management-list ul li a svg, .localization-management-list ul li a:visited svg, .localization-management-list ul li a:link svg {\n  position: absolute;\n  top: 35%;\n  right: 20px;\n  width: 14px;\n  height: 12px;\n  fill: #F9F9F9;\n}\n.localization-management-list ul li a svg:lang(ar), .localization-management-list ul li a:visited svg:lang(ar), .localization-management-list ul li a:link svg:lang(ar) {\n  right: auto;\n  left: 20px;\n}\n.localization-management-list ul li:hover a {\n  color: #111111;\n}\n.localization-management-list ul li.active {\n  cursor: default;\n}\n.localization-management-list ul li.active a {\n  color: #c4202b;\n}\n\n.riotbar-locale .icon-lang-switch {\n  position: relative;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n}\n.riotbar-locale .icon-lang-switch:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n.riotbar-locale .icon-lang-switch:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n.riotbar-locale .icon-lang-switch:lang(ko), .riotbar-locale .icon-lang-switch:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n.riotbar-locale .icon-lang-switch .lang-switch-dropdown {\n  position: absolute;\n  top: 90px;\n  left: -115px;\n  padding: 8px 0 8px 8px;\n}\n@media (max-width: 1024px) {\n  .riotbar-locale .icon-lang-switch .lang-switch-dropdown {\n    left: -155px;\n  }\n}\n.riotbar-locale .icon-lang-switch .lang-switch-dropdown .lang-switch-caret {\n  height: 0;\n  position: absolute;\n  width: 0;\n  left: 113px;\n  top: -20px;\n  border: 10px solid transparent;\n  border-bottom-color: #F9F9F9;\n}\n@media (max-width: 1024px) {\n  .riotbar-locale .icon-lang-switch .lang-switch-dropdown .lang-switch-caret {\n    left: 153px;\n  }\n}\n.sideMenuIcons .riotbar-locale .icon-lang-switch .lang-switch-dropdown {\n  top: 50px;\n  right: 0;\n  left: unset;\n}\n.sideMenuIcons .riotbar-locale .icon-lang-switch .lang-switch-dropdown:before {\n  left: unset;\n  right: 20px;\n  top: -20px;\n}\n.riotbar-locale:lang(ar) {\n  direction: rtl;\n}";

  var navigation = {
    authInfo: null,
    isLoggedIn: null,
    homepageUrl: null,
    init: function init() {
      var RiotBar = window.RiotBar;
      this.authInfo = RiotBar.plugins.account.extensions.getGlobalAccount();
      this.isLoggedIn = this.authInfo.summoner;
    },
    // This is only used on the application switcher to show if the secondary logo needs to be a link or not
    // @TODO maybe this can be theme specific and moved to the theme manager?
    getHomepageUrl: function getHomepageUrl() {
      if (window.RiotBar.config && window.RiotBar.config.navigation && window.RiotBar.config.navigation.homepageUrl) {
        return window.RiotBar.config.navigation.homepageUrl;
      }

      return null;
    }
  };

  // @source https://github.com/developit/preact-markup
  var parserDoc;
  /** Parse markup into a DOM using the given mimetype.
   *	@param {String} markup
   */

  function parseMarkup(markup, type) {
    var doc,
        mime = type === 'html' ? 'text/html' : 'application/xml',
        parserError,
        wrappedMarkup,
        tag; // wrap with an element so we can find it after parsing, and to support multiple root nodes

    if (type === 'html') {
      tag = 'body';
      wrappedMarkup = '<!DOCTYPE html>\n<html><body>' + markup + '</body></html>';
    } else {
      tag = 'xml';
      wrappedMarkup = '<?xml version="1.0" encoding="UTF-8"?>\n<xml>' + markup + '</xml>';
    } // if available (browser support varies), using DOMPaser in HTML mode is much faster, safer and cleaner than injecting HTML into an iframe.


    try {
      doc = new DOMParser().parseFromString(wrappedMarkup, mime);
    } catch (err) {
      parserError = err;
    } // fall back to using an iframe to parse HTML (not applicable for XML, since DOMParser() for XML works in IE9+):


    if (!doc && type === 'html') {
      doc = parserDoc || (parserDoc = buildParserFrame());
      doc.open();
      doc.write(wrappedMarkup);
      doc.close();
    }

    if (!doc) return; // retrieve our wrapper node

    var out = doc.getElementsByTagName(tag)[0],
        fc = out.firstChild;

    if (markup && !fc) {
      out.error = 'Document parse failed.';
    } // pluck out parser errors


    if (fc && String(fc.nodeName).toLowerCase() === 'parsererror') {
      // remove post/preamble to get just the error message as text
      fc.removeChild(fc.firstChild);
      fc.removeChild(fc.lastChild);
      out.error = fc.textContent || fc.nodeValue || parserError || 'Unknown error'; // remove the error from the DOM leaving things nice and tidy

      out.removeChild(fc);
    }

    return out;
  }
  /** A shared frame is used for the fallback HTML parser, built on-demand. */

  function buildParserFrame() {
    if (document.implementation && document.implementation.createHTMLDocument) {
      return document.implementation.createHTMLDocument('');
    }

    var frame = document.createElement('iframe');
    frame.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';
    frame.setAttribute('sandbox', 'allow-forms');
    document.body.appendChild(frame);
    return frame.contentWindow.document;
  }

  // @source https://github.com/developit/preact-markup
  var EMPTY_OBJ = {}; // deeply convert an XML DOM to VDOM

  function toVdom(node, visitor, h, options) {
    walk.visitor = visitor;
    walk.h = h;
    walk.options = options || EMPTY_OBJ;
    return walk(node);
  }

  function walk(n, index, arr) {
    if (n.nodeType === 3) {
      var text = 'textContent' in n ? n.textContent : n.nodeValue || '';

      if (walk.options.trim !== false) {
        var isFirstOrLast = index === 0 || index === arr.length - 1; // trim strings but don't entirely collapse whitespace

        if (text.match(/^[\s\n]+$/g) && walk.options.trim !== 'all') {
          text = ' ';
        } else {
          text = text.replace(/(^[\s\n]+|[\s\n]+$)/g, walk.options.trim === 'all' || isFirstOrLast ? '' : ' ');
        } // skip leading/trailing whitespace
        // if (!text || text===' ' && arr.length>1 && (index===0 || index===arr.length-1)) return null;


        if ((!text || text === ' ') && arr.length > 1 && isFirstOrLast) return null; // if (!text && arr.length>1 && (index===0 || index===arr.length-1)) return null;
        // if (!text || text===' ') return null;
      }

      return text;
    }

    if (n.nodeType !== 1) return null;
    var nodeName = String(n.nodeName).toLowerCase(); // Do not allow script tags unless explicitly specified

    if (nodeName === 'script' && !walk.options.allowScripts) return null;
    var out = walk.h(nodeName, getProps(n.attributes), walkChildren(n.childNodes));
    if (walk.visitor) walk.visitor(out);
    return out;
  }

  function getProps(attrs) {
    var len = attrs && attrs.length;
    if (!len) return null;
    var props = {};

    for (var i = 0; i < len; i++) {
      var _attrs$i = attrs[i],
          name = _attrs$i.name,
          value = _attrs$i.value;
      if (value === '') value = true;

      if (name.substring(0, 2) === 'on' && walk.options.allowEvents) {
        value = new Function(value); // eslint-disable-line no-new-func
      }

      props[name] = value;
    }

    return props;
  }

  function walkChildren(children) {
    var c = children && Array.prototype.map.call(children, walk).filter(exists);
    return c && c.length ? c : null;
  }

  var exists = function exists(x) {
    return x;
  };

  // @source https://github.com/developit/preact-markup
  var EMPTY_OBJ$1 = {};
  /** Convert markup into a virtual DOM.
  *	@param {String} markup		HTML or XML markup (indicate via `type`)
  *	@param {String} [type=xml]	A type to use when parsing `markup`. Either `xml` or `html`.
  *	@param {Function} reviver	The JSX/hyperscript reviver (`h` function) to use. For example, Preact's `h` or `ReactDOM.createElement`.
  *	@param {Object} [map]		Optional map of custom element names to Components or variant element names.
   */

  function markupToVdom(markup, type, reviver, map, options) {
    var dom = parseMarkup(markup, type);

    if (dom && dom.error) {
      throw new Error(dom.error);
    }

    var body = dom && dom.body || dom;
    visitor.map = map || EMPTY_OBJ$1;
    var vdom = body && toVdom(body, visitor, reviver, options);
    visitor.map = null;
    return vdom && vdom.props && vdom.props.children || null;
  }

  function toCamelCase(name) {
    return name.replace(/-(.)/g, function (match, letter) {
      return letter.toUpperCase();
    });
  }

  function visitor(node) {
    var name = (node.type || '').toLowerCase(),
        map = visitor.map; // eslint-disable-next-line no-prototype-builtins

    if (map && map.hasOwnProperty(name)) {
      node.type = map[name];
      node.props = Object.keys(node.props || {}).reduce(function (attrs, attrName) {
        attrs[toCamelCase(attrName)] = node.props[attrName];
        return attrs;
      }, {});
    } else {
      node.type = name.replace(/[^a-z0-9-]/i, '');
    }
  }

  /* Abstract class definition for other themes to extend */

  /**
   *
   */
  var Theme =
  /*#__PURE__*/
  function () {
    function Theme() {
      _classCallCheck(this, Theme);
    }

    _createClass(Theme, [{
      key: "getName",

      /**
       * @return string
       */
      value: function getName() {
        return '';
      }
      /**
       * @return string
       */

    }, {
      key: "getClassNamePrefix",
      value: function getClassNamePrefix() {
        return '';
      }
      /**
       * @return string
       */

    }, {
      key: "getAccentColor",
      value: function getAccentColor() {
        return '#fff';
      }
      /**
       * @return Element | null
       */

    }, {
      key: "getDesktopLogo",
      value: function getDesktopLogo() {
        /* Define function */
        return null;
      }
      /**
       * @return Element | null
       */

    }, {
      key: "getMobileLogo",
      value: function getMobileLogo() {
        /* define function */
        return null;
      }
      /**
       * @return string
       */

    }, {
      key: "getStyles",
      value: function getStyles() {
        return '';
      }
    }]);

    return Theme;
  }();

  var styles$3 = "/* Breakpoints */\n/* Common Mixins */\n.theme-button {\n  background-color: #0bc4e2 !important;\n}\n.theme-button:hover {\n  background-color: #00b2cf !important;\n}\n.theme-button:active {\n  background-color: #00a0ba !important;\n}\n\n#riotbar-bar.lol-theme .riotbar-active-link, #riotbar-bar.lol-theme .riotbar-navbar-link:hover {\n  border-color: #0bc4e2;\n}\n#riotbar-bar.lol-theme #riotbar-navbar {\n  left: 200px;\n}\n#riotbar-bar.lol-theme .nav-dropdown-active a {\n  border-color: #0bc4e2;\n}\n#riotbar-bar.lol-theme .riotbar-navbar-subnav-menu .riotbar-active-sub-item {\n  border-bottom-color: #0bc4e2;\n}\n#riotbar-bar.lol-theme .sub-menu-header-icon svg {\n  margin-top: 20px;\n  margin-left: 15px;\n  display: block;\n}\n\n@media screen and (max-width: 1024px) {\n  #riotbar-bar.lol-theme .riotbar-explore-label svg {\n    display: block;\n    margin-top: 22px;\n  }\n}";

  var LoLTheme =
  /*#__PURE__*/
  function (_Theme) {
    _inherits(LoLTheme, _Theme);

    function LoLTheme() {
      _classCallCheck(this, LoLTheme);

      return _possibleConstructorReturn(this, _getPrototypeOf(LoLTheme).apply(this, arguments));
    }

    _createClass(LoLTheme, [{
      key: "getName",
      value: function getName() {
        return 'lol';
      }
    }, {
      key: "getClassNamePrefix",
      value: function getClassNamePrefix() {
        return 'lol';
      }
    }, {
      key: "getDesktopLogo",
      value: function getDesktopLogo() {
        return h("svg", {
          className: "league",
          width: "30",
          height: "32",
          viewBox: "0 0 30 32",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("g", {
          "clip-path": "url(#clip0)"
        }, h("path", {
          d: "M1.80644 9.75049C0.655032 11.8373 0 14.2271 0 16.7683C0 19.3095 0.655032 21.7015 1.80644 23.7883V9.75049Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M15 2.02222C13.7829 2.02222 12.602 2.16921 11.4688 2.43647V4.75718C12.5907 4.44093 13.7738 4.26721 15 4.26721C22.0218 4.26721 27.7153 9.84627 27.7153 16.7305C27.7153 19.8307 26.5571 22.6659 24.6464 24.8463L24.2838 26.118L23.4814 28.9331C27.4184 26.2761 30.0023 21.8195 30.0023 16.7705C30 8.62355 23.2843 2.02222 15 2.02222Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M11.4688 24.4209H22.9737H23.2253C25.1723 22.4209 26.3713 19.7126 26.3713 16.7305C26.3713 10.5746 21.2806 5.58569 15 5.58569C13.767 5.58569 12.5816 5.78168 11.4688 6.1358V24.4209Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M10.1088 0H1.55029L3.16634 3.29844V28.7038L1.55029 32H21.1922L22.9737 25.7572H10.1088V0Z",
          fill: "#C28F2C"
        })), h("defs", null, h("clipPath", {
          id: "clip0"
        }, h("rect", {
          width: "30",
          height: "32",
          fill: "white"
        }))));
      }
    }, {
      key: "getMobileLogo",
      value: function getMobileLogo() {
        return h("svg", {
          className: "league",
          width: "85",
          height: "32",
          viewBox: "0 0 85 32",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("g", {
          clipPath: "url(#clip0)"
        }, h("path", {
          d: "M59.7261 17.2695V31.749H56.5229L49.6035 22.34V31.749H46.5347V18.6228L45.8335 17.2695H49.801L56.6573 26.8087V17.2695H59.7261Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M27.8345 31.9991C28.8909 32.0048 29.8667 31.8267 30.7619 31.467C31.6582 31.1072 32.4307 30.6082 33.0828 29.9721C33.7337 29.336 34.2444 28.5811 34.6148 27.7098C34.8813 27.0828 35.0531 26.4205 35.1314 25.7238C35.1618 25.4532 35.2143 24.3614 35.1582 23.7025H27.8649L26.5665 26.3131H31.7704C31.5694 27.1376 31.1148 27.8171 30.409 28.3287C29.7019 28.8415 28.8559 29.095 27.8707 29.0904C27.2373 29.087 26.646 28.9637 26.0979 28.7204C25.5498 28.4772 25.073 28.1483 24.6675 27.7338C24.2608 27.3192 23.9441 26.8327 23.7139 26.2743C23.4848 25.7158 23.3715 25.1197 23.375 24.487C23.3785 23.8544 23.4977 23.2594 23.7326 22.7032C23.9675 22.1471 24.29 21.664 24.7014 21.2529C25.1116 20.8418 25.5884 20.522 26.1318 20.2902C26.6752 20.0595 27.263 19.9453 27.8976 19.9476C28.7565 19.9522 29.515 20.1417 30.1752 20.5163C30.8355 20.8909 31.3462 21.4299 31.7085 22.1334L34.588 20.7858C33.9885 19.6141 33.1026 18.6948 31.9305 18.0279C30.7584 17.3621 29.4261 17.0252 27.9338 17.0172C26.8774 17.0115 25.877 17.2034 24.9328 17.5905C23.9874 17.9776 23.1646 18.5098 22.4646 19.1882C21.7646 19.8654 21.2072 20.6579 20.7947 21.5635C20.381 22.4691 20.173 23.4387 20.1671 24.4699C20.1613 25.5011 20.3576 26.473 20.7538 27.3832C21.1511 28.2933 21.6922 29.0904 22.3782 29.7745C23.0641 30.4586 23.8752 30.9999 24.8089 31.3962C25.7415 31.7924 26.7512 31.9934 27.8345 31.9991Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M3.90672 17.2686H0L0.737403 18.7657V30.2542L0 31.7503H8.9657L9.77906 28.917H3.90672V17.2686Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M10.8613 31.7503H19.6003V28.9181H14.0423V25.7411H18.3394L19.1177 23.0185H14.0423V20.0893H19.6003V17.2686H10.8613V31.7503Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M36.2681 31.7503H45.007V28.9181H39.4491V25.7411H43.7473L44.5244 23.0185H39.4491V20.0893H45.007V17.2686H36.2681V31.7503Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M41.8662 14.9822C42.9227 14.9879 43.8985 14.8098 44.7936 14.45C45.69 14.0903 46.4624 13.5912 47.1145 12.9551C47.7654 12.3191 48.2761 11.5642 48.6466 10.6928C48.913 10.0659 49.0848 9.40352 49.1631 8.7069C49.1935 8.43625 49.2461 7.3445 49.19 6.68556H41.8966L40.5983 9.29503H45.8022C45.6011 10.1196 45.1466 10.799 44.4407 11.3107C43.7337 11.8234 42.8876 12.0769 41.9024 12.0724C41.269 12.069 40.6777 11.9456 40.1296 11.7024C39.5816 11.4591 39.1048 11.1302 38.6992 10.7157C38.2926 10.3011 37.9759 9.81464 37.7456 9.25621C37.5166 8.69777 37.4032 8.10164 37.4067 7.46897C37.4102 6.83631 37.5294 6.24132 37.7643 5.68517C37.9992 5.12901 38.3218 4.64595 38.7331 4.23483C39.1433 3.82371 39.6201 3.50395 40.1635 3.27212C40.7069 3.04144 41.2948 2.92724 41.9293 2.92952C42.7883 2.93409 43.5467 3.12366 44.207 3.49824C44.8673 3.87281 45.3779 4.41184 45.7402 5.11531L48.6197 3.76775C48.0202 2.59606 47.1344 1.67675 45.9623 1.00982C44.7901 0.344031 43.4579 0.00714122 41.9656 -0.000852784C40.9091 -0.00656279 39.9088 0.185293 38.9645 0.572432C38.0191 0.95957 37.1964 1.49174 36.4964 2.17009C35.7964 2.8473 35.2389 3.63985 34.8264 4.54545C34.4127 5.45106 34.2047 6.42062 34.1989 7.45184C34.193 8.48307 34.3893 9.45491 34.7855 10.3651C35.1828 11.2753 35.7239 12.0724 36.4099 12.7564C37.0959 13.4405 37.9069 13.9818 38.8406 14.3781C39.7732 14.7766 40.7817 14.9776 41.8662 14.9822Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M3.90672 0.252441H0L0.737403 1.7496V13.2381L0 14.7342H8.9657L9.77906 11.8997H3.90672V0.252441Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M10.8613 14.7342H19.6003V11.9008H14.0423V8.72494H18.3394L19.1177 6.00241H14.0423V3.07318H19.6003V0.252441H10.8613V14.7342Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M63.5688 14.7342H72.3067V11.9008H66.7498V8.72494H71.0469L71.824 6.00241H66.7498V3.07318H72.3067V0.252441H63.5688V14.7342Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M29.397 0.252441H24.8779L25.8338 2.09906L20.6147 14.7353H23.8659L24.9737 11.91H30.8519L31.9913 14.7353H35.3055L29.397 0.252441ZM26.0594 9.14063L27.9677 4.27457L29.8013 9.14063H26.0594Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M80.6094 4.23486V10.7477H82.2466V8.54591H83.9365L84.3455 7.11385H82.2466V5.71033H84.647V4.23486H80.6094Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M76.5625 4.10547C74.6553 4.10547 73.1045 5.62433 73.1045 7.4915C73.1045 9.35867 74.6553 10.8775 76.5625 10.8775C78.4697 10.8775 80.0204 9.35867 80.0204 7.4915C80.0204 5.62433 78.4685 4.10547 76.5625 4.10547ZM76.5625 9.30614C75.5423 9.30614 74.7125 8.49189 74.7125 7.4915C74.7125 6.49111 75.5423 5.67686 76.5625 5.67686C77.5827 5.67686 78.4124 6.49111 78.4124 7.4915C78.4124 8.49189 77.5827 9.30614 76.5625 9.30614Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M56.2401 14.9854C55.3099 14.9854 54.4778 14.8438 53.7451 14.5617C53.0124 14.2796 52.3918 13.8765 51.8847 13.3523C51.3775 12.8293 50.986 12.1955 50.7114 11.4509C50.4367 10.7075 50.2988 9.88065 50.2988 8.97161V0.252441H53.5125V8.80717C53.5125 9.78586 53.7451 10.5567 54.2102 11.122C54.6753 11.6873 55.352 11.9694 56.2401 11.9694C57.1283 11.9694 57.8049 11.6873 58.27 11.122C58.7351 10.5567 58.9677 9.78586 58.9677 8.80717V0.252441H62.1814V8.97276C62.1814 9.88179 62.0435 10.7086 61.7689 11.452C61.4943 12.1955 61.1028 12.8293 60.5956 13.3535C60.0884 13.8776 59.4679 14.2796 58.7351 14.5628C58.0012 14.8438 57.1703 14.9854 56.2401 14.9854Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M80.8372 23.1624L78.8365 22.7866C77.9367 22.6176 77.4412 22.1243 77.4412 21.3968C77.4412 20.4056 78.4813 19.8129 79.4863 19.8129C79.8287 19.8129 81.5325 19.8997 81.8831 21.5601L84.6399 20.2446C84.2332 19.0637 83.0155 17.0161 79.4664 17.0161C76.6045 17.0161 74.2754 19.0706 74.2754 21.5955C74.2754 23.7368 75.7408 25.307 78.1938 25.7958L80.1956 26.191C81.1843 26.3839 81.7745 26.9333 81.7745 27.6596C81.7745 28.5994 80.9599 29.1704 79.6487 29.1841C78.0582 29.2001 76.7727 28.0444 76.5741 26.907L73.9248 28.3516C74.5325 30.285 76.4046 32.0026 79.6289 32.0026C81.6576 32.0026 82.9104 31.2363 83.6034 30.5934C84.4927 29.77 85.0022 28.636 85.0022 27.4826C84.9999 25.3036 83.4047 23.6489 80.8372 23.1624Z",
          fill: "#C28F2C"
        }), h("path", {
          d: "M73.0452 21.6891C72.6514 20.8086 72.1138 20.0457 71.4325 19.3982C70.7501 18.7519 69.9519 18.2425 69.038 17.8702C68.123 17.4979 66.8211 17.2661 66.1258 17.2661H61.1147V31.7467H66.1165C67.1437 31.7467 68.1148 31.5651 69.0298 31.1951C69.9449 30.824 70.743 30.3158 71.4267 29.6705C72.1092 29.0242 72.6491 28.2624 73.0429 27.382C73.4379 26.5026 73.6354 25.5536 73.6366 24.5361C73.6354 23.5186 73.4391 22.5696 73.0452 21.6891ZM70.0454 26.2251C69.8198 26.7481 69.5137 27.2015 69.1268 27.5864C68.7389 27.9712 68.2784 28.2773 67.7432 28.5034C67.208 28.7295 66.6377 28.8426 66.0335 28.8426H64.2817V20.2205H66.0393C66.6447 20.2205 67.2138 20.3347 67.749 20.5619C68.2831 20.7892 68.7435 21.0952 69.1315 21.4801C69.5183 21.8661 69.8233 22.3229 70.0489 22.8528C70.2733 23.3827 70.3866 23.9434 70.3854 24.5338C70.3843 25.1402 70.2709 25.7032 70.0454 26.2251Z",
          fill: "#C28F2C"
        })), h("defs", null, h("clipPath", {
          id: "clip0"
        }, h("rect", {
          width: "85",
          height: "32",
          fill: "white"
        }))));
      }
    }, {
      key: "getAccentColor",
      value: function getAccentColor() {
        return '#0BC4E2';
      }
    }, {
      key: "getStyles",
      value: function getStyles() {
        return styles$3;
      }
    }]);

    return LoLTheme;
  }(Theme);

  var ThemeManager =
  /*#__PURE__*/
  function (_AbstractTheme) {
    _inherits(ThemeManager, _AbstractTheme);

    function ThemeManager() {
      var _this;

      _classCallCheck(this, ThemeManager);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(ThemeManager).call(this)); // default to LoL

      _this.themeData = {};
      _this.defaultThemeClass = new LoLTheme();
      return _this;
    }

    _createClass(ThemeManager, [{
      key: "setThemeData",
      value: function setThemeData(themeData) {
        this.themeData = themeData;
      }
    }, {
      key: "getClassNamePrefix",
      value: function getClassNamePrefix() {
        return this.themeData.name;
      }
    }, {
      key: "getDesktopLogo",
      value: function getDesktopLogo() {
        if (this.themeData.desktopSVG) {
          try {
            var svgMarkup = markupToVdom(this.themeData.desktopSVG, 'xml', h);
            return svgMarkup;
          } catch (err) {
            return null;
          }
        }

        if (this.themeData.desktopImage) {
          return h("img", {
            src: this.themeData.desktopImage
          });
        }

        return this.defaultThemeClass.getDesktopLogo();
      }
    }, {
      key: "getMobileLogo",
      value: function getMobileLogo() {
        if (this.themeData.mobileSVG) {
          try {
            var svgMarkup = markupToVdom(this.themeData.mobileSVG, 'xml', h);
            return svgMarkup;
          } catch (err) {
            return null;
          }
        }

        if (this.themeData.mobileImage) {
          return h("img", {
            src: this.themeData.mobileImage
          });
        }

        return this.defaultThemeClass.getMobileLogo();
      }
    }, {
      key: "getAccentColor",
      value: function getAccentColor() {
        return this.defaultThemeClass.getAccentColor();
      }
    }, {
      key: "getName",
      value: function getName() {
        return this.defaultThemeClass.getName();
      }
    }, {
      key: "getHomepageURL",
      value: function getHomepageURL() {
        return this.themeData.homepageURL || "https://www.riotgames.com";
      }
    }, {
      key: "getStyles",
      value: function getStyles() {
        return "\n      .theme-button {\n        background-color: ".concat(this.themeData.accentColor, " !important;\n      }\n      .theme-button:hover {\n        background-color: ").concat(this.themeData.accentColorHover, " !important;\n      }\n\n      .theme-button:active {\n        background-color: ").concat(this.themeData.accentColorActive, " !important;\n      }\n      #riotbar-bar .riotbar-active-link {\n        border-color: ").concat(this.themeData.accentColorActive, " !important;\n      }\n\n      .riotbar-navbar-link:hover {\n        border-color: ").concat(this.themeData.accentColorHover, " !important;\n      }\n\n      #riotbar-navbar a:hover {\n        border-bottom-color: ").concat(this.themeData.accentColorHover, " !important;\n      }\n\n      #riotbar-bar .nav-dropdown-active a {\n        border-bottom-color: ").concat(this.themeData.accentColorActive, ";\n      }\n\n      #riotbar-bar .sub-menu-header-icon svg, #riotbar-bar .sub-menu-header-icon img{\n        margin-top: 20px;\n        margin-left: 15px;\n        display: block;\n        max-height: 50px;\n      }\n    ");
      }
    }]);

    return ThemeManager;
  }(Theme);

  var manager = new ThemeManager();

  var rootConfigData = {
    navigation: navigation,
    global: null,
    authInfo: null,
    localeInfo: null,
    init: function init() {
      this.global = window.RiotBar.config.global;
      navigation.init();
      manager.setThemeData(window.RiotBar.data.theme);
      this.authInfo = window.RiotBar.plugins.account.extensions.getGlobalAccount();
      var localeInfo = {
        availableLanguages: [],
        localeContext: null,
        currentRegion: null,
        allLanguages: RiotBar.plugins.locale.localeUtils.getAllLanguagesWithRegions(window.RiotBar.config.locale)
      };

      if (window.RiotBar.config.locale) {
        localeInfo.localeContext = RiotBar.plugins.locale.localeUtils.getRenderContext();
        localeInfo.currentRegion = localeInfo.localeContext.regions.filter(function (r) {
          return r.id == localeInfo.localeContext.currentRegion;
        })[0];

        if (localeInfo.currentRegion && localeInfo.currentRegion.locales && localeInfo.currentRegion.locales.length > 1) {
          localeInfo.availableLanguages = localeInfo.currentRegion.locales;
        }
      }

      this.localeInfo = localeInfo;
    }
  };

  var t$1,u$1,r$1,i$1=[],o$1=n.__r,f$1=n.diffed,c$1=n.__c,e$1=n.unmount;function a$1(t){n.__h&&n.__h(u$1);var r=u$1.__H||(u$1.__H={t:[],u:[]});return t>=r.t.length&&r.t.push({}),r.t[t]}function v$1(n){return m$1(E$1,n)}function m$1(n,r,i){var o=a$1(t$1++);return o.__c||(o.__c=u$1,o.i=[i?i(r):E$1(void 0,r),function(t){var u=n(o.i[0],t);o.i[0]!==u&&(o.i[0]=u,o.__c.setState({}));}]),o.i}function p$1(n,r){var i=a$1(t$1++);x$1(i.o,r)&&(i.i=n,i.o=r,u$1.__H.u.push(i));}function l$1(n,r){var i=a$1(t$1++);x$1(i.o,r)&&(i.i=n,i.o=r,u$1.__h.push(i));}function d$1(n){return y$1(function(){return {current:n}},[])}function s$1(n,t,u){l$1(function(){"function"==typeof n?n(t()):n&&(n.current=t());},null==u?u:u.concat(n));}function y$1(n,u){var r=a$1(t$1++);return x$1(r.o,u)?(r.o=u,r.v=n,r.i=n()):r.i}function T$1(n,t){return y$1(function(){return n},t)}function w$1(n){var r=u$1.context[n.__c];if(!r)return n.__;var i=a$1(t$1++);return null==i.i&&(i.i=!0,r.sub(u$1)),r.props.value}function A$1(t,u){n.useDebugValue&&n.useDebugValue(u?u(t):t);}function F(n){var r=a$1(t$1++),i=v$1();return r.i=n,u$1.componentDidCatch||(u$1.componentDidCatch=function(n){r.i&&r.i(n),i[1](n);}),[i[0],function(){i[1](void 0);}]}function _$1(){i$1.some(function(n){n.__P&&(n.__H.u.forEach(g$1),n.__H.u.forEach(q),n.__H.u=[]);}),i$1=[];}function g$1(n){n.m&&n.m();}function q(n){var t=n.i();"function"==typeof t&&(n.m=t);}function x$1(n,t){return !n||t.some(function(t,u){return t!==n[u]})}function E$1(n,t){return "function"==typeof t?t(n):t}n.__r=function(n){o$1&&o$1(n),t$1=0,(u$1=n.__c).__H&&(u$1.__H.u.forEach(g$1),u$1.__H.u.forEach(q),u$1.__H.u=[]);},n.diffed=function(t){f$1&&f$1(t);var u=t.__c;if(u){var o=u.__H;o&&o.u.length&&(1!==i$1.push(u)&&r$1===n.requestAnimationFrame||((r$1=n.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),cancelAnimationFrame(t),setTimeout(n);},r=setTimeout(u,100);"undefined"!=typeof window&&(t=requestAnimationFrame(u));})(_$1));}},n.__c=function(n,t){t.some(function(n){n.__h.forEach(g$1),n.__h=n.__h.filter(function(n){return !n.i||q(n)});}),c$1&&c$1(n,t);},n.unmount=function(n){e$1&&e$1(n);var t=n.__c;if(t){var u=t.__H;u&&u.t.forEach(function(n){return n.m&&n.m()});}};

  function E$2(n,t){for(var e in t)n[e]=t[e];return n}function w$2(n,t){for(var e in n)if("__source"!==e&&!(e in t))return !0;for(var r in t)if("__source"!==r&&n[r]!==t[r])return !0;return !1}var C$1=function(n){var t,e;function r(t){var e;return (e=n.call(this,t)||this).isPureReactComponent=!0,e}return e=n,(t=r).prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e,r.prototype.shouldComponentUpdate=function(n,t){return w$2(this.props,n)||w$2(this.state,t)},r}(d);function _$2(n,t){function e(n){var e=this.props.ref,r=e==n.ref;return !r&&e&&(e.call?e(null):e.current=null),t?!t(this.props,n)||!r:w$2(this.props,n)}function r(t){return this.shouldComponentUpdate=e,h(n,E$2({},t))}return r.prototype.isReactComponent=!0,r.displayName="Memo("+(n.displayName||n.name)+")",r.t=!0,r}var A$2=n.vnode;function S(n){function t(t){var e=E$2({},t);return delete e.ref,n(e,t.ref)}return t.prototype.isReactComponent=!0,t.t=!0,t.displayName="ForwardRef("+(n.displayName||n.name)+")",t}n.vnode=function(n){n.type&&n.type.t&&n.ref&&(n.props.ref=n.ref,n.ref=null),A$2&&A$2(n);};var k$1=function(n,t){return n?b(n).map(t):null},F$1={map:k$1,forEach:k$1,count:function(n){return n?b(n).length:0},only:function(n){if(1!==(n=b(n)).length)throw new Error("Children.only() expects only one child.");return n[0]},toArray:b},N$1=n.__e;function R(n){return n&&((n=E$2({},n)).__c=null,n.__k=n.__k&&n.__k.map(R)),n}function M(n){this.__u=0,this.__b=null;}function U(n){var t=n.__.__c;return t&&t.o&&t.o(n)}function O(n){var t,e,r;function o(o){if(t||(t=n()).then(function(n){e=n.default||n;},function(n){r=n;}),r)throw r;if(!e)throw t;return h(e,o)}return o.displayName="Lazy",o.t=!0,o}function j$1(){this.u=null,this.i=null;}n.__e=function(n,t,e){if(n.then)for(var r,o=t;o=o.__;)if((r=o.__c)&&r.l)return r.l(n,t.__c);N$1(n,t,e);},(M.prototype=new d).l=function(n,t){var e=this,r=U(e.__v),o=!1,u=function(){o||(o=!0,r?r(i):i());};t.__c=t.componentWillUnmount,t.componentWillUnmount=function(){u(),t.__c&&t.__c();};var i=function(){--e.__u||(e.__v.__k[0]=e.state.o,e.setState({o:e.__b=null}));};e.__u++||e.setState({o:e.__b=e.__v.__k[0]}),n.then(u,u);},M.prototype.render=function(n,t){return this.__b&&(this.__v.__k[0]=R(this.__b),this.__b=null),[h(d,null,t.o?null:n.children),t.o&&n.fallback]};var z$1=function(n,t,e){if(++e[1]===e[0]&&n.i.delete(t),n.props.revealOrder&&("t"!==n.props.revealOrder[0]||!n.i.size))for(e=n.u;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.u=e=e[2];}};(j$1.prototype=new d).o=function(n){var t=this,e=U(t.__v),r=t.i.get(n);return r[0]++,function(o){var u=function(){t.props.revealOrder?(r.push(o),z$1(t,n,r)):o();};e?e(u):u();}},j$1.prototype.render=function(n){this.u=null,this.i=new Map;var t=b(n.children);n.revealOrder&&"b"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.i.set(t[e],this.u=[1,0,this.u]);return n.children},j$1.prototype.componentDidUpdate=j$1.prototype.componentDidMount=function(){var n=this;n.i.forEach(function(t,e){z$1(n,e,t);});};var L$1=function(){function n(){}var t=n.prototype;return t.getChildContext=function(){return this.props.context},t.render=function(n){return n.children},n}();function P$1(n){var t=this,e=n.container,r=h(L$1,{context:t.context},n.vnode);return t.s&&t.s!==e&&(t.h.parentNode&&t.s.removeChild(t.h),A(t.v),t.p=!1),n.vnode?t.p?(e.__k=t.__k,E(r,e),t.__k=e.__k):(t.h=document.createTextNode(""),H("",e),e.appendChild(t.h),t.p=!0,t.s=e,E(r,e,t.h),t.__k=this.h.__k):t.p&&(t.h.parentNode&&t.s.removeChild(t.h),A(t.v)),t.v=r,t.componentWillUnmount=function(){t.h.parentNode&&t.s.removeChild(t.h),A(t.v);},null}function W(n,t){return h(P$1,{vnode:n,container:t})}var D$1=/^(?:accent|alignment|arabic|baseline|cap|clip|color|fill|flood|font|glyph|horiz|marker|overline|paint|stop|strikethrough|stroke|text|underline|unicode|units|v|vector|vert|word|writing|x)[A-Z]/;d.prototype.isReactComponent={};var T$2="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103;function V(n,t,e){if(null==t.__k)for(;t.firstChild;)t.removeChild(t.firstChild);return Z(n,t,e)}function Z(n,t,e){return E(n,t),"function"==typeof e&&e(),n?n.__c:null}var H$1=n.event;function I$1(n,t){n["UNSAFE_"+t]&&!n[t]&&Object.defineProperty(n,t,{configurable:!1,get:function(){return this["UNSAFE_"+t]},set:function(n){this["UNSAFE_"+t]=n;}});}n.event=function(n){return H$1&&(n=H$1(n)),n.persist=function(){},n.nativeEvent=n};var $$1={configurable:!0,get:function(){return this.class}},q$1=n.vnode;n.vnode=function(n){n.$$typeof=T$2;var t=n.type,e=n.props;if("function"!=typeof t){var r,o,u;for(u in e.defaultValue&&(e.value||0===e.value||(e.value=e.defaultValue),delete e.defaultValue),Array.isArray(e.value)&&e.multiple&&"select"===t&&(b(e.children).forEach(function(n){-1!=e.value.indexOf(n.props.value)&&(n.props.selected=!0);}),delete e.value),e)if(r=D$1.test(u))break;if(r)for(u in o=n.props={},e)o[D$1.test(u)?u.replace(/([A-Z0-9])/,"-$1").toLowerCase():u]=e[u];}(e.class||e.className)&&($$1.enumerable="className"in e,e.className&&(e.class=e.className),Object.defineProperty(e,"className",$$1)),function(t){var e=n.type,r=n.props;if(r&&"string"==typeof e){var o={};for(var u in r)/^on(Ani|Tra|Tou)/.test(u)&&(r[u.toLowerCase()]=r[u],delete r[u]),o[u.toLowerCase()]=u;if(o.ondoubleclick&&(r.ondblclick=r[o.ondoubleclick],delete r[o.ondoubleclick]),o.onbeforeinput&&(r.onbeforeinput=r[o.onbeforeinput],delete r[o.onbeforeinput]),o.onchange&&("textarea"===e||"input"===e.toLowerCase()&&!/^fil|che|ra/i.test(r.type))){var i=o.oninput||"oninput";r[i]||(r[i]=r[o.onchange],delete r[o.onchange]);}}}(),"function"==typeof t&&!t.m&&t.prototype&&(I$1(t.prototype,"componentWillMount"),I$1(t.prototype,"componentWillReceiveProps"),I$1(t.prototype,"componentWillUpdate"),t.m=!0),q$1&&q$1(n);};var B="16.8.0";function G(n){return h.bind(null,n)}function J(n){return !!n&&n.$$typeof===T$2}function K(n){return J(n)?I.apply(null,arguments):n}function Q(n){return !!n.__k&&(E(null,n),!0)}function X(n){return n&&(n.base||1===n.nodeType&&n)||null}var Y=function(n,t){return n(t)};var compat_module = {useState:v$1,useReducer:m$1,useEffect:p$1,useLayoutEffect:l$1,useRef:d$1,useImperativeHandle:s$1,useMemo:y$1,useCallback:T$1,useContext:w$1,useDebugValue:A$1,version:"16.8.0",Children:F$1,render:V,hydrate:V,unmountComponentAtNode:Q,createPortal:W,createElement:h,createContext:L,createFactory:G,cloneElement:K,createRef:p,Fragment:y,isValidElement:J,findDOMNode:X,Component:d,PureComponent:C$1,memo:_$2,forwardRef:S,unstable_batchedUpdates:Y,Suspense:M,SuspenseList:j$1,lazy:O};

  var svgFactory = (function (name) {
    return (
      /*#__PURE__*/
      function (_Component) {
        _inherits(_class, _Component);

        function _class(props) {
          var _this;

          _classCallCheck(this, _class);

          _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));
          _this.refCb = _this.refCb.bind(_assertThisInitialized(_this));
          return _this;
        }

        _createClass(_class, [{
          key: "refCb",
          value: function refCb(el) {
            this.el = el;
          }
        }, {
          key: "componentDidMount",
          value: function componentDidMount() {
            var _id = this.props._id;
            var use = document.createElementNS('http://www.w3.org/2000/svg', 'use');
            var cdnUrl = "https://lolstatic-a.akamaihd.net/riotbar/live/1.1.1/";

            if (cdnUrl.length && cdnUrl[cdnUrl.length - 1] !== '/') {
              cdnUrl += '/';
            }

            var url = "".concat(cdnUrl, "svg/").concat(name, "/defs/svg/sprite.defs.svg#").concat(_id);
            use.setAttribute('data-href', url);
            this.el.appendChild(use);
          }
        }, {
          key: "render",
          value: function render() {
            var _this$props = this.props,
                width = _this$props.width,
                height = _this$props.height,
                domClassName = _this$props.domClassName;
            return h("svg", {
              ref: this.refCb,
              width: width,
              height: height,
              className: domClassName ? domClassName : ''
            });
          }
        }]);

        return _class;
      }(d)
    );
  });

  var LocaleSvg = svgFactory("locale");
  var LocalizationDropdownTemplate = (function () {
    var dropdownRef = d$1(null);
    var dropdownCaretRef = d$1(null);
    var langSwitchTriggerRef = d$1(null);

    var _useState = v$1(false),
        _useState2 = _slicedToArray(_useState, 2),
        open = _useState2[0],
        setIsOpen = _useState2[1];

    l$1(function () {
      // define the event
      var clickEvent = function clickEvent(evt) {
        if (!evt.target) {
          return;
        }

        if (!common.isDescendantOfClass(evt.target, "lang-switch-dropdown") && !common.isDescendantOfClass(evt.target, "icon-lang-switch")) {
          setIsOpen(false);
        }
      }; // assign the event


      document.addEventListener("click", clickEvent); // when we unmount, unbind the event listener

      return function () {
        document.removeEventListener("click", clickEvent);
      };
    }, [setIsOpen]);

    var shiftDropdownPosition = function shiftDropdownPosition() {
      if (!open) {
        dropdownRef.current.style.left = "";
        dropdownCaretRef.current.style.left = "";
        return;
      }

      if (!dropdownRef || !dropdownRef.current || !dropdownCaretRef.current) {
        return;
      }

      var windowWidth = window.outerWidth;
      var dropdownPositionData = dropdownRef.current.getBoundingClientRect();
      var DROPDOWN_DEFAULT_LEFT = -115;
      var DROPDOWN_CARET_DEFAULT_LEFT = 113;
      var EXTRA_PADDING = windowWidth - (langSwitchTriggerRef.current.getBoundingClientRect().x + langSwitchTriggerRef.current.clientWidth);

      if (dropdownPositionData.x + dropdownPositionData.width > windowWidth - 9) {
        // what's the difference?
        var diff = dropdownPositionData.width + dropdownPositionData.x - (windowWidth - 9);
        var newDropdownLeft = DROPDOWN_DEFAULT_LEFT - diff - EXTRA_PADDING;
        var newCaretLeft = DROPDOWN_CARET_DEFAULT_LEFT + diff + EXTRA_PADDING; // check to see that the caret isn't pushed off too much of the dropdown itself

        if (Math.abs(newCaretLeft) >= 210) {
          var caretDiff = newCaretLeft - 210;
          console.log("Caret Diff", {
            caretDiff: caretDiff
          });
          newDropdownLeft += caretDiff;
          newCaretLeft -= caretDiff;
        }

        dropdownRef.current.style.left = newDropdownLeft + "px";
        dropdownCaretRef.current.style.left = newCaretLeft + "px";
      }
    }; // Here we setup a listener for when the menu opens, if it goes offscreen, adjust accordingly


    l$1(function () {
      window.addEventListener("resize", shiftDropdownPosition);
      return function () {
        window.removeEventListener("resize", shiftDropdownPosition);
      };
    });
    p$1(function () {
      if (open === true) {
        shiftDropdownPosition();
      }
    }, [open]);
    var locSwitcherConfig = window.RiotBar.data.localizationSwitcher;

    if (!locSwitcherConfig || !locSwitcherConfig.enabled) {
      return null;
    }

    var languageLinks = locSwitcherConfig.links || [];

    if (languageLinks.length < 2) {
      return null;
    }

    return h("div", {
      className: "riotbar-locale riotbar-navmenu-right-icon"
    }, h("div", {
      className: "icon-lang-switch"
    }, h("a", {
      ref: langSwitchTriggerRef,
      onClick: function onClick() {
        return setIsOpen(true);
      },
      className: "lang-switch-trigger"
    }, h(LocaleSvg, {
      width: "14",
      height: "14",
      _id: "globeIcon"
    })), h("div", {
      className: "lang-switch-dropdown localization-management-list ".concat(open ? "active" : ""),
      ref: dropdownRef
    }, h("div", {
      className: "lang-switch-caret",
      ref: dropdownCaretRef
    }), h("ul", null, languageLinks.map(function (link) {
      return h("li", {
        className: link.active ? "active" : "",
        key: link.text
      }, h("a", {
        href: link.active ? void 0 : link.url
      }, h("span", {
        className: "lang-name"
      }, link.text), link.active ? h(LocaleSvg, {
        width: "14",
        height: "12",
        _id: "checkSmall"
      }) : null));
    })))));
  });

  var RightContentIcons = (function (_ref) {
    var icons = _ref.icons;
    var localeInfo = rootConfigData.localeInfo;
    return h("div", {
      className: "riotbar-right-content-icons"
    }, icons.map(function (icon, i) {
      return icon.name === 'lang-switch' ? h(LocalizationDropdownTemplate, null) : h("div", {
        className: "riotbar-navmenu-right-icon"
      }, "Icon");
    }));
  });

  var NavigationSvg = svgFactory('navigation');

  var ParentMenuParentIcons = function ParentMenuParentIcons() {
    return h(y, null, h(NavigationSvg, {
      width: "10",
      height: "5",
      _id: "mainNavArrowDown",
      domClassName: "non-hover arrow-down"
    }), h(NavigationSvg, {
      width: "10",
      height: "5",
      _id: "mainNavArrowDownHover",
      domClassName: "hover arrow-down"
    }));
  };

  var SoloMenuParentIcons = function SoloMenuParentIcons() {
    return h(y, null, h(NavigationSvg, {
      width: "7",
      height: "7",
      _id: "mainNavLinkOut",
      domClassName: "inline-block link-out non-hover"
    }), h(NavigationSvg, {
      width: "7",
      height: "7",
      _id: "mainNavLinkOutWhite",
      domClassName: "inline-block link-out hover"
    }));
  };

  var moreItems = {
    id: '__moreItems__',
    text: 'Больше',
    subMenuItems: []
  };
  var sizeLookup = null;
  var overflowSize = null;

  var DesktopNav =
  /*#__PURE__*/
  function (_Component) {
    _inherits(DesktopNav, _Component);

    function DesktopNav(props) {
      var _this;

      _classCallCheck(this, DesktopNav);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(DesktopNav).call(this, props));
      var links = [];

      try {
        // dont directly update the reference, create a new clone of the array
        links = RiotBar.data.touchpoints.links ? _toConsumableArray(RiotBar.data.touchpoints.links) : [];
      } catch (err) {}
      /* noop */
      // add in the hidden moreItems reference point


      links.push(moreItems);
      _this.state = {
        activeDropdownId: null,
        links: links,
        ready: false
      };
      _this.dropdownClicked = _this.dropdownClicked.bind(_assertThisInitialized(_this));
      _this.dropdownMouseOver = _this.dropdownMouseOver.bind(_assertThisInitialized(_this));
      _this.dropdownMouseOut = _this.dropdownMouseOut.bind(_assertThisInitialized(_this));
      _this.adjustMenu = _this.adjustMenu.bind(_assertThisInitialized(_this));
      document.addEventListener('click', function (e) {
        if (!common.isDescendantOfClass(e.target, 'riotbar-navbar-navitem-container')) {
          _this.setState({
            activeDropdownId: null
          });
        }
      });
      return _this;
    }

    _createClass(DesktopNav, [{
      key: "dropdownClicked",
      value: function dropdownClicked(e, link) {
        if (this.state.activeDropdownId != link.id) {
          this.setState({
            activeDropdownId: link.id
          });
        }
      }
    }, {
      key: "dropdownMouseOver",
      value: function dropdownMouseOver(link) {
        if (this.state.activeDropdownId != link.id) {
          this.setState({
            activeDropdownId: link.id
          });
        }
      }
    }, {
      key: "dropdownMouseOut",
      value: function dropdownMouseOut(link) {
        if (this.state.activeDropdownId == link.id) {
          this.setState({
            activeDropdownId: this.state.activeDropdownId == null
          });
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        if (this.isAdjustable()) {
          Promise.race([new Promise(function (res) {
            return setTimeout(function () {
              return res(0);
            }, 500);
          }), this.props.fontLoaded]).then(function (valid) {
            //just adjust the menu, for now, regardless of valid flag value, I guess?
            _this2.adjustMenu();

            _this2.setState({
              ready: true
            });

            window.addEventListener('resize', function () {
              return _this2.adjustMenu();
            });
          }).catch(function (err) {
            console && console.log(err);
          });
        } else {
          setTimeout(function () {
            return _this2.setState({
              ready: true
            }, function () {
              return _this2.adjustMenu();
            });
          }, 500);
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.adjustMenu();
      }
    }, {
      key: "isAdjustable",
      value: function isAdjustable() {
        return document.fonts && typeof window.Promise === 'function';
      }
    }, {
      key: "adjustMenu",
      value: function adjustMenu() {
        var navBar = document.getElementById('riotbar-navbar');
        var leftContent = document.getElementsByClassName('riotbar-left-content')[0];
        var rightContent = document.getElementsByClassName('riotbar-right-content')[0];
        var wholeContent = document.getElementsByClassName('riotbar-bar-content')[0];
        var overflowItem = document.getElementsByClassName('nav-dropdown-overflow')[0];
        var mobileHeader = document.getElementsByClassName('riotbar-explore-label')[0];
        var riotbarEl = document.getElementById('riotbar-bar');

        if (!navBar || !leftContent || !rightContent || !wholeContent || !overflowItem || !mobileHeader) {
          return;
        }

        if (window.getComputedStyle(mobileHeader).getPropertyValue('display') !== 'none') {
          // handle mobile by updating the width of riotbar-bar-content to whole - left - right
          var mobileContent = document.getElementsByClassName('riotbar-right-mobile-content')[0];
          var mobileContentWidth = 0;

          if (mobileContent) {
            mobileContentWidth = mobileContent.offsetWidth;
          }

          wholeContent.style.width = riotbarEl.offsetWidth - leftContent.offsetWidth - rightContent.offsetWidth - mobileContentWidth + 'px';
          return;
        } else {
          wholeContent.style.width = 'auto';
        }

        if (!overflowSize) {
          overflowItem.style.display = 'inline';
          overflowItem.style.visibility = 'hidden';
          overflowSize = overflowItem.offsetWidth;
          overflowItem.style.display = null;
          overflowItem.style.visibility = null;
        }

        if (!sizeLookup) {
          sizeLookup = {};
          var allItems = document.getElementsByClassName('riotbar-navbar-navitem-container');

          for (var i = 0; i < allItems.length; i++) {
            var item = allItems[i];
            var id = item.getAttribute('data-link-id');
            sizeLookup[id] = item.offsetWidth;
          }
        }

        var riotbarWidth = riotbarEl.offsetWidth;
        var leftContentWidth = leftContent.offsetWidth;
        var rightContentWidth = rightContent.offsetWidth;
        var availableWidth = riotbarWidth - leftContentWidth - rightContentWidth - 10; //10 for additional space, just in case

        var takenWidth = navBar.offsetWidth;
        var newLinks = this.state.links.concat();

        if (availableWidth < takenWidth) {
          var surplusSpaceRemaining = takenWidth - availableWidth;
          var existingItems = document.getElementsByClassName('riotbar-navbar-navitem-container');
          var howMany = existingItems.length;

          if (!moreItems.subMenuItems.length) {
            surplusSpaceRemaining += overflowSize;
          }

          var _loop = function _loop(linkIndex) {
            var item = existingItems[linkIndex];
            var id = item.getAttribute('data-link-id');
            if (id == '__moreItems__') return "continue";
            surplusSpaceRemaining -= item.offsetWidth; //O(N) lookup on each iteration is unavaoidable; some link objects have menuOnly set to true, and so do not
            //render in the desktop list. Therefore, the indexes will not line up for me to call splice + indexOf on the array

            var linkToMove = newLinks.filter(function (link) {
              return link.id == id;
            })[0];
            moreItems.subMenuItems = [linkToMove].concat(_toConsumableArray(moreItems.subMenuItems));
            newLinks = newLinks.filter(function (link) {
              return link != linkToMove;
            });
          };

          for (var linkIndex = howMany - 1; linkIndex >= 0 && surplusSpaceRemaining > 0; --linkIndex) {
            var _ret = _loop(linkIndex);

            if (_ret === "continue") continue;
          }

          this.setState({
            links: newLinks,
            ready: true
          });
        } else if (moreItems.subMenuItems.length > 0) {
          var excessSpace = availableWidth - takenWidth;
          var changes = false;

          if (moreItems.subMenuItems.length === 1) {
            excessSpace += overflowSize;
          }

          do {
            var nextItem = moreItems.subMenuItems[0];
            var nextItemsWidth = sizeLookup[nextItem.id]; //add a small buffer

            if (nextItemsWidth + 10 < excessSpace) {
              moreItems.subMenuItems.shift();
              changes = true;
              newLinks.splice(newLinks.length - 1, 0, nextItem);
              excessSpace -= nextItemsWidth;
            } else {
              break;
            }
          } while (excessSpace > 0 && moreItems.subMenuItems.length);

          if (changes) {
            this.setState({
              links: newLinks,
              ready: true
            });
          }
        }
      }
    }, {
      key: "render",
      value: function render(props) {
        var _this3 = this;

        var navItems = [];
        var _this$state = this.state,
            activeDropdownId = _this$state.activeDropdownId,
            links = _this$state.links,
            ready = _this$state.ready;
        var title = this.props.title;
        var navBarClasses = [this.isAdjustable() ? 'fade-in' : '', ready ? 'ready' : ''];
        links.forEach(function (link) {
          if (link.menuOnly) return;
          var hasChildren = (link.subMenuItems || []).length > 0;
          var isMoreItem = link.id === '__moreItems__';
          var classes = ['riotbar-navbar-navitem-container', activeDropdownId == link.id ? 'nav-dropdown-active' : '', isMoreItem ? 'nav-dropdown-overflow' : '', isMoreItem && !link.subMenuItems.length ? 'hide' : ''];
          var linkIsActive = common.checkLinkMatch(link.activeLinkRegex);
          var anchorClasses = ['riotbar-navbar-link', linkIsActive ? 'riotbar-active-link' : ''];
          navItems.push(h("div", {
            key: link.id,
            "data-link-id": link.id,
            className: classes.join(' '),
            onMouseEnter: hasChildren ? function (e) {
              return _this3.dropdownMouseOver(link);
            } : null,
            onMouseLeave: hasChildren ? function (e) {
              return _this3.dropdownMouseOut(link);
            } : null
          }, h("a", {
            className: anchorClasses.join(' '),
            href: !hasChildren ? link.url || void 0 : void 0,
            "data-riotbar-link-id": link.id,
            target: link.target ? link.target : null,
            onClick: hasChildren ? function (e) {
              return _this3.dropdownClicked(e, link);
            } : null
          }, link.text, hasChildren || isMoreItem ? h(ParentMenuParentIcons, null) : link.url && link.target && link.target !== '_self' ? h(SoloMenuParentIcons, null) : null), hasChildren ? h("ul", {
            className: "riotbar-navbar-subnav-menu"
          }, link.subMenuItems.map(function (subLink) {
            var listitemClasses = [];

            if (!subLink.url) {
              listitemClasses.push('no-linkage');
            }

            if (common.checkLinkMatch(subLink.activeLinkRegex)) {
              listitemClasses.push('riotbar-active-sub-item');
            }

            return h(y, null, h("li", {
              key: subLink.id,
              className: listitemClasses.join(' ')
            }, h("a", {
              href: subLink.url || void 0,
              target: subLink.target || void 0,
              className: "riotbar-navbar-sub-link"
            }, subLink.text, (subLink.subMenuItems || []).length ? h(NavigationSvg, {
              width: "10",
              height: "5",
              _id: "mainNavArrowDown",
              domClassName: "arrow-down"
            }) : null)), (subLink.subMenuItems || []).map(function (subSubLink) {
              var linkClasses = ['riotbar-navbar-sub-link'];

              if (common.checkLinkMatch(subSubLink.activeLinkRegex)) {
                linkClasses.push('riotbar-active-link');
              }

              return h("li", {
                className: "riotbar-navbar-subnav-subsubmenu"
              }, h("a", {
                href: subSubLink.url,
                target: subSubLink.target || void 0,
                className: linkClasses.join(' ')
              }, subSubLink.text));
            }));
          })) : null));
        });
        return h("div", {
          id: "riotbar-navbar",
          className: navBarClasses.join(' ')
        }, title ? h("a", {
          className: "riotbar-navbar-title",
          href: title.url ? title.url : void 0,
          onClick: function onClick(e) {
            return e.preventDefault();
          },
          style: {
            cursor: title.url ? 'pointer' : 'default'
          }
        }, title.text || title) : null, h("div", {
          className: "riotbar-explore-label"
        }, manager.getMobileLogo(), title ? h("a", {
          className: "riotbar-navbar-title mobile",
          href: title.url ? title.url : void 0,
          onClick: function onClick(e) {
            return e.preventDefault();
          },
          style: {
            cursor: title.url ? 'pointer' : 'default'
          }
        }, title.text || title) : null), h(y, null, navItems));
      }
    }]);

    return DesktopNav;
  }(d);

  var CheckSmallSvg = (function (_ref) {
    var _ref$width = _ref.width,
        width = _ref$width === void 0 ? '11' : _ref$width,
        _ref$height = _ref.height,
        height = _ref$height === void 0 ? '9' : _ref$height;
    return h("svg", {
      width: width,
      height: height,
      viewBox: "0 0 11 9",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, h("g", null, h("rect", {
      x: "2.10889",
      y: "7.03003",
      width: "10",
      height: "2",
      transform: "rotate(-44.6688 2.10889 7.03003)"
    }), h("rect", {
      x: "1.42236",
      y: "3.48999",
      width: "5",
      height: "2",
      transform: "rotate(45.3312 1.42236 3.48999)"
    })));
  });

  var ArrowDownSvg = (function (_ref) {
    var color = _ref.color;
    return h("svg", {
      width: "8",
      height: "5",
      viewBox: "0 0 8 5",
      className: "arrow-down",
      fill: color,
      xmlns: "http://www.w3.org/2000/svg"
    }, h("path", {
      d: "M0.707109 1.70711L3.29289 4.29289C3.68342 4.68342 4.31658 4.68342 4.70711 4.29289L7.29289 1.70711C7.92286 1.07714 7.47669 0 6.58579 0H1.41421C0.523309 0 0.0771438 1.07714 0.707109 1.70711Z"
    }));
  });

  var MenuLinkAnchor = function MenuLinkAnchor(props) {
    if (!props.href) {
      delete props.href;
    }

    return h("a", props);
  };

  var MenuLink = (function (props) {
    var link = props.link,
        activeLink = props.activeLink,
        _onClick = props.onClick;
    var classes = ['riotbar-navmenu-link', (link.subMenuItems || []).length ? 'sub-menu-trigger' : '', props.className || '', activeLink == link.id ? 'riotbar-active-link' : ''];
    return h(MenuLinkAnchor, {
      className: classes.join(' '),
      href: link.url || null,
      "data-riotbar-link-id": link.id || null,
      "data-ping-meta": link.id ? "riotbar-content=navigation|riotbar-navigation=".concat(link.id) : null,
      onClick: function onClick(evt) {
        if (_onClick && _onClick(evt) === false) {
          return;
        }

        var anchor = evt.target;
        var actionMaybe = anchor.getAttribute('data-riotbar-account-action');

        if (actionMaybe) {
          evt.preventDefault();

          try {
            RiotBar.account[actionMaybe]();
          } catch (err) {
            common.logError(err);
          }
        } else if ((link.subMenuItems || []).length) {
          evt.preventDefault();
          props.openSubMenu(link.text, link.subMenuItems);
        }
      },
      "data-riotbar-account-action": link.action || null,
      target: link.target || null
    }, link.text, link.icon || null, (link.subMenuItems || []).length ? h("span", {
      className: "side-menu-icon"
    }, h(NavigationSvg, {
      width: "5",
      height: "9",
      _id: "subMenuRight"
    })) : link.url && link.target && link.target !== '_self' ? h("span", {
      className: "side-menu-icon"
    }, h(NavigationSvg, {
      width: "7",
      height: "7",
      _id: "mainNavLinkOut"
    })) : null, props.rightContent || null);
  });

  var NavigationSvg$1 = svgFactory('navigation');
  var LocaleSvg$1 = svgFactory('locale');

  var SideMenuGlobe = function SideMenuGlobe(_ref) {
    var openSubMenu = _ref.openSubMenu;
    var _root$localeInfo = rootConfigData.localeInfo,
        localeContext = _root$localeInfo.localeContext,
        availableLanguages = _root$localeInfo.availableLanguages;

    if (availableLanguages.length < 2) {
      return null;
    }

    var links = availableLanguages.map(function (locale) {
      var currentLang = localeContext.currentLang == locale.lang;
      return {
        text: locale.lang + ' - ' + locale.languageName,
        id: locale.languageName,
        url: locale.landingUrl,
        className: currentLang ? 'disabled' : '',
        rightContent: currentLang ? h(CheckSmallSvg, {
          width: "14",
          height: "12"
        }) : null
      };
    });
    return h("div", {
      className: "sideMenuIcons"
    }, h("a", {
      onClick: function onClick(e) {
        e.cancelBubble = true;
        openSubMenu('Language Select', links);
      },
      className: "lang-switch-trigger"
    }, h(LocaleSvg$1, {
      width: "14",
      height: "14",
      _id: "globeIcon"
    })));
  };

  var RenderCategories = function RenderCategories(_ref2) {
    var touchpoints = _ref2.touchpoints,
        openSubMenu = _ref2.openSubMenu,
        activeTouchpoint = _ref2.activeTouchpoint;
    return h(y, null, h("div", {
      className: "riotbar-navmenu-category"
    }, touchpoints.map(function (link, i) {
      return h(MenuLink, {
        openSubMenu: openSubMenu,
        link: link,
        activeLink: activeTouchpoint
      });
    })));
  };

  var SideMenu = (function (_ref3) {
    var openSubMenu = _ref3.openSubMenu,
        sideMenuOpen = _ref3.sideMenuOpen,
        closeSideMenu = _ref3.closeSideMenu,
        activeTouchpoint = _ref3.activeTouchpoint,
        touchpoints = _ref3.touchpoints,
        authenticatedAccountLinks = _ref3.authenticatedAccountLinks;

    var _window$RiotBar$__acc = window.RiotBar.__accountUtils.accountComponentProps(),
        anonymousLinksOverride = _window$RiotBar$__acc.anonymousLinksOverride,
        anonymousLinks = _window$RiotBar$__acc.anonymousLinks;

    return h("div", {
      id: "riotbar-navmenu-dropdown",
      className: "riotbar-navmenu-dropdown ".concat(sideMenuOpen ? 'riotbar-click-active' : '')
    }, h("div", {
      className: "sub-menu-header"
    }, h("span", {
      className: "sub-menu-header-icon"
    }, manager.getMobileLogo()), h("a", {
      onClick: closeSideMenu,
      className: "sub-menu-close top-sub-menu-close"
    }, h(NavigationSvg$1, {
      width: "32",
      height: "32",
      _id: "burgerNavClose"
    }))), RiotBar.data.account.enabled && RiotBar.account.getAuthState().isAuthenticated && authenticatedAccountLinks ? h("div", {
      className: "riotbar-navmenu-category"
    }, h(MenuLink, {
      onClick: function onClick(e) {
        if (!common.isDescendantOfClass(e.target, 'riotbar-locale')) {
          e.preventDefault();
          openSubMenu('Account', authenticatedAccountLinks);
          return false;
        }
      },
      link: {
        text: RiotBar.account.getAuthState().name || 'Моя учетная запись ',
        icon: h(ArrowDownSvg, {
          color: manager.getAccentColor()
        })
      },
      className: "show-auth-sub-menu black-side-menu-option",
      rightContent: h(SideMenuGlobe, {
        openSubMenu: openSubMenu
      })
    })) : null, RiotBar.data.account.enabled && !RiotBar.account.getAuthState().isAuthenticated ? h("div", {
      className: "riotbar-navmenu-category"
    }, anonymousLinks ? anonymousLinks.map(function (link) {
      return h(MenuLink, {
        key: link.text,
        link: link
      });
    }) : h(MenuLink, {
      link: {
        text: 'Вход',
        action: 'login'
      },
      rightContent: h(SideMenuGlobe, {
        openSubMenu: openSubMenu
      }),
      className: "black-side-menu-option"
    })) : null, touchpoints ? h("div", {
      className: "riotbar-navmenu-links"
    }, h(RenderCategories, {
      activeTouchpoint: activeTouchpoint,
      openSubMenu: openSubMenu,
      touchpoints: touchpoints,
      sideMenu: true
    })) : null);
  });

  var SubMenu = (function (_ref) {
    var sideMenuOpen = _ref.sideMenuOpen,
        isOpen = _ref.isOpen,
        closeSubMenu = _ref.closeSubMenu,
        closeSideMenu = _ref.closeSideMenu,
        links = _ref.links,
        text = _ref.text;
    var classes = ['riotbar-navmenu-dropdown', isOpen ? 'riotbar-click-active ' : '', !isOpen && sideMenuOpen ? 'slide-out' : ''];
    return h("div", {
      id: "riotbar-navmenu-dropdown-2",
      className: classes.join(' ')
    }, h("div", {
      className: "sub-menu-header"
    }, h("a", {
      onClick: closeSubMenu,
      id: "sub-sub-menu-close",
      className: "sub-menu-back sub-sub-menu-close"
    }, h(NavigationSvg, {
      width: "5",
      height: "8",
      _id: "subMenuBack"
    })), h("span", {
      className: "sub-menu-header-text"
    }, text), h("a", {
      onClick: closeSideMenu,
      className: "sub-menu-close top-sub-menu-close"
    }, h(NavigationSvg, {
      width: "32",
      height: "32",
      _id: "burgerNavClose"
    }))), h("div", {
      className: "riotbar-navmenu-touchpoints"
    }, h("div", {
      className: "riotbar-navmenu-category"
    }, links.map(function (link) {
      return h(MenuLink, {
        link: link,
        rightContent: link.rightContent,
        className: link.className
      });
    }))));
  });

  var SideMenuSection =
  /*#__PURE__*/
  function (_Component) {
    _inherits(SideMenuSection, _Component);

    function SideMenuSection() {
      _classCallCheck(this, SideMenuSection);

      return _possibleConstructorReturn(this, _getPrototypeOf(SideMenuSection).call(this));
    }

    _createClass(SideMenuSection, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            sideMenuOpen = _this$props.sideMenuOpen,
            closeSideMenu = _this$props.closeSideMenu,
            activeLink = _this$props.activeLink,
            activeTouchpoint = _this$props.activeTouchpoint,
            touchpoints = _this$props.touchpoints,
            authenticatedAccountLinks = _this$props.authenticatedAccountLinks;
        return h(y, null, h(SideMenu, {
          activeTouchpoint: activeTouchpoint,
          closeSideMenu: closeSideMenu,
          sideMenuOpen: sideMenuOpen,
          openSubMenu: this.props.openSubMenu,
          touchpoints: touchpoints,
          authenticatedAccountLinks: authenticatedAccountLinks
        }), h(SubMenu, {
          activeTouchpoint: activeTouchpoint,
          closeSideMenu: closeSideMenu,
          sideMenuOpen: this.props.sideMenuOpen,
          isOpen: this.props.subMenuOpen,
          closeSubMenu: this.props.closeSubMenu,
          text: this.props.subItemText,
          links: this.props.subItemItems
        }));
      }
    }]);

    return SideMenuSection;
  }(d);

  var ApplicationSwitcherSvg = svgFactory('application-switcher');

  /**
   *
   * interface Card {
   *   asset: CardAsset
   *   title: string
   *   platform_availability: CardPlatformAvailability[]
   *   type: string
   *   isPlaceholder: boolean
   * }
   *
   * interface CardAsset {
   *   url: string
   *   content_type: string
   *   title: string
   * }
   *
   * type CardPlatformAvailability = "Windows" | "Mac" | "Mobile" | "Switch"
   */

  /**
   * Props: {card}
   */

  var CardBase =
  /*#__PURE__*/
  function (_Component) {
    _inherits(CardBase, _Component);

    function CardBase() {
      _classCallCheck(this, CardBase);

      return _possibleConstructorReturn(this, _getPrototypeOf(CardBase).apply(this, arguments));
    }

    _createClass(CardBase, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {}
    }, {
      key: "render",
      value: function render() {
        var card = this.props.card;
        var cardClassName = "riotbar-application-switcher-card-".concat(card.type.replace('_card', ''));
        cardClassName += " riotbar-application-switcher-card";

        if (card.isPlaceholder) {
          cardClassName += " riotbar-application-switcher-card-placeholder";
        }

        var cardAssetUrl = null;

        if (card.asset) {
          cardAssetUrl = card.asset.url; // @TODO - smarter check for this

          if (!cardAssetUrl.includes("format=")) {
            cardAssetUrl += '?format=pjpg&quality=85';
          }
        }

        return h("div", {
          className: cardClassName
        }, h("a", {
          href: card.link,
          target: "_blank"
        }, h("div", {
          className: "riotbar-application-switcher-card-image-wrapper"
        }, cardAssetUrl !== null ? h("img", {
          src: cardAssetUrl,
          alt: card.title,
          title: card.title
        }) : h(ApplicationSwitcherSvg, {
          width: "44",
          height: "33",
          _id: "placeholderFist"
        })), h("div", {
          className: "riotbar-application-card-title-wrapper"
        }, h("h4", null, card.title)), this.renderPlatformAvailability()));
      }
    }, {
      key: "renderPlatformAvailability",
      value: function renderPlatformAvailability() {
        var card = this.props.card;

        if (card.isPlaceholder) {
          // Return an empty container
          return h("div", {
            className: "riotbar-platform-availability-wrapper"
          });
        }

        if (!card.platform_availability || card.platform_availability.length === 0) {
          return null;
        }

        return h("div", {
          className: "riotbar-platform-availability-wrapper"
        }, card.platform_availability.map(function (platform) {
          return h("div", {
            className: "riotbar-platform-availability-icon-wrapper platform-".concat(platform.toLowerCase())
          }, h(ApplicationSwitcherSvg, {
            _id: _getPlatformSVGId(platform),
            width: "8",
            height: "8",
            domClassName: "riotbar-application-platform-icon"
          }));
        }));
      }
    }]);

    return CardBase;
  }(d);
  /**
   *
   * @param {string} platform
   */


  function _getPlatformSVGId(platform) {
    platform = platform.toLowerCase(); // Use a switch statement here to build up any stacking mapping with an easy default to itself

    switch (platform) {
      case 'mobile':
        return 'platform_phone';

      case 'mac':
        return 'platform_macintosh';

      default:
        return 'platform_' + platform;
    }
  }

  var ApplicationSwitcherCards =
  /*#__PURE__*/
  function (_Component2) {
    _inherits(ApplicationSwitcherCards, _Component2);

    function ApplicationSwitcherCards() {
      _classCallCheck(this, ApplicationSwitcherCards);

      return _possibleConstructorReturn(this, _getPrototypeOf(ApplicationSwitcherCards).apply(this, arguments));
    }

    _createClass(ApplicationSwitcherCards, [{
      key: "render",
      value: function render() {
        var cards = this.props.cards;

        if (cards.length === 0) {
          cards.push.apply(cards, _toConsumableArray(this.getDefaultCards()));
        }

        return h("div", {
          className: "riotbar-application-switcher-cards-wrapper riotbar-switcher-cards-wrapper-selected-".concat(this.props.selectedTab.replace(/_/g, '-'))
        }, cards.map(function (card) {
          return h(CardBase, {
            card: card,
            key: card.title
          });
        }));
      }
    }, {
      key: "getDefaultCards",
      value: function getDefaultCards() {
        var cards = [];
        var selectedTab = this.props.selectedTab;

        if (selectedTab === 'riot_games') {
          while (cards.length < 2) {
            cards.push({
              type: 'promo_card',
              isPlaceholder: true
            });
          }

          while (cards.length < 6) {
            cards.push({
              type: 'game_card',
              isPlaceholder: true
            });
          }
        } else if (selectedTab === 'explore') {
          while (cards.length < 6) {
            cards.push({
              type: 'explore',
              isPlaceholder: true
            });
          }
        }

        return cards;
      }
    }]);

    return ApplicationSwitcherCards;
  }(d);

  var Submenu =
  /*#__PURE__*/
  function (_Component) {
    _inherits(Submenu, _Component);

    function Submenu(props) {
      var _this;

      _classCallCheck(this, Submenu);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Submenu).call(this, props));
      _this.state = {
        errorLoadingEntities: false,
        loading: false,
        entriesByType: {},
        selectedCards: [],
        selectedTab: 'riot_games' // riot_games, explore

      };
      return _this;
    }

    _createClass(Submenu, [{
      key: "getDefaultProps",
      value: function getDefaultProps() {
        return {
          isOpen: false,
          handleClose: function handleClose() {}
        };
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.loadEntities();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        if (!this.props.isOpen) {
          return null;
        }

        return h("div", {
          id: "riotbar-application-switcher",
          className: "riotbar-base-element"
        }, h(ApplicationSwitcherSvg, {
          width: "24",
          height: "24",
          _id: "applicationSwitcherArrow",
          domClassName: "riotbar-application-switcher-arrow"
        }), h("div", {
          className: "riotbar-application-switcher-mobile-header"
        }, h("div", {
          className: "riotbar-application-switcher-mobile-logo-wrapper"
        }, h("a", {
          href: "https://www.riotgames.com",
          target: "_blank"
        }, h(ApplicationSwitcherSvg, {
          height: "32",
          width: "99",
          _id: "riotGamesFull"
        }))), h("div", {
          className: "riotbar-application-switcher-close",
          onClick: function onClick() {
            return _this2.props.handleClose();
          }
        }, h(ApplicationSwitcherSvg, {
          height: "32",
          width: "32",
          _id: "applicationSwitcherClose"
        }))), this.renderContent());
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        return h("div", {
          className: "riotbar-pagewidth riotbar-subcontent",
          id: "riotbar-application-switcher-content"
        }, this.renderTabs(), h(ApplicationSwitcherCards, {
          cards: this.state.selectedCards,
          selectedTab: this.state.selectedTab
        }));
      }
    }, {
      key: "renderTabs",
      value: function renderTabs() {
        var _this3 = this;

        return h("div", {
          className: "riotbar-application-switcher-tabs-wrapper riotbar-switcher-tabs-wrapper-selected-".concat(this.state.selectedTab.replace(/_/g, '-'))
        }, h("span", {
          onClick: function onClick() {
            return _this3.handleSelectTab('riot_games');
          },
          className: this.state.selectedTab === 'riot_games' ? "riotbar-application-selected-tab" : ''
        }, "RIOT GAMES"), h("div", {
          id: "riotbar-application-switcher-desktop-close",
          onClick: function onClick() {
            return _this3.props.handleClose();
          }
        }, h("span", {
          id: "riotbar-application-switcher-desktop-visit-riot-games"
        }, h("a", {
          href: "https://www.riotgames.com/",
          target: "_blank"
        }, "САЙТ RIOT GAMES")), h(ApplicationSwitcherSvg, {
          width: "24",
          height: "24",
          _id: "applicationSwitcherDesktopClose"
        })));
      }
    }, {
      key: "handleSelectTab",
      value: function handleSelectTab(tab) {
        var selectedCards = this.state.entriesByType[tab] || [];
        this.setState({
          selectedTab: tab,
          selectedCards: selectedCards
        });
      }
    }, {
      key: "loadEntities",
      value: function loadEntities() {
        var _this4 = this;

        // Don't try and load multiple times, just in case
        if (this.state.loading) {
          return;
        }

        this.setState({
          loading: true,
          errorLoadingEntities: false
        }, function () {
          // fetch entities
          fetch(_this4.getManifestURL()).then(function (resp) {
            return resp.json();
          }).then(function (data) {
            var entriesByType = {};

            if (data.sections) {
              for (var x = 0; x < data.sections.length; x++) {
                var section = data.sections[x];
                entriesByType[section.type] = section.cards;
              }
            }

            _this4.setState({
              loading: false,
              entriesByType: entriesByType
            }, function () {
              _this4.handleSelectTab('riot_games'); // Select riot_games by default

            });
          }).catch(function (err) {
            console.log(err);

            _this4.setState({
              loading: false,
              errorLoadingEntities: true
            });
          });
        });
      }
    }, {
      key: "getManifestURL",
      value: function getManifestURL() {
        var cdnURL = RiotBar.data.applicationSwitcher.contentManifestCDN;
        return "".concat(cdnURL, "ru_RU.json");
      }
    }]);

    return Submenu;
  }(d);

  var renderContext = L(null);

  var RootRenderConsumer = renderContext.Consumer;

  var ApplicationSwitcher =
  /*#__PURE__*/
  function (_Component) {
    _inherits(ApplicationSwitcher, _Component);

    function ApplicationSwitcher() {
      var _this;

      _classCallCheck(this, ApplicationSwitcher);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(ApplicationSwitcher).call(this));
      _this.state = {
        isApplicationSwitcherOpen: false
      }; // Ugggggggly binding :(

      _this.listenForClickClose = _this.listenForClickClose.bind(_assertThisInitialized(_this));
      _this.listenForEscapeKeyClose = _this.listenForEscapeKeyClose.bind(_assertThisInitialized(_this));
      _this.toggleApplicationSwitcher = _this.toggleApplicationSwitcher.bind(_assertThisInitialized(_this));
      _this.closeApplicationSwitcher = _this.closeApplicationSwitcher.bind(_assertThisInitialized(_this));
      return _this;
    }

    _createClass(ApplicationSwitcher, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        document.addEventListener('click', this.listenForClickClose);
        document.addEventListener('keyup', this.listenForEscapeKeyClose);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        document.removeEventListener('click', this.listenForClickClose);
        document.removeEventListener('keyup', this.listenForEscapeKeyClose);
      }
    }, {
      key: "renderThemeLogo",
      value: function renderThemeLogo() {
        if (manager.getHomepageURL()) {
          return h("a", {
            href: manager.getHomepageURL()
          }, manager.getDesktopLogo());
        }

        return manager.getDesktopLogo();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var config = RiotBar.data.applicationSwitcher || {};
        var homepageUrl = config.enabled ? manager.getHomepageURL() || null : 'https://www.riotgames.com';
        return h("div", {
          id: "riotbar-navmenu",
          className: "".concat(manager.getClassNamePrefix(), "-theme riotbar-branding-switcher")
        }, h("span", {
          style: "display: inline-block"
        }, h("a", {
          className: "riotbar-logo",
          href: homepageUrl,
          onClick: this.toggleApplicationSwitcher
        }, h("span", {
          className: "riot-bar-fist-logo"
        }), config.enabled ? h(NavigationSvg, {
          width: "8",
          height: "5",
          _id: "mainMenuDownNonHover",
          domClassName: "non-hover drop"
        }) : null, config.enabled ? h(NavigationSvg, {
          width: "8",
          height: "5",
          _id: "mainMenuDownHover",
          domClassName: "hover drop"
        }) : null), h("span", {
          className: "riotbar-navbar-separator main-logo-separator"
        }), h("span", {
          className: "second-logo"
        }, this.renderThemeLogo())), h(RootRenderConsumer, null, function (value) {
          if (config.enabled) {
            return W(h(Submenu, {
              isOpen: _this2.state.isApplicationSwitcherOpen,
              handleClose: _this2.closeApplicationSwitcher
            }), value && value.el.current ? value.el.current : document.body);
          } else {
            return null;
          }
        }));
      }
    }, {
      key: "toggleApplicationSwitcher",
      value: function toggleApplicationSwitcher(evt) {
        var _this3 = this;

        try {
          if (!RiotBar.data.applicationSwitcher.enabled) {
            return false;
          }
        } catch (err) {
          return false;
        } // Prevent default event delgation only if the app switcher is enabled.
        // The link will work naturally when disabled


        try {
          evt.preventDefault();
        } catch (e) {}

        this.setState({
          isApplicationSwitcherOpen: !this.state.isApplicationSwitcherOpen
        }, function () {
          if (_this3.state.isApplicationSwitcherOpen) {
            document.body.className += ' riotbar-application-switcher-open';

            _this3.addOverlayNode();
          } else {
            document.body.className = document.body.className.replace(/riotbar-application-switcher-open/g, '').trim();

            _this3.removeOverlayNode();
          }
        });
      }
    }, {
      key: "closeApplicationSwitcher",
      value: function closeApplicationSwitcher() {
        var _this4 = this;

        if (this.state.isApplicationSwitcherOpen) {
          this.setState({
            isApplicationSwitcherOpen: false
          }, function () {
            document.body.className = document.body.className.replace(/riotbar-application-switcher-open/g, '').trim();

            _this4.removeOverlayNode();
          });
        }
      }
      /**
       * Listens for click events on the document that do not belong to the open target box
       */

    }, {
      key: "listenForClickClose",
      value: function listenForClickClose(evt) {
        if (evt.defaultPrevented) {
          return;
        }

        if (!common.isDescendantOfClass(evt.target, 'riotbar-subcontent') && !common.isDescendantOfClass(evt.target, 'riotbar-branding-switcher') && !common.isDescendantOfId(evt.target, 'riotbar-application-switcher')) {
          this.closeApplicationSwitcher();
        }
      }
    }, {
      key: "listenForEscapeKeyClose",
      value: function listenForEscapeKeyClose(evt) {
        // Was this really never intending to be fired?  If another handler captured this and we don't want to bubble for some reason?
        if (evt.defaultPrevented) {
          return;
        }

        var key = evt.key || evt.keyCode; // All possible cross-browser permutations of the escape key by .key or .keyCode

        if (key === 'Esc' || key === 'Escape' || key === 27) {
          this.closeApplicationSwitcher();
        }
      }
    }, {
      key: "addOverlayNode",
      value: function addOverlayNode() {
        if (!document.getElementById('riotbar-page-overlay')) {
          var overlayEl = document.createElement('div');
          overlayEl.id = 'riotbar-page-overlay';
          document.body.appendChild(overlayEl);
        }
      }
    }, {
      key: "removeOverlayNode",
      value: function removeOverlayNode() {
        try {
          var overlay = document.getElementById('riotbar-page-overlay');

          if (overlay) {
            overlay.parentNode.removeChild(overlay);
          }
        } catch (err) {
          /* noop */
        }
      }
    }]);

    return ApplicationSwitcher;
  }(d);

  var AccountDropdown = (function (_ref) {
    var authenticatedLinks = _ref.authenticatedLinks,
        accountHandler = _ref.accountHandler;
    return h(y, null, authenticatedLinks ? authenticatedLinks.map(function (link) {
      var classes = ['riotbar-account-link', link.action ? 'riotbar-account-action' : ''];
      return h("a", {
        className: classes.join(' '),
        onClick: accountHandler,
        href: link.url || null,
        "data-riotbar-account-action": link.action
      }, link.text);
    }) : null);
  });

  var AccountContext = L({
    isAuthenicated: false,
    name: false,
    // @TODO this should be a `null` property but I don't want to risk changing it at the moment
    tag: false,
    region: null
  });

  function AccountAuth(_ref) {
    var accountHandler = _ref.accountHandler;

    var _useState = v$1(false),
        _useState2 = _slicedToArray(_useState, 2),
        isActive = _useState2[0],
        setActive = _useState2[1];

    var authState = w$1(AccountContext);
    var authenticatedLinks = RiotBar.data.account.authenticatedLinks || [];
    var accountBarClicked = T$1(function (evt) {
      if (window.innerWidth > 1024) {
        return;
      }

      setActive(!isActive);
      common.toggleClass(evt.currentTarget.parentElement, 'active', isActive);
    }, [setActive, isActive]);
    var playerName = authState.name || "Моя учетная запись";
    return h(y, null, h("div", {
      id: "riotbar-account-bar",
      onClick: accountBarClicked,
      className: isActive ? 'active' : ''
    }, h("div", {
      className: "riotbar-summoner-info"
    }, h("div", {
      className: "riotbar-summoner-name"
    }, playerName, h(ArrowDownSvg, {
      color: manager.getAccentColor()
    })))), h("div", {
      id: "riotbar-account-dropdown"
    }, h("div", {
      className: "riotbar-account-info"
    }, h("div", {
      id: "riotbar-account-dropdown-plugins"
    }), h("div", {
      className: "riotbar-summoner-info"
    }, h("div", {
      className: "riotbar-summoner-name"
    }, playerName))), h("div", {
      id: "riotbar-account-dropdown-links"
    }, h(AccountDropdown, {
      accountHandler: accountHandler,
      authenticatedLinks: authenticatedLinks
    }))));
  }

  var AccountAnon = (function (_ref) {
    var accountHandler = _ref.accountHandler;

    var _window$RiotBar$__acc = window.RiotBar.__accountUtils.accountComponentProps(),
        anonymousLinks = _window$RiotBar$__acc.anonymousLinks;

    return h(y, null, anonymousLinks ? anonymousLinks.map(function (link) {
      var id = link.id,
          action = link.action,
          text = link.text,
          isButton = link.isButton;
      var classes = ['riotbar-anonymous-link', action ? 'riotbar-account-action' : '', isButton ? 'theme-button' : ''];
      return h("a", {
        "data-riotbar-link-id": id,
        className: classes.join(' '),
        "data-riotbar-account-action": action || null,
        href: link.url || null,
        onClick: accountHandler
      }, text);
    }) : null);
  });

  function Account() {
    var config = RiotBar.data.account;

    if (!config.enabled) {
      return null;
    }

    var authState = w$1(AccountContext);

    var accounLinktHandler = function accounLinktHandler(evt) {
      var anchor = evt.target;
      var actionMaybe = anchor.getAttribute('data-riotbar-account-action');

      if (actionMaybe) {
        evt.preventDefault();

        try {
          RiotBar.account[actionMaybe]();
        } catch (err) {
          common.logError(err);
        }
      }
    };

    return h("div", {
      id: "riotbar-account"
    }, authState && authState.isAuthenticated ? h(AccountAuth, {
      accountHandler: accounLinktHandler
    }) : h(AccountAnon, {
      accountHandler: accounLinktHandler
    }));
  }

  var Message =
  /*#__PURE__*/
  function (_Component) {
    _inherits(Message, _Component);

    function Message() {
      var _this;

      _classCallCheck(this, Message);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this));
      _this.state = {
        open: false
      };
      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));
      return _this;
    }

    _createClass(Message, [{
      key: "toggle",
      value: function toggle() {
        this.setState({
          open: !this.state.open
        });
      }
    }, {
      key: "render",
      value: function render() {
        var message = this.props.message;
        var messageSubstr = message.content.substring(0, 40);
        var open = this.state.open;
        var severity = message.severity;
        return h("div", {
          id: "message-".concat(message.id),
          className: "status-message ".concat(open ? '' : 'closed'),
          "data-ping-meta": "riotbar-serviceStatusMessageId=".concat(message.id, "|riotbar-serviceStatusMessageTitle=").concat(messageSubstr)
        }, h("div", {
          className: "message-summary",
          "data-ping-meta": "riotbar-serviceStatusAction=toggleMessage",
          onClick: this.toggle
        }, h("div", {
          className: "message-toggle"
        }, h("svg", {
          width: "8",
          height: "5",
          viewBox: "0 0 8 5",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg"
        }, h("path", {
          d: "M0.707109 1.70711L3.29289 4.29289C3.68342 4.68342 4.31658 4.68342 4.70711 4.29289L7.29289 1.70711C7.92286 1.07714 7.47669 0 6.58579 0H1.41421C0.523309 0 0.0771438 1.07714 0.707109 1.70711Z",
          fill: "white"
        }))), h("div", {
          className: "severity-indicator"
        }, h(NavigationSvg, {
          width: "24",
          height: "24",
          _id: "serviceStatus-".concat(severity)
        })), h("div", {
          className: "message-title"
        }, message.content)), h("a", {
          className: "message-text",
          href: "//status.leagueoflegends.com/?ru_RU#ru",
          "data-ping-meta": "riotbar-serviceStatusAction=statusPage"
        }, message.content));
      }
    }]);

    return Message;
  }(d);

  var ServiceStatusContents =
  /*#__PURE__*/
  function (_Component2) {
    _inherits(ServiceStatusContents, _Component2);

    function ServiceStatusContents() {
      var _this2;

      _classCallCheck(this, ServiceStatusContents);

      _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ServiceStatusContents).call(this));
      _this2.state = {
        open: false
      };
      _this2.toggle = _this2.toggle.bind(_assertThisInitialized(_this2));
      document.addEventListener('click', function (evt) {
        if (!common.isDescendantOfId(evt.target, 'riotbar-service-status-icon') && !common.isDescendantOfId(evt.target, 'riotbar-service-status-messages')) {
          _this2.setState({
            open: false
          });
        }
      });
      return _this2;
    }

    _createClass(ServiceStatusContents, [{
      key: "toggle",
      value: function toggle() {
        this.setState({
          open: !this.state.open
        });
      }
    }, {
      key: "summarySeverity",
      value: function summarySeverity(messages) {
        var severityLevel = {
          info: 1,
          warn: 2,
          error: 3
        };
        var maxSeverity = Math.max.apply(null, messages.map(function (m) {
          return severityLevel[m.severity] || 1;
        }));
        var res = Object.keys(severityLevel).filter(function (k) {
          return severityLevel[k] == maxSeverity;
        })[0] || 'info';
        return res;
      }
    }, {
      key: "render",
      value: function render() {
        var packet = this.props.packet;
        var open = this.state.open;

        var _ref = packet || {},
            messages = _ref.messages;

        if (!messages || !messages.length) {
          return null;
        }

        var summarySeverity = this.summarySeverity(messages);
        var title = 'Состояние сервера';
        return h(y, null, h("div", {
          id: "riotbar-service-status-icon",
          className: "severity-".concat(summarySeverity),
          onClick: this.toggle
        }, summarySeverity == 'info' ? h(y, null, h(NavigationSvg, {
          width: "24",
          height: "24",
          _id: "serviceStatus-info",
          domClassName: "base"
        }), h(NavigationSvg, {
          width: "24",
          height: "24",
          _id: "serviceStatus-info-hover",
          domClassName: "hover"
        })) : null, summarySeverity == 'warn' ? h(y, null, h(NavigationSvg, {
          width: "24",
          height: "24",
          _id: "serviceStatus-warn",
          domClassName: "base"
        }), h(NavigationSvg, {
          width: "24",
          height: "24",
          _id: "serviceStatus-warn-hover",
          domClassName: "hover"
        })) : null, summarySeverity == 'error' ? h(y, null, h(NavigationSvg, {
          width: "24",
          height: "24",
          _id: "serviceStatus-error",
          domClassName: "base"
        }), h(NavigationSvg, {
          width: "24",
          height: "24",
          _id: "serviceStatus-error-hover",
          domClassName: "hover"
        })) : null), h("div", {
          id: "riotbar-service-status-messages",
          className: open ? 'active' : ''
        }, messages.map(function (message, i) {
          return h(Message, {
            message: message
          });
        })));
      }
    }]);

    return ServiceStatusContents;
  }(d);

  var ServiceStatus =
  /*#__PURE__*/
  function (_Component3) {
    _inherits(ServiceStatus, _Component3);

    function ServiceStatus() {
      _classCallCheck(this, ServiceStatus);

      return _possibleConstructorReturn(this, _getPrototypeOf(ServiceStatus).apply(this, arguments));
    }

    _createClass(ServiceStatus, [{
      key: "render",
      value: function render() {
        var serviceStatusPacket = this.props.serviceStatusPacket;

        if (!RiotBar.data.serviceStatus.enabled) {
          return null;
        }

        return h("div", {
          id: "riotbar-service-status",
          "data-ping-meta": "riotbar-content=service-status"
        }, h(ServiceStatusContents, {
          packet: serviceStatusPacket
        }));
      }
    }]);

    return ServiceStatus;
  }(d);

  // Shared auth state event object
  var changeEvent = document.createEvent('Event');
  changeEvent.initEvent('riotbar_account_authstate_change', false, true);

  var logger = {
    info: function info(msg) {
      console.info ? console.info(msg) : this.log(msg);
    },
    log: function log(msg) {
      console.log ? console.log(msg) : void 0;
    },
    error: function error(msg) {
      console.error ? console.error(msg) : this.log(msg);
    }
  };
  var logger_1 = logger.info;
  var logger_2 = logger.log;
  var logger_3 = logger.error;

  var REGION_MISMATCH_COOKIE_NAME = 'rbregmm';

  function AccountContextWrapper(_ref) {
    var children = _ref.children;

    var _useState = v$1(RiotBar.data.account.initializeAuthState ? window.RiotBar.account.initializeAuthState() : window.RiotBar.account.getAuthState()),
        _useState2 = _slicedToArray(_useState, 2),
        authState = _useState2[0],
        updateAuthState = _useState2[1];

    p$1(function () {
      document.addEventListener(changeEvent.type, function () {
        // We have to create a new object, otherwise preact doesn't realize it's an update
        // and it won't trigger a re-render
        var newState = Object.create(RiotBar.account.getAuthState());
        updateAuthState(newState);
      });
      return function () {
        document.removeEventListener(changeEvent.type);
      };
    }, [updateAuthState]); // Event listener for the "You're in the wrong locale"

    p$1(function () {
      // @TODO do we want a better way to get default build region? 
      // @TODO Should we change alerts to be a consumer / producer so other components can more easily publish alerts?  
      // to avoid possible conflicts with waiting for the RiotBar.alerts.showAlert function to be available?
      if (authState && authState.isAuthenticated && authState.region !== 'ru') {
        if (!common.getCookie(REGION_MISMATCH_COOKIE_NAME)) {
          try {
            RiotBar.alerts.showAlert({
              id: 'account-region-mismatch',
              title: "Выбранный язык отличается от языка вашей учетной записи.",
              body: "Если вы хотите просматривать этот сайт на языке, который был выбран при регистрации, нажмите на значок глобуса выше.",
              onClose: function onClose() {
                common.setCookie(REGION_MISMATCH_COOKIE_NAME, "accept");
              }
            });
          } catch (err) {
            logger.error(err);
          }
        }
      }
    }, [authState]);
    return h(AccountContext.Provider, {
      value: authState
    }, children);
  }

  var CloseSVG = (function (_ref) {
    var onClick = _ref.onClick;
    return h("svg", {
      width: "68",
      height: "68",
      viewBox: "0 0 68 68",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      onClick: onClick || void 0
    }, h("rect", {
      width: "68",
      height: "68",
      rx: "24",
      fill: "#F9F9F9",
      fillOpacity: "0.1"
    }), h("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M34.0001 35.4143L40.793 42.2072L42.2072 40.793L35.4143 34.0001L42.2072 27.2073L40.793 25.793L34.0001 32.5859L27.2072 25.793L25.793 27.2072L32.5859 34.0001L25.793 40.793L27.2072 42.2073L34.0001 35.4143Z",
      fill: "#EBEBEB"
    }));
  });

  /**
   * @param {RiotbarAlert} alert
   */

  var Alert = (function (_ref) {
    var alert = _ref.alert;

    if (!alert || !alert.id || !alert.title || !alert.body) {
      return null;
    }

    var _useState = v$1(false),
        _useState2 = _slicedToArray(_useState, 2),
        isClosing = _useState2[0],
        setIsClosing = _useState2[1];

    var closeAlert = function closeAlert() {
      // set state to update classes to trigger transition
      setIsClosing(true); // A delay for animation sequencing

      setTimeout(function () {
        if (alert.onClose && typeof alert.onClose === "function") {
          try {
            alert.onClose();
          } catch (err) {}
        }

        try {
          RiotBar.alerts.hideAlert(alert.id);
          setIsClosing(false);
        } catch (err) {
          /* noop */
          setIsClosing(false);
          logger.error(err);
        }
      }, 500);
    };

    var rootClasses = ["riotbar-alert"];

    if (isClosing) {
      rootClasses.push("riotbar-alert-is-closing");
    }

    return h("div", {
      className: rootClasses.join(" ")
    }, h("div", {
      className: "riotbar-alert-inner"
    }, h("div", {
      className: "riotbar-alert-content"
    }, h("div", {
      className: "riotbar-alert-title"
    }, alert.title), h("div", {
      className: "riotbar-alert-body"
    }, alert.body)), h("div", {
      className: "riotbar-alert-close-container"
    }, h(CloseSVG, {
      onClick: closeAlert
    })), alert.buttons && alert.buttons.length ? h("div", {
      className: "riotbar-alert-buttons-container"
    },
    /* Max of 2 */
    alert.buttons.slice(0, 2).map(function (buttonData) {
      if (!buttonData.text || !buttonData.id) {
        return null;
      }

      return h("div", {
        className: "riotbar-alert-button" + (buttonData.secondary ? " riotbar-alert-button-secondary" : ""),
        "data-ping-alert-id": buttonData.id,
        key: buttonData.id,
        onClick: buttonData.onClick || void 0
      }, buttonData.text);
    })) : null));
  });

  /**
   * @typedef {Object} RiotbarAlertButton
   * @property {string} text - Text shown on the button
   * @property {function} onClick - callback to be fired when clicked
   * @property {boolean} secondary - default to false. Displays button as secondary color rather than primary color palette.
   */

  /**
   * @typedef {Object} RiotbarAlert
   * @property {string} id - what is the ID of the alert, to be referenced
   * @property {string} title - Title to be shown in the alert
   * @property {string} body - Alert body message. No HTML.
   * @property {Function} onClose - optional close callback
   * @property {RiotbarAlertButton[]} buttons - Set of buttons to be shown in the alert message
   */

  /**
   * @typedef {Function} AlertSetter - set alerts
   */

  var NoticesContainer = (function () {
    /**
     * @type {[RiotbarAlert[], AlertSetter]}
     */
    var _useState = v$1([]),
        _useState2 = _slicedToArray(_useState, 2),
        alerts = _useState2[0],
        setAlerts = _useState2[1];

    var alertContainerRef = d$1();
    /**
     * @callback
     * @param {RiotbarAlert} alertData
     */

    var showAlertFunc = function showAlertFunc(alertData) {
      // validate alert data
      if (!alertData || !alertData.id || !alertData.title || !alertData.body) {
        throw new Exception("Invalid alert data. Must pass an object with id, title and body properties.");
      }

      setAlerts([].concat(_toConsumableArray(alerts), [alertData]));
    };
    /**
     *
     * @param {string} alertId
     */


    var hideAlertFunc = function hideAlertFunc(alertId) {
      var newAlerts = alerts.filter(function (alert) {
        return alert.id !== alertId;
      });
      setAlerts(_toConsumableArray(newAlerts));
    };

    var shiftCookiePreferencesButton = function shiftCookiePreferencesButton() {
      // Check to see if the cookie policy button exists, if so, make it offset
      var cookiePolicyButton = document.querySelector(".riotbar-cookie-policy-v2.cookie-link");

      if (cookiePolicyButton && alertContainerRef.current) {
        cookiePolicyButton.style.bottom = alertContainerRef.current.getBoundingClientRect().height + 10 + "px";
      }
    };

    p$1(function () {
      RiotBar.alerts = {
        hideAlert: hideAlertFunc,
        showAlert: showAlertFunc
      };
    }, [hideAlertFunc, showAlertFunc]);
    l$1(function () {
      shiftCookiePreferencesButton();
    }, [alerts]);
    return h("div", {
      id: "riotbar-alerts-container",
      ref: alertContainerRef
    }, alerts && alerts.length > 0 ? h(Alert, {
      alert: alerts[0]
    }) : null);
  });

  var Alerts = (function () {
    return W(h(NoticesContainer, null), document.body);
  });

  common.appendStyles(styles$2);
  var NavigationSvg$2 = svgFactory("navigation");
  var fontLoadedPromise = null;

  if (window.Promise && document.fonts) {
    fontLoadedPromise = new Promise(function (res) {
      //document.fonts.ready is a bottomless pit of despair. Beware. AJR 9/16/19
      document.fonts.onloadingdone = function (packet) {
        if (packet.fontfaces.filter(function (f) {
          return f.family == "FF Mark W05";
        })) {
          res(1);
        }
      };
    });
  }

  var RenderContextProvider = renderContext.Provider;

  var Root =
  /*#__PURE__*/
  function (_Component) {
    _inherits(Root, _Component);

    function Root() {
      var _this;

      _classCallCheck(this, Root);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Root).call(this));
      _this.state = {
        sideMenuOpen: false,
        subMenuOpen: false,
        subItemText: "",
        subItemItems: [],
        activeLink: null,
        activeTouchpoint: null,
        hasTitle: false,
        title: null,
        touchpoints: null,
        authenticatedAccountLinks: null,
        notificationsPacket: null,
        serviceStatusPacket: null
      };
      _this.openSideMenu = _this.openSideMenu.bind(_assertThisInitialized(_this));
      _this.closeSideMenu = _this.closeSideMenu.bind(_assertThisInitialized(_this));
      _this.openSubMenu = _this.openSubMenu.bind(_assertThisInitialized(_this));
      _this.closeSubMenu = _this.closeSubMenu.bind(_assertThisInitialized(_this));
      _this.updateParentMargin = _this.updateParentMargin.bind(_assertThisInitialized(_this));
      _this.rootRenderElementRef = p(); // Expose this method to the window.RiotBar for
      // external extensions to make use of this (such as alerts and cookie)

      window.RiotBar.updateParentMargin = _this.updateParentMargin;
      document.addEventListener("click", function (evt) {
        if (!common.isDescendantOfClass(evt.target, "riotbar-navmenu-dropdown") && !common.isDescendantOfId(evt.target, "riotbar-explore")) {
          _this.closeSideMenu();
        }
      });
      window.RiotBar.navigation = {
        setActiveLink: _this.setActiveLink.bind(_assertThisInitialized(_this)),
        setActiveTouchpoint: _this.setActiveTouchpoint.bind(_assertThisInitialized(_this))
      }; // @TODO is this needed?

      window.RiotBar.__internalSetState = _this.setState.bind(_assertThisInitialized(_this));

      window.RiotBar.__internalUpdateNotificationsPacket = function (props) {
        return _this.setState({
          notificationsPacket: _objectSpread2({}, _this.state.notificationsPacket || {}, {}, props)
        });
      };

      window.RiotBar.__internalSetServiceStatusPacket = function (status) {
        return _this.setState({
          serviceStatusPacket: status
        });
      };

      return _this;
    }
    /**
     * Sets which link is displayed as active.
     * Can be called via `RiotBar.navigation.setActiveLink()`.
     *
     * @param {string} id - The ID of the link to set.
     */


    _createClass(Root, [{
      key: "setActiveLink",
      value: function setActiveLink(id) {
        this.setState({
          activeLink: id
        });
      }
    }, {
      key: "setActiveTouchpoint",
      value: function setActiveTouchpoint(id) {
        this.setState({
          activeTouchpoint: id
        });
      }
    }, {
      key: "openSubMenu",
      value: function openSubMenu(text, links) {
        this.setState({
          subMenuOpen: true,
          subItemText: text,
          subItemItems: links
        });
      }
    }, {
      key: "closeSubMenu",
      value: function closeSubMenu() {
        this.setState({
          subMenuOpen: false
        });
      }
    }, {
      key: "openSideMenu",
      value: function openSideMenu(evt) {
        this.setState({
          sideMenuOpen: true
        });
      }
    }, {
      key: "closeSideMenu",
      value: function closeSideMenu() {
        this.setState({
          sideMenuOpen: false,
          subMenuOpen: false
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.updateParentMargin();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.updateParentMargin();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
            activeLink = _this$state.activeLink,
            activeTouchpoint = _this$state.activeTouchpoint,
            sideMenuOpen = _this$state.sideMenuOpen,
            notificationsPacket = _this$state.notificationsPacket,
            serviceStatusPacket = _this$state.serviceStatusPacket;
        var touchpoints = RiotBar.data.touchpoints.links || [];
        var icons = this.props.icons;
        var title = RiotBar.data.theme.desktopTitle || null;
        var barClasses = ["i18n-ru", "riotbar-mobile-responsive", "".concat(manager.getClassNamePrefix(), "-theme riotbar-base-element"), sideMenuOpen ? "sidebar-open" : ""];
        var rightContentClasses = ["riotbar-right-content", "riotbar-show-links"]; // Nothing to show in the menu? Don't show the option to show the mobile menu

        var hideMobileMenu = RiotBar.data.account.enabled && (!touchpoints || touchpoints.length === 0);
        return h("div", {
          id: "riotbar-bar-wrapper",
          ref: this.rootRenderElementRef,
          className: RiotBar.data.theme && RiotBar.data.theme.isSticky ? "riotbar-sticky" : ""
        }, h(AccountContextWrapper, null, h(RenderContextProvider, {
          value: {
            el: this.rootRenderElementRef,
            updateParentMargin: this.updateParentMargin
          }
        }, h("div", {
          id: "riotbar-bar",
          className: barClasses.join(" "),
          lang: "ru"
        }, h("div", {
          id: "riotbar-left-content",
          className: "riotbar-left-content"
        }, h(ApplicationSwitcher, null)), h("div", {
          id: "riotbar-bar-content",
          className: "riotbar-bar-content"
        }, h(DesktopNav, {
          fontLoaded: fontLoadedPromise,
          title: title
        })), h("div", {
          className: "riotbar-right-mobile-content"
        }, h(ServiceStatus, {
          serviceStatusPacket: serviceStatusPacket
        })), h("div", {
          id: "riotbar-right-content",
          className: rightContentClasses.join(" ")
        }, hideMobileMenu ? null : h("div", {
          id: "riotbar-mobile-nav"
        }, h("a", {
          id: "riotbar-explore",
          class: "riotbar-explore",
          onClick: this.openSideMenu
        }, h(NavigationSvg$2, {
          width: "32",
          height: "32",
          _id: "burgerNav"
        }))), h(ServiceStatus, {
          serviceStatusPacket: serviceStatusPacket
        }), notificationsPacket ? h(notificationsPacket.Component, {
          packet: notificationsPacket
        }) : null, h(RightContentIcons, {
          icons: icons
        }), h(Account, null), h(SideMenuSection, {
          openSubMenu: this.openSubMenu,
          closeSideMenu: this.closeSideMenu,
          closeSubMenu: this.closeSubMenu,
          sideMenuOpen: this.state.sideMenuOpen,
          subMenuOpen: this.state.subMenuOpen,
          subItemText: this.state.subItemText,
          subItemItems: this.state.subItemItems,
          activeLink: activeLink,
          activeTouchpoint: activeTouchpoint,
          touchpoints: touchpoints,
          authenticatedAccountLinks: this.state.authenticatedAccountLinks
        }))), h(Alerts, null))));
      }
    }, {
      key: "updateParentMargin",
      value: function updateParentMargin() {
        if (!this.rootRenderElementRef || !this.rootRenderElementRef.current) {
          return null;
        }

        var parent = this.rootRenderElementRef.current.parentNode;

        if (!RiotBar.data.renderInto) {
          parent = document.body;
        } else if (document.body.style.marginTop) {
          // reset body back to initial in case a marginTop was supplied from a quick set and reset of createRef
          document.body.style.marginTop = "initial";
        }

        var rootRenderElHeight = 0;
        var childNodes = this.rootRenderElementRef.current.children;

        for (var c = 0; c < childNodes.length; c++) {
          if (childNodes[c].id !== "riotbar-application-switcher") {
            rootRenderElHeight += childNodes[c].getBoundingClientRect().height;
          }
        } // // Subtract the app switcher if present
        // if (document.getElementById('riotbar-application-switcher')) {
        //   rootRenderElHeight -= document.getElementById('riotbar-application-switcher').getBoundingClientRect().height;
        // }


        parent.style.marginTop = rootRenderElHeight + "px";
      }
    }]);

    return Root;
  }(d);

  common.appendStyles(styles$2);
  var renderRiotbar = (function (renderRegions) {
    return new Promise(function (resolve) {
      var __root = false;

      if (RiotBar.data.renderInto) {
        if (typeof RiotBar.data.renderInto === 'string' && RiotBar.data.renderInto.trim() !== '') {
          checkForRootElement();
        } else if (_typeof(Riotbar.data.renderInto) === 'object') {
          __root = common.determineRenderIntoElement(RiotBar.data.renderInto);
          finishRender();
        } else {
          __root = document.createElement('div');
          __root.className = 'riotbar-root';
          document.body.appendChild(__root);
          finishRender();
        }
      } else {
        __root = document.createElement('div');
        __root.className = 'riotbar-root';
        document.body.appendChild(__root);
        finishRender();
      } // @TODO do we want a max number of times checking here?


      function checkForRootElement() {
        __root = document.getElementById(RiotBar.data.renderInto);

        if (!__root) {
          setTimeout(checkForRootElement, 50);
        } else {
          finishRender();
        }
      } // when the element is discovered, call this inner func


      function finishRender() {
        var icons = [];
        rootConfigData.init();
        common.appendStyles(manager.getStyles()); // Expose this element to the window.RiotBar for
        // external extensions to make use of this (such as alerts and cookie)

        window.RiotBar.renderRoot = __root;
        icons.unshift({
          name: 'lang-switch'
        });
        E(h(Root, {
          icons: icons
        }), __root);
        var baseElement = document.getElementById('riotbar-bar');
        renderRegions.base = baseElement;
        renderRegions.barContent = document.getElementById('riotbar-bar-content');
        renderRegions.rightBarContent = document.getElementById('riotbar-right-content'); //renderRegions.subBarContent = document.getElementById('riotbar-subbar-content');
        //  add riotbar body class

        document.getElementsByTagName('body')[0].className += ' riotbar-present';
        resolve();
      }
    });
  });

  var plugin = createCommonjsModule(function (module) {
    'use strict';
    /**
     * Riotbar configuration handling and utility functions.
     */

    var activeElements = [];
    var util = module.exports = {
      /**
       * Gets default config values from all plugins.
       */
      gatherDefaults: function gatherDefaults(defaults, plugins) {
        common.map(plugins, function (plugin) {
          defaults[plugin] = plugins[plugin].defaults;
        });
        return defaults;
      },

      /**
       * Fetches styles from a plugin, if present, and adds them to the array.
       *
       * @param {Array} styles An array of Strings, with styles from all plugins.
       * @param {Plugin} plugin A plugin which needs to be checked for styles.
       */
      getPluginStyles: function getPluginStyles(styles, plugin) {
        if (plugin.styles) {
          styles.push(plugin.styles);
        }
      },

      /**
       * Allows a plugin to extend the core.
       *
       * @param {String} name   The name of the plugin, will be used as the key.
       * @param {Plugin} plugin A plugin object.
       */
      addPluginExtensions: function addPluginExtensions(bar, name, plugin) {
        if (plugin.extensions) {
          bar[name] = plugin.extensions;
        }
      },

      /**
       * Toggle the 'active' class of the target element. util.removeActive
       * will be called if there is a click outside the target element.
       *
       * @param {Object}  trigger   Object that triggered the click event
       * @param {Object}  target    Object who's active class will be toggled
       * @todo  Don't add an active element if it is already in the activeElements
       *        array. This can be done by looping over the array, but
       *        this overly complicated the function.
       */
      toggleActive: function toggleActive(trigger, target) {
        var activeElement = {
          trigger: trigger,
          target: target
        };
        activeElements.push(activeElement);
        common.toggleClass(target, 'active');
      },

      /**
       * Unwatch target elements if there was a click outside that
       * element.
       *
       * @param {Object}  event   Click event object
       */
      removeActive: function removeElement(event) {
        // Older IE uses window.event.srcElement.
        var clicked = event.target || window.event.srcElement;

        for (var i = 0; i < activeElements.length; i++) {
          var activeElement = activeElements[i];
          var trigger = activeElement.trigger;
          var target = activeElement.target;

          if (!target.contains(clicked) && !trigger.contains(clicked)) {
            target.className = target.className.replace('active', '');
            activeElements.splice(i, 1);
            i--;
          }
        }
      }
    };
    common.addEvent(document.body, 'click', util.removeActive);
  });
  var plugin_1 = plugin.gatherDefaults;
  var plugin_2 = plugin.getPluginStyles;
  var plugin_3 = plugin.addPluginExtensions;
  var plugin_4 = plugin.toggleActive;
  var plugin_5 = plugin.removeActive;

  var i18n_1 = createCommonjsModule(function (module) {
    'use strict';
    /**
     * Common internationalization functions and static data. Plugins may use this
     * data to map regions to languages, but should not assume that RiotBar has been
     * configured to use all supported regions.
     */

    var internalRegions;

    try {
      internalRegions = JSON.parse('{internal_regions}');
    } catch (error) {
      internalRegions = {};
    }

    var localesByRegion = {
      'na': ['en_US'],
      'euw': ['en_GB', 'de_DE', 'es_ES', 'fr_FR', 'it_IT' //,
      // TODO: MENA LAUNCH
      //'ar_AE'
      ],
      'eune': ['en_PL', 'pl_PL', 'el_GR', 'ro_RO', 'hu_HU', 'cs_CZ'],
      'lan': ['es_MX'],
      'las': ['es_AR'],
      'br': ['pt_BR'],
      'jp': ['ja_JP'],
      'ru': ['ru_RU'],
      'tr': ['tr_TR'],
      'oce': ['en_AU'],
      'kr': ['ko_KR'],
      'pbe': ['en_BE'],
      'garena': ['en_PH', 'en_SGMY', 'ms_MY', 'id_ID', 'th_TH', 'vn_VN', 'zh_TW']
    };
    var defaultSupportedLocales = [];
    var regions = Object.keys(localesByRegion);
    var excludedRegions = ['garena', 'pbe'];

    for (var r = 0; r < regions.length; r++) {
      if (!excludedRegions.includes(regions[r])) {
        defaultSupportedLocales.push.apply(defaultSupportedLocales, _toConsumableArray(localesByRegion[regions[r]]));
      }
    }

    var regionNames = {
      'na': 'Северная Америка',
      'euw': 'Западная Европа',
      'eune': 'Сев. и Вост. Европа',
      'lan': 'Лат. Америка - Север',
      'las': 'Лат. Америка - Юг',
      'br': 'Бразилия',
      'tr': 'Турция',
      'ru': 'Россия',
      'oce': 'Океания',
      'kr': 'Корейская Республика',
      'jp': 'Япония',
      'napreprod': 'NA PreProd',
      'pbe': 'PBE',
      'garena': ''
    };
    var languageNames = {
      'ar': 'اللغة العربية',
      'en': 'English',
      'de': 'Deutsch',
      'es': 'Español',
      'fr': 'Français',
      'it': 'Italiano',
      'pl': 'Polski',
      'ru': 'Русский',
      'pt': 'Português',
      'el': 'Ελληνικά',
      'ro': 'Română',
      'tr': 'Türkçe',
      'hu': 'Magyar',
      'cs': 'Čeština',
      'ko': '한국어',
      'ja': '日本語',
      'zh': '繁體中文',
      //@TODO Get verification of language name
      'vn': 'Tiếng Việt',
      //@TODO Get verification of language name
      'th': 'คนไทย',
      //@TODO Get verification of language name
      'id': 'Indonesian',
      //@TODO Get verification of language name
      'ms': 'Malaysian' //@TODO Get verification of language name

    };
    var i18n = module.exports = {
      includeInternalRegions: function includeInternal() {
        // Add all of the internal regions
        localesByRegion = {};
        var keys = Object.keys(internalRegions);

        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];

          if (localesByRegion[key] === undefined) {
            localesByRegion[key] = internalRegions[key].locales;
          }

          if (regionNames[key] === undefined) {
            regionNames[key] = internalRegions[key].name;
          }
        }
      },
      getAllLanguagesWithRegions: function getAllLanguagesWithRegions(landingUrlPattern) {
        /**
         * return
         * [
         *  {
         *   locale: 'en_US',
         *   name: 'English (US)',
         *   region: 'na',
         *   landingUrl: ''
         *  },
         *  {
         *   locale: 'tr_TR',
         *   name: 'Türkçe (TR)',
         *   region: 'tr',
         *   landingUrl: ''
         *  },
         *  etc...
         * ]
         *
         * @param landingUrlPattern {String} optional
         */
        if (landingUrlPattern === undefined) {
          landingUrlPattern = i18n.getDefaultLandingURLPattern();
        }

        var allLocales = [];
        var regions = Object.keys(localesByRegion);

        for (var x = 0; x < regions.length; x++) {
          var region = regions[x];
          var locales = localesByRegion[region];

          for (var y = 0; y < locales.length; y++) {
            var locale = locales[y];
            var localeLang = locale.substr(0, 2).toLowerCase();
            var languageName = languageNames[localeLang] || languageNames['en']; // Replaced url tokens

            var landingUrl = landingUrlPattern.replace('{{lang}}', localeLang).replace('{{region}}', region).replace('{{locale}}', locale).replace("{{locale-hyphen}}", locale.toLowerCase().replace("_", "-"));
            allLocales.push({
              region: region,
              locale: locale,
              name: languageName + ' (' + region.toUpperCase() + ')',
              landingUrl: landingUrl
            });
          }
        }

        return allLocales;
      },
      getLocaleMappings: function getLanguages() {
        return localesByRegion;
      },
      getRegionNames: function getRegionNames() {
        return regionNames;
      },
      getLanguageNames: function getLanguageNames() {
        return languageNames;
      },
      isRegion: function isRegion(region) {
        return regionNames.hasOwnProperty(region);
      },

      /**
       * Returns either the two-letter code for the
       * @param  {string} region web region tag
       * @param  {string} locale POSIX locale code
       * @return {string}        Two-letter language code supported by the region.
       */
      getRegionLang: function getRegionLang(region, locale) {
        var lang;

        if (i18n.supportsLanguage(region, locale)) {
          lang = locale; // TODO: this has one edge case: if player is on a page in a language
          // he can't read, AND his region supports multiple languages, we don't
          // know what language the player logged in with. Can't trust PVPNET_LANG.
          // RSO will fix this by including login locale in it's tokens.
        } else {
          lang = localesByRegion[region][0];
        }

        return lang.substr(0, 2);
      },

      /**
       * Which a region supports the language designated by a locale. This allows
       * us to link to a page in another region in the currently displayed language
       * if it's supported.
       *
       * @param  {string} region web region tag
       * @param  {string} locale POSIX locale code
       * @return {boolean}       Whether the language is supported.
       */
      supportsLanguage: function supportsLanguage(region, locale) {
        // assume non-production regions support all locales
        if (!i18n.isRegion(region) || !localesByRegion.hasOwnProperty(region)) {
          return true;
        }

        var regionConfig = localesByRegion[region];
        var lang = locale.substr(0, 2);

        for (var i = 0, l = regionConfig.length; i < l; i++) {
          if (regionConfig[i].indexOf(lang) === 0) {
            return true;
          }
        }

        return false;
      },

      /**
       * Given a language code, get the exact locale that region supports
       * @param  {string} region Region id
       * @param  {string} lang   Two-letter language code
       * @return {string}        POSIX locale code
       */
      localeForRegion: function localeForRegion(region, lang) {
        if (!i18n.isRegion(region)) {
          return 'ru_RU';
        }

        var regionLocales = localesByRegion[region];

        if (!regionLocales) {
          return 'ru_RU';
        }

        var l = regionLocales.length;
        var locale = regionLocales[0];
        var possibleLocale;

        if (l > 1) {
          for (var i = 0; i < l; i += 1) {
            possibleLocale = regionLocales[i];

            if (possibleLocale.substr(0, 2) === lang) {
              locale = possibleLocale;
              break;
            }
          }
        }

        return locale;
      },
      getDefaultLocales: function getDefaultLocales() {
        return common.deepOverride(i18n.getLocaleMappings(), {
          'kr': [{
            'locale': 'ko_KR',
            'lang': 'ko',
            'languageName': '한국어',
            'landingUrl': 'https://www.leagueoflegends.co.kr/'
          }],
          'pbe': undefined
        }, 1);
      },

      /**
       * Returns a flat array of locale code strings.
       * Note that .map is not used here for browser compatibility
       */
      getDefaultLocaleCodes: function getDefaultLocaleCodes() {
        return defaultSupportedLocales;
      },
      getDefaultLandingURLPattern: function getDefaultLandingURLPattern() {
        return 'http://{{region}}.leagueoflegends.com/{{lang}}';
      }
    };
  });
  var i18n_2 = i18n_1.includeInternalRegions;
  var i18n_3 = i18n_1.getAllLanguagesWithRegions;
  var i18n_4 = i18n_1.getLocaleMappings;
  var i18n_5 = i18n_1.getRegionNames;
  var i18n_6 = i18n_1.getLanguageNames;
  var i18n_7 = i18n_1.isRegion;
  var i18n_8 = i18n_1.getRegionLang;
  var i18n_9 = i18n_1.supportsLanguage;
  var i18n_10 = i18n_1.localeForRegion;
  var i18n_11 = i18n_1.getDefaultLocales;
  var i18n_12 = i18n_1.getDefaultLocaleCodes;
  var i18n_13 = i18n_1.getDefaultLandingURLPattern;

  var cookiePolicyV2 = createCommonjsModule(function (module) {
    'use strict';
    /**
     * RiotBar Cookie Manager FUnctionality
     *
     */

    module.exports = {
      initialized: false,
      config: {},

      /**
       * @type {Object}
       *   The default settings for this plugin. Any settings that could be
       *   overriden by the users need to be here.
       */
      defaults: {
        enabled: false,
        settings: null
      },

      /**
       * Initialization function to be called by the bar.
       *
       * @param  {Object} config          Configuration for this plugin.
       */
      init: function init(config) {
        var filePrefix = common.determineDeferredFilePrefix();
        common.ensureScript('RiotBar.plugins.cookiePolicyV2Deferred', {
          url: 'https://lolstatic-a.akamaihd.net/riotbar/live/1.1.1/' + filePrefix + 'ru_RU-defer-cookie-policy-v2.js'
        }).then(function () {
          // Ensure we never display the cookie bar twice
          // (this can happen when RiotBar.show() is called more than once)
          if (module.exports.initialized) {
            return;
          }

          module.exports.initialized = true;
          var plugin = window.RiotBar.plugins.cookiePolicyV2Deferred;
          plugin.init(RiotBar.data.cookiePolicyV2);
        });
      }
    };
  });
  var cookiePolicyV2_1 = cookiePolicyV2.initialized;
  var cookiePolicyV2_2 = cookiePolicyV2.config;
  var cookiePolicyV2_3 = cookiePolicyV2.defaults;
  var cookiePolicyV2_4 = cookiePolicyV2.init;

  var styles$4 = "/* Breakpoints */\n/* Common Mixins */\n#riotbar-navbar {\n  display: table;\n  font-size: 0;\n  height: 80px;\n  margin-right: 0;\n  max-width: 100%;\n  opacity: 1;\n  text-align: center;\n}\n@media (max-width: 1024px) {\n  #riotbar-navbar {\n    display: inline-block;\n  }\n}\n#riotbar-navbar.fade-in {\n  opacity: 0;\n}\n#riotbar-navbar.fade-in.ready {\n  opacity: 1;\n  transition: opacity 0.3s cubic-bezier(0.06, 0.81, 0, 0.98) 0s;\n}\n#riotbar-navbar .link-out, #riotbar-navbar .link-out-white {\n  margin-left: 4px;\n}\n#riotbar-navbar .riotbar-explore-label {\n  display: none;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container {\n  display: inline-block;\n  position: relative;\n  height: 80px;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container:lang(ar) {\n  direction: rtl;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-subnav-menu {\n  visibility: hidden;\n  position: absolute;\n  left: 0;\n  top: 80px;\n  background-color: #111111;\n  text-align: left;\n  font-size: 1rem;\n  min-width: 200px;\n  opacity: 0;\n  transition: opacity 0.5s cubic-bezier(0.06, 0.81, 0, 0.98) 0s, visibility 0s;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-subnav-menu .riotbar-navbar-sub-link {\n  padding: 12px 32px;\n  width: 100%;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-subnav-menu li {\n  color: #1d1d1d;\n  border-bottom: solid 2px #111111;\n  list-style-type: none;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-subnav-menu li:hover {\n  cursor: pointer;\n  background-color: #333333;\n  color: #FFFFFF;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-subnav-menu li.riotbar-navbar-subnav-subsubmenu {\n  padding-left: 45px;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-subnav-menu li.no-linkage {\n  cursor: default;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-subnav-menu li.no-linkage:hover {\n  background-color: #111111;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container .riotbar-navbar-external-link {\n  width: 20px;\n  height: 20px;\n  vertical-align: middle;\n  margin-bottom: 5px;\n  display: inline-block;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container svg.arrow-down {\n  display: inline-block;\n  margin-bottom: 1px;\n  margin-left: 5px;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container svg.hover {\n  display: none;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container:hover svg.non-hover, #riotbar-navbar .riotbar-navbar-navitem-container.nav-dropdown-active svg.non-hover {\n  display: none;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container:hover svg.hover, #riotbar-navbar .riotbar-navbar-navitem-container.nav-dropdown-active svg.hover {\n  display: inline-block;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container.nav-dropdown-active .riotbar-navbar-subnav-menu {\n  transition: opacity 0.5s cubic-bezier(0.06, 0.81, 0, 0.98) 0s, visibility 0s;\n  opacity: 1;\n  visibility: visible;\n}\n#riotbar-navbar .riotbar-navbar-navitem-container.nav-dropdown-overflow.hide {\n  display: none;\n}\n#riotbar-navbar a {\n  border-bottom: 2px solid transparent;\n  color: #F9F9F9;\n  display: inline-block;\n  font-size: 11px;\n  font-weight: 800;\n  line-height: 76px;\n  margin: 0 0.85em;\n  overflow: hidden;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: 2px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  transition: color 1s cubic-bezier(0.06, 0.81, 0, 0.98), border-color 0.5s cubic-bezier(0.06, 0.81, 0, 0.98);\n}\n#riotbar-navbar a:lang(ar) {\n  letter-spacing: 0;\n}\n#riotbar-navbar a.riotbar-navbar-title {\n  font-size: 18px;\n  color: #F9F9F9;\n  line-height: 80px;\n  margin-left: 0;\n  padding-left: 0;\n  padding-top: 0;\n  border: none;\n}\n#riotbar-navbar a.riotbar-navbar-title.mobile {\n  display: none;\n}\n@media (max-width: 1024px) {\n  #riotbar-navbar a.riotbar-navbar-title {\n    display: none;\n  }\n  #riotbar-navbar a.riotbar-navbar-title.mobile {\n    display: inline-block;\n    margin-left: 20px;\n    margin-right: 0;\n    padding-right: 0;\n    margin-top: -6px;\n    vertical-align: middle;\n  }\n}\n#riotbar-navbar a.riotbar-active-link {\n  color: #F9F9F9;\n}\n#riotbar-navbar.riotbar-fade-left {\n  margin-right: 10%;\n  opacity: 0;\n}\n#riotbar-navbar.riotbar-fade-right {\n  margin-right: -10%;\n  opacity: 0;\n}\n@media (max-width: 1115px) {\n  #riotbar-navbar a {\n    margin: 0 0.6375em;\n  }\n  #riotbar-navbar .riotbar-navbar-separator.riotbar-title-separator {\n    margin-right: 0.6375em;\n  }\n}\n@media (max-width: 1024px) {\n  #riotbar-navbar {\n    position: static;\n  }\n  #riotbar-navbar .riotbar-navbar-separator, #riotbar-navbar .riotbar-navbar-link, #riotbar-navbar .riotbar-navbar-navitem-container {\n    display: none;\n  }\n  #riotbar-navbar .riotbar-explore-label {\n    display: block;\n    line-height: 80px;\n    height: 80px;\n  }\n  #riotbar-navbar .riotbar-explore-label svg {\n    display: block;\n    margin: 24px auto 0;\n    max-height: 50px;\n  }\n  #riotbar-navbar .riotbar-explore-label img {\n    max-height: 50px;\n    vertical-align: middle;\n  }\n}\n#riotbar-navbar .riotbar-navbar-sub-link {\n  border: none;\n  line-height: 1.5em;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n}\n\n#riotbar-navmenu {\n  color: #F9F9F9;\n  font-size: 14px;\n  height: 50px;\n}\n#riotbar-navmenu .riotbar-explore {\n  cursor: pointer;\n  display: inline-block;\n  font-size: 0;\n  font-weight: bold;\n  height: 50px;\n  line-height: 1;\n  min-width: 36px;\n}\n#riotbar-navmenu .riotbar-logo {\n  position: relative;\n  display: inline-block;\n  height: 50px;\n  margin-left: 32px;\n  width: 75px;\n}\n#riotbar-navmenu .riotbar-logo .riot-bar-fist-logo {\n  width: 160px;\n  height: 160px;\n  background: url(\"https://lolstatic-a.akamaihd.net/riotbar/live/1.1.1/images/navigation/fistsprite.png\") 0 -2400px no-repeat;\n  transition: background-position 0.25s steps(15, end);\n  transform: scale(0.33);\n  position: absolute;\n  top: -55px;\n  left: -55px;\n}\n#riotbar-navmenu .riotbar-logo .riot-bar-fist-logo:hover, .riotbar-application-switcher-open #riotbar-navmenu .riotbar-logo .riot-bar-fist-logo {\n  background-position: 0 0;\n}\n#riotbar-navmenu .riotbar-logo svg {\n  position: absolute;\n  top: 3px;\n  left: 51px;\n}\n#riotbar-navmenu .riotbar-logo svg.hover {\n  display: none;\n}\n#riotbar-navmenu .riotbar-logo svg.drop {\n  margin-top: 22px !important;\n  margin-bottom: 0;\n  margin-left: 5px;\n}\n#riotbar-navmenu .riotbar-logo:hover svg.hover {\n  display: inline-block;\n}\n#riotbar-navmenu .riotbar-logo:hover svg.non-hover {\n  display: none;\n}\n#riotbar-navmenu .riotbar-navbar-separator.main-logo-separator {\n  margin-left: 0;\n  margin-right: 32px;\n  margin-top: 10px;\n}\n@media (max-width: 1024px) {\n  #riotbar-navmenu .riotbar-navbar-separator.main-logo-separator {\n    display: none;\n  }\n}\n#riotbar-navmenu .second-logo {\n  display: inline-block;\n  height: 50px;\n}\n#riotbar-navmenu .second-logo svg {\n  margin-top: 9px;\n  display: block;\n}\n@media (max-width: 1024px) {\n  .riotbar-mobile-responsive #riotbar-navmenu {\n    content: \"sidebar\";\n  }\n  .riotbar-mobile-responsive #riotbar-navmenu .second-logo {\n    display: none;\n  }\n}\n\n#riotbar-bar {\n  border-bottom: 2px solid rgba(51, 51, 51, 0.25);\n  display: -ms-flexbox;\n  display: flex;\n}\n#riotbar-bar .riotbar-navmenu-category {\n  overflow: visible;\n  position: relative;\n  border-top: 0;\n  margin-top: 0;\n  padding-top: 0;\n}\n#riotbar-bar .riotbar-navmenu-category .black-side-menu-option {\n  background-color: #111111 !important;\n}\n#riotbar-bar .riotbar-navmenu-category .riotbar-category-name {\n  color: #f1e6d0;\n  font-size: 14px;\n  margin-bottom: 9px;\n  text-transform: uppercase;\n}\n#riotbar-bar .riotbar-navmenu-category:before, #riotbar-bar .riotbar-navmenu-category:after {\n  content: \" \";\n  display: table;\n}\n#riotbar-bar .riotbar-navmenu-category:after {\n  clear: both;\n}";

  var styles$5 = /*#__PURE__*/Object.freeze({
    'default': styles$4
  });

  var require$$0 = getCjsExportFromNamespace(styles$5);

  var navigation$1 = createCommonjsModule(function (module) {
    'use strict';
    /**
     * RiotBar Navigation.
     *
     * This plugin will be initialized first.
     */

    var Navigation = module.exports = {
      activeLink: null,
      config: {},
      linksById: {},
      styles: require$$0,

      /**
       * @type {Object}
       *   The default settings for this plugin. Any settings that could be
       *   overriden by the users need to be here.
       */
      defaults: {
        enabled: true,
        title: null,
        links: null,
        activeLink: null,
        activeTouchpoint: null,
        homepageUrl: null
      },
      init: function init(config, renderRegions) {
        Navigation.renderRegions = renderRegions;
        var navConfig = {};

        if (window.riotBarConfig && window.riotBarConfig.touchpoints) {
          navConfig.activeTouchpoint = window.riotBarConfig.touchpoints.activeTouchpoint;
        }

        Navigation.config = navConfig;
      }
    };
  });
  var navigation_1 = navigation$1.activeLink;
  var navigation_2 = navigation$1.config;
  var navigation_3 = navigation$1.linksById;
  var navigation_4 = navigation$1.styles;
  var navigation_5 = navigation$1.defaults;
  var navigation_6 = navigation$1.init;

  'use strict';
  /**
   * @file Account related utilities.
   *
   * This object will be ultimately accessible from RiotBar.account. It represents
   * the public account API exposed by RiotBar.
   *
   */

  /**
   * Encode the RSO login prefix based upon the auth mode (prod or stage)
   */


  function encodeRsoLoginPrefix() {
    var authMode = RiotBar.data.account.authMode || 'prod';
    return authMode === 'stage' ? 'stage.login.i' : 'login.';
  }
  /**
   * Local function that parses the `id_hint` cookie (key/value pair) for a value by a given key
   * @param {String} idHint the string value of the `id_hint` cookie
   * @param {String} piece
   */


  function parseIDHint(idHint, piece) {
    var pieces = idHint.split("&");
    var val = false;

    for (var x = 0; x < pieces.length; x++) {
      if (pieces[x].indexOf(piece) === 0) {
        // the equivalent of startsWith
        val = pieces[x].substr(piece.length + 1); // To include the = sign
      }
    }

    return val;
  }
  /**
   * Public accounts API provided by RiotBar.
   *
   * @param  {Object} config The configuration object.
   * @return {Object}        The public account API.
   */


  var extensions = function AccountExtensionsFactory(config, data) {
    var region = 'ru';
    var locale = 'ru_RU';
    var defaultDomain = 'leagueoflegends.com';
    var currentDomain = RiotBar.data.account.currentDomain || null;

    if (!currentDomain) {
      currentDomain = common.getCurrentDomain(defaultDomain);
    }

    var regionNames = i18n_1.getRegionNames();
    /**
     * Constructs an array of region ids with the current region
     * at the front, to cover an edge case where a player has legacy
     * tokens in two regions.
     *
     * @type {Array}
     */

    var supportedRegions = [region];
    common.map(regionNames, function getRegionId(key) {
      if (key !== region) {
        supportedRegions.push(key);
      }
    });
    var cookies = {
      token: 'PVPNET_TOKEN_',
      // DEPRECATED
      user: 'PVPNET_ACCT_',
      // DEPRECATED
      lang: 'PVPNET_LANG',
      // DEPRECATED
      region: 'PVPNET_REGION',
      // DEPRECATED
      userid: 'PVPNET_ID_',
      // DEPRECATED
      idHint: 'id_hint'
    };
    /**
     * @typedef {Object} AuthState
     * @property {string} name 
     * @property {string} tag
     * @property {string} region
     * @property {boolean} isAuthenticated
     */
    // This local object represents the state of authentication.
    // It is initialized through cookie parsing of the "id_hint" cookie in the initializeAuthState method below
    // but can be set in an exposed method call.

    /**
     * @var {AuthState} defaultAuthState
     */

    var defaultAuthState = {
      name: false,
      // @todo default this to null rather than a boolean
      tag: false,
      // @todo default this to null rather than a boolean
      region: 'ru',
      isAuthenticated: false
    };
    var authState = Object.assign({}, defaultAuthState);

    function getCookie(cookie, regionId) {
      return cookie + regionId.toUpperCase();
    }

    var AccountExtensions = {
      /**
       * [cookies description]
       * @type {Object}
       */
      cookies: {
        token: getCookie(cookies.token, region),
        user: getCookie(cookies.user, region),
        lang: cookies.lang,
        region: cookies.region,
        userid: getCookie(cookies.userid, region),
        idHint: cookies.idHint
      },

      /**
       * Displays the login prompt.
       *
       * It redirects the user to the login page.
       * @param {string} [returnUrl] Url to return to once logged in
       */
      login: function login(returnUrl) {
        var thisUrl = returnUrl || config.returnUrl || common.window.location.href;
        var encodedUrl = encodeURIComponent(thisUrl);
        common.window.location = data.urls.login.replace('{{login_prefix}}', encodeRsoLoginPrefix()).replace('{{current_domain}}', currentDomain).replace('{{then}}', encodedUrl);
      },

      /**
       * Logs out the user.
       *
       * Redirects users to a logout page that invalidates the session.
       */
      logout: function logout() {
        var thisUrl = encodeURIComponent(common.window.location.href);
        var account = AccountExtensions.getGlobalAccount();
        common.window.location = data.urls.logout.replace('{{summonerRegion}}', account.region).replace('{{login_prefix}}', encodeRsoLoginPrefix()).replace('{{current_domain}}', currentDomain).replace('{{then}}', thisUrl);
      },

      /**
       * Sends the user to the recover password page.
       */
      recoverPassword: function recoverPassword() {
        common.window.location = data.urls.passwordRecovery;
      },

      /**
       * Sends the user to the recover username page.
       */
      recoverUsername: function recoverUsername() {
        common.window.location = data.urls.usernameRecovery;
      },

      /**
       * Sends the user to the management page.
       */
      management: function management() {
        common.window.location = data.urls.management;
      },

      /**
       * Returns the name of the current region.
       *
       * @return {String} The current region name.
       */
      getRegion: function getRegion() {
        return region;
      },

      /**
       * Returns the summoner, region and best language for an account, regardless
       * of which region the player belongs to.
       *
       * @return {Object} An Account object with summoner, region and lang members
       */
      getGlobalAccount: function getGlobalAccount() {
        var globalRegion, globalLang, globalLocale;
        globalRegion = region;
        globalLang = AccountExtensions.getLang();
        var idHint = common.getCookie(cookies.idHint);

        if (idHint) {
          var cookieRegion = parseIDHint(idHint, 'tag');

          if (cookieRegion && i18n_1.isRegion(cookieRegion)) {
            globalRegion = cookieRegion;
          }

          var cookieLang = parseIDHint(idHint, 'lang');

          if (cookieLang && i18n_1.getLanguageNames().hasOwnProperty(cookieLang)) {
            globalLang = cookieLang;
          }
        }

        globalLocale = i18n_1.localeForRegion(globalRegion, globalLang);
        return {
          summoner: authState.name,
          gameTag: authState.name,
          region: authState.region,
          lang: globalLang,
          locale: globalLocale
        };
      },

      /**
       * Returns the human-readable name of a region.
       *
       * @param  {String} regionId The regionTag of the region, defaults to the
       *   lolbar region.
       * @return {String}          The human-readable name of the region,
       *   translated to lolbar's language.
       */
      getRegionName: function getRegionName(regionId) {
        regionId = regionId || region;
        return regionNames.hasOwnProperty(regionId) ? regionNames[regionId] : region;
      },

      /**
       * Returns the current locale.
       * @return {String} The current locale.
       */
      getLocale: function getLocale() {
        return 'ru_RU';
      },

      /**
       * Returns the current language.
       * @return {String} The current language.
       */
      getLang: function getLang() {
        return 'ru';
      },

      /**
       * Returns a summoner name if the user is logged in.
       *
       * @return {String | false} Summoner name or false if not logged in.
       */
      getSummonerName: function getSummonerName() {
        return authState.name;
      },

      /**
       * Returns account URLs
       */
      getURL: function getURL(id) {
        return data.urls.hasOwnProperty(id) ? data.urls[id] : '#';
      },
      setURL: function setURL(id, value) {
        data.urls[id] = value;
      },

      /**
       * Whether or not the player's account is supported by the page, based
       * on the logged-in region (or lack thereof).
       *
       * @return {Boolean} Whether the region is supported.
       */
      supportsPlayerRegion: function supportsPlayerRegion() {
        var supportedRegions, globalAccount, globalRegion, i, l;
        supportedRegions = config.supportedRegions;
        globalAccount = AccountExtensions.getGlobalAccount();
        globalRegion = globalAccount.region; // if supportedRegions is an array, the page supports some regions
        // if the player is logged in, they may not be supported.

        if (common.isArray(supportedRegions) && globalAccount.summoner) {
          // loop through supported regions to see if any match;
          for (i = 0, l = supportedRegions.length; i < l; i++) {
            if (supportedRegions[i] === globalRegion) {
              return true;
            }
          } // if we don't find a supported region


          return false;
        }

        return true;
      },

      /**
       * Returns a pvpnet id if the user is logged in.
       *
       * @deprecated Do not use PVPNET ID anymore
       * @return {String | false} Pvpnet or false if not logged in.
       */
      getPvpnetId: function getPvpnetId() {
        var gas = common.getCookie(AccountExtensions.cookies.token);
        var user = common.getCookie(AccountExtensions.cookies.userid);
        return gas && user;
      },

      /**
       * Validates the input string as an an email address.
       * @param {String} sEmail The string to validate
       * @return {Boolean} Whether or not the string is a valid email address
       */
      isEmail: function isEmail(sEmail) {
        // intentionally lax reg ex
        // essentially {something}@{something}.{something}
        var re = /^([^@\s\t]+@[^@\s\t\.]+(\.[^@\s\t\.]*)?\.[^@\s\t\.]+)$/;
        return re.test(sEmail);
      },
      getIDHint: function getIDHint() {
        var idHint = common.getCookie(cookies.idHint);

        if (!idHint) {
          return false;
        }

        return idHint;
      },

      /**
       * If the player is not authenticated, returns false.
       * If the authenticated user has a region, returns false
       * If the authenticated user does NOT have a region, returns true.
       * @return {Boolean}
       */
      isRegionlessAccount: function isRegionlessAccount() {
        var idHint = AccountExtensions.getIDHint();

        if (!idHint) {
          return false;
        }

        var authRegion = parseIDHint(idHint, "region");
        return !authRegion;
      },

      /**
       * Initialize the authentication state for the account by parsing the `id_hint` cookie
       * @returns {AuthState}
       */
      initializeAuthState: function initializeAuthState() {
        // reset to default
        authState = Object.assign({}, defaultAuthState); // grab the id hint cookie, if it's not present, we are not authenticated

        var idHintCookie = common.getCookie(cookies.idHint);

        if (!idHintCookie) {
          // return with the state reset
          return authState;
        }

        authState.isAuthenticated = true; // get summoner name out of the cookie
        // parse the idHint to pull out the game_tag

        var playerName = parseIDHint(idHintCookie, 'game_name'); // Replace + with space, sanitize invalid characters

        if (playerName) {
          playerName = decodeURIComponent(playerName.replace(/\+/g, ' ').replace(/[<">]/g, ''));
          authState.name = playerName;
        } // look for the `tag` portion of the cookie value for the region
        // There is a `region` portion too, but that value format isn't supported (NA1 vs na)


        var cookieRegion = parseIDHint(idHintCookie, 'tag');

        if (cookieRegion && i18n_1.isRegion(cookieRegion)) {
          authState.region = cookieRegion;
        }

        var tagline = parseIDHint(idHintCookie, 'tag_line');

        if (tagline) {
          authState.tag = tagline;
        }

        return authState;
      },

      /**
       * Returns the current auth state
       * @returns {AuthState}
       */
      getAuthState: function getAuthState() {
        return authState;
      },

      /**
       * This method is invoked by the exposed "setAuthState" method which is set on the plugin.
       * This bounce exists so allow a gateway for the potentially deferred plugin initialization to the
       * exposed extensions methods.
       * @param {AuthState} newAuthState
       * @returns {AuthState}
       */
      __setAuthState: function __setAuthState(newAuthState) {
        if (!newAuthState || _typeof(newAuthState) !== 'object') {
          throw new Error('Argument passed must be an object.');
        } // validate object - the getter always returns the proper keys


        var validProps = Object.keys(authState);
        var requiredProps = ['isAuthenticated'];
        var newStateKeys = Object.keys(newAuthState); // Make sure each key passed is a valid property to set

        for (var i = 0; i < newStateKeys.length; i++) {
          if (!validProps.includes(newStateKeys[i])) {
            throw new Error("Invalid property '" + newStateKeys[i] + "'");
          }
        } // Ensure all required properties are passed


        for (var i = 0; i < requiredProps.length; i++) {
          if (!newStateKeys.includes(requiredProps[i])) {
            throw new Error("Missing required property '" + requiredProps[i] + "'");
          }
        }

        authState = Object.assign(defaultAuthState, newAuthState);
        return authState;
      }
    };
    return AccountExtensions;
  };

  'use strict';
  /**
   * Common constants
   */

  var constants = {
    /**
     * invalidSummonerName. It assigns to the summoner name when user has the account but no summoner
     * @type {string}
     */
    invalidSummonerName: 'j:null'
  };
  var constants_1 = constants.invalidSummonerName;

  'use strict';
  /**
   * Accounts Utility Functions.
   */


  var accountUtils = function AccountUtilsFactory(config, account) {
    var domain = common.getCurrentDomain();
    var riotbarLocale = 'ru_RU';
    var riotbarRegion = 'ru';
    var AccountUtils = {
      /**
       * Makes sure the lang and region cookies are set.
       */
      ensurePVPNetCookies: function ensurePVPNetCookies() {
        AccountUtils.ensureLangCookie();
        AccountUtils.ensureRegionCookie();
      },
      ensureLangCookie: function ensureLangCookie() {
        if (!common.getCookie(account.cookies.lang)) {
          var expire = new Date(); // Set expiration to 14 days, as Sandworm does.

          expire.setTime(new Date().getTime() + 1209600000);
          common.setCookie(account.cookies.lang, riotbarLocale, {
            expires: expire.toGMTString(),
            path: '/',
            domain: domain
          });
        }
      },
      ensureRegionCookie: function ensureRegionCookie() {
        if (!common.getCookie(account.cookies.region)) {
          var expire = new Date(); // Set expiration to 14 days, as Sandworm does.

          expire.setTime(new Date().getTime() + 1209600000);
          common.setCookie(account.cookies.region, riotbarRegion, {
            expires: expire.toGMTString(),
            path: '/',
            domain: domain
          });
        }
      },
      accountComponentProps: function accountComponentProps() {
        var props = {
          player: null,
          extensions: account,
          anonymousLinksOverride: false
        };
        var anonymousLinks = window.RiotBar.data.account.anonymousLinks;

        if (window.RiotBar.data && window.RiotBar.data.account && window.RiotBar.data.account.anonymousLinks) {
          anonymousLinks = window.RiotBar.data.account.anonymousLinks;
          props.anonymousLinksOverride = true;
        }

        props.anonymousLinks = anonymousLinks; // check the logged in state of the user

        var globalAccount = account.getGlobalAccount();
        var summonerName = globalAccount.summoner;

        if (summonerName !== false) {
          var globalRegion = globalAccount.region;
          props.player = {
            gameName: summonerName,
            region: account.getRegionName(globalRegion),
            // @TODO Deprecate avatarUrl
            avatarUrl: 'https://avatar.leagueoflegends.com/' + globalRegion + '/' + encodeURIComponent(summonerName) + '.png',
            summonerName: summonerName
          };

          if (summonerName === constants.invalidSummonerName || summonerName === "") {
            props.player.summonerName = 'Моя учетная запись';
          }
        }

        return props;
      }
    };
    return AccountUtils;
  };

  var account = createCommonjsModule(function (module) {
    'use strict';
    /**
     * RiotBar Account functionality.
     *
     * This plugin will add account features to the Riotbar.
     */

    var Account = module.exports = {
      config: {},

      /**
       * @type {Function}
       *   Rendering functions for account functionality.
       */

      /**
       * @type {Function}
       *   include css styles for account funtionality.
       */
      styles: null,

      /**
       * @type {Object}
       *   The default settings for this plugin. Any settings that could be
       *   overriden by the users need to be here.
       * 
       * Note that these defaults aren't used anymore and need to be cleaned out
       */
      defaults: {
        authMode: 'prod',
        enabled: true,
        currentDomain: null,
        utilityLinks: false,
        returnUrl: null,
        boardsProfileLink: false,
        supportedRegions: ['ru'],
        loginVariant: 'text',
        initializeAuthState: true // This property determines if the auth state should be initialized by reading the cookie

      },
      hasLoadedDeferredScript: false,

      /**
       * Initialization function to be called by the bar.
       *
       * Must create a base DOM element for this plugin. May add funcitonality, or
       * asynchronously load elements and add them to the plugin's base element.
       *
       * @param  {Object} config          Configuration for this plugin.
       * @param  {DOMElement} baseElement Base DOM element for the bar.
       */
      preInit: function preInit(config) {
        var data = window.RiotBar.data.account;
        Account.extensions = extensions(config, data);
        this.accountUtils = accountUtils(config, Account.extensions);
        window.RiotBar.__accountUtils = this.accountUtils;
        Account.extensions.setAuthState = this.setAuthState.bind(this);
        plugin.addPluginExtensions(RiotBar, 'account', Account);
      },
      init: function init(config, renderRegions, global) {},

      /**
       * This middle method exists between the plugin loader and extension to load in the deferred scripts
       * if the user is authenticated
       *
       * In the future, it would be good to investigate if we need to keep having deferred account scripts still
       * @param {object} newState
       */
      setAuthState: function setAuthState(newState) {
        Account.extensions.__setAuthState(newState);

        document.dispatchEvent(changeEvent);
      }
    };
  });
  var account_1 = account.config;
  var account_2 = account.styles;
  var account_3 = account.defaults;
  var account_4 = account.hasLoadedDeferredScript;
  var account_5 = account.preInit;
  var account_6 = account.init;
  var account_7 = account.setAuthState;

  var styles$6 = "/* Breakpoints */\n/* Common Mixins */\n#riotbar-service-status {\n  float: left;\n  margin: 24px 10px 10px 0;\n  position: relative;\n}\n#riotbar-service-status:lang(ar) {\n  direction: rtl;\n}\n\n.service-status-indicator {\n  position: relative;\n}\n\n#riotbar-service-status-icon {\n  margin-top: 3px;\n  cursor: pointer;\n  text-indent: -9999px;\n  text-align: left;\n  overflow: hidden;\n  width: 24px;\n  height: 24px;\n}\n#riotbar-service-status-icon:lang(ar) {\n  text-align: right;\n}\n#riotbar-service-status-icon svg.base {\n  display: block;\n}\n#riotbar-service-status-icon svg.hover {\n  display: none;\n}\n#riotbar-service-status-icon:hover svg.base {\n  display: none;\n}\n#riotbar-service-status-icon:hover svg.hover {\n  display: block;\n}\n\n#riotbar-service-status-messages {\n  position: absolute;\n  z-index: 10;\n  display: none;\n  width: 350px;\n  right: -120px;\n  top: 48px;\n  border-radius: 5px;\n  background-color: #111111;\n  border: 1px solid #F9F9F9;\n  box-shadow: inset 0 0 3px 1px rgba(0, 0, 0, 0.3), -1px 1px 10px 0px rgba(0, 0, 0, 0.8);\n  color: #ffffff;\n}\n#riotbar-service-status-messages.active {\n  display: block;\n}\n#riotbar-service-status-messages .status-message {\n  border-bottom: 1px solid #4A5355;\n  border-bottom: 1px solid rgba(47, 96, 109, 0.3);\n  padding: 10px;\n  position: relative;\n}\n#riotbar-service-status-messages .status-message:last-child {\n  border-bottom: none;\n}\n#riotbar-service-status-messages .status-message.closed .message-toggle {\n  transform: rotate(180deg);\n}\n#riotbar-service-status-messages .status-message.closed .message-toggle svg {\n  margin-bottom: 5px;\n}\n#riotbar-service-status-messages .status-message.closed .message-text {\n  display: none;\n}\n#riotbar-service-status-messages .status-message .message-summary {\n  cursor: pointer;\n  position: relative;\n}\n#riotbar-service-status-messages .status-message .message-toggle {\n  position: absolute;\n  top: 2px;\n  left: 0px;\n  height: 16px;\n  width: 16px;\n  border-radius: 10px;\n  border: 1px solid #F9F9F9;\n  border-color: #F9F9F9;\n}\n#riotbar-service-status-messages .status-message .message-toggle svg {\n  margin: 5px 3px;\n}\n#riotbar-service-status-messages .status-message .severity-indicator {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  height: 30px;\n  width: 30px;\n  -webkit-transform: scale(0.75, 0.75);\n  -moz-transform: scale(0.75, 0.75);\n  -ms-transform: scale(0.75, 0.75);\n  -o-transform: scale(0.75, 0.75);\n  transform: scale(0.75, 0.75);\n}\n#riotbar-service-status-messages .status-message .message-title {\n  margin: 0 30px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #E4DFD3;\n  font-weight: bold;\n}\n#riotbar-service-status-messages .status-message a.message-text {\n  display: block;\n  margin: 4px 10px 0 30px;\n  color: #F9F9F9;\n  /* These custom font references are actually loaded in when the `customFonts` plugin is enabled */\n  /* Main font by default */\n  font-family: \"FF Mark W05\";\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.4em;\n}\n#riotbar-service-status-messages .status-message a.message-text:lang(ar) {\n  font-family: \"Cairo\", Tahoma, sans-serif;\n}\n#riotbar-service-status-messages .status-message a.message-text:lang(ru) {\n  font-family: \"Neue Frutiger World W05\", Tahoma, sans-serif;\n}\n#riotbar-service-status-messages .status-message a.message-text:lang(ko), #riotbar-service-status-messages .status-message a.message-text:lang(kr) {\n  font-family: \"RixSGo\", Tahoma, sans-serif;\n}\n\n#riotbar-account-anonymous #riotbar-service-status {\n  top: 9px;\n}";

  var styles$7 = /*#__PURE__*/Object.freeze({
    'default': styles$6
  });

  'use strict';
  /**
   * Service Status Utility Functions.
   */


  var statusUtils = function StatusUtilsFactory(config) {
    var StatusUtils = {
      /**
       * @type {Function}
       *   Rendering function for service status.
       */
      //renderServiceStatus: require('./templates/service-status.ejs'),

      /**
       * @type {Function}
       *   Makes the request for region specific service status.
       */
      fetchStatus: function fetchStatus() {
        var statusUrl = config.statusUrl;

        try {
          var req = common.createCORSRequest('GET', statusUrl);

          if (!req) {
            // CORS not supported
            return;
          }

          req.onload = StatusUtils.handleStatusResponse;
          req.send();
        } catch (e) {
          /*
          This prevents the lolbar from failing on older IE versions which do not
          support cross-domain XMLHttpRequests.
          */
        }
      },

      /**
       * @type {Function}
       *   Handles the response from the XMLHttpRequest for service status data.
       */
      handleStatusResponse: function handleStatusResponse() {
        // this function is a handler for onload,
        // so 'this' is the request
        var req = this;

        try {
          var data = JSON.parse(req.responseText);

          if (data.messages && data.messages.length > 0) {
            data = StatusUtils.processData(data); //  render serviceStatus content.
            // StatusUtils.renderStatus(data);

            window.RiotBar.__internalSetServiceStatusPacket(data);
          }
        } catch (err) {} // error handling for non-json response
        // handle data request failures?

      },

      /**
       * @type {Function}
       *   Prepares service status data for rendering in the template.
       */
      processData: function processData(data) {
        //  summarySeverity will track the maximum message severity.
        data.summarySeverity = 'info';

        if (data.messages && data.messages.length) {
          data.messages.forEach(function (m) {
            StatusUtils.processTranslations(m);
            data.summarySeverity = StatusUtils.moreSevere(data.summarySeverity, m.severity);
          });
        }

        return data;
      },

      /**
       * @type {Function}
       *   Returns the higher severity level.
       */
      moreSevere: function moreSevere(severity1, severity2) {
        var severityLevel = {
          'info': 1,
          'warn': 2,
          'error': 3
        };

        if (severityLevel[severity1] > severityLevel[severity2]) {
          return severity1;
        } else {
          return severity2;
        }
      },

      /**
       * @type {Function}
       *   Prepares service status data by putting the localized strings
       *   into a predictable variable for templates.
       */
      processTranslations: function processTranslations(message) {
        var locale = 'ru_RU';

        if (Array.isArray(message.translations)) {
          for (var l = 0, localeCount = message.translations.length; l < localeCount; l++) {
            if (message.translations[l].locale === locale) {
              message.content = message.translations[l].content;
            }
          }
        }
      },
      makeToggleable: function makeToggleable(element) {
        var elSummary = element.getElementsByClassName('message-summary')[0];
        common.addEvent(elSummary, 'click', function () {
          common.toggleClass(element, 'closed');
        });
      }
    };
    return StatusUtils;
  };

  var require$$0$1 = getCjsExportFromNamespace(styles$7);

  var serviceStatus = createCommonjsModule(function (module) {
    'use strict';
    /**
     * Service Status RiotBar.
     *
     * This plugin will add service status indicators to the Riotbar.
     */

    var ServiceStatus = module.exports = {
      config: {},

      /**
       * @type {Function}
       *   include css styles for service status.
       */
      styles: require$$0$1,

      /**
       * @type {Object}
       *   The default settings for this plugin. Any settings that could be
       *   overriden by the users need to be here.
       */
      defaults: {
        enabled: true,
        statusUrl: '//status.leagueoflegends.com/shards/' + 'ru/summary'
      },

      /**
       * Initialization function to be called by the bar.
       *
       * Must create a base DOM element for this plugin. May add funcitonality, or
       * asynchronously load elements and add them to the plugin's base element.
       *
       * @param  {Object} config          Configuration for this plugin.
       * @param  {DOMElement} baseElement Base DOM element for the bar.
       */
      init: function init(config, renderRegions) {
        ServiceStatus.config = config; //  fire off the asynchronous request to get service status data.

        ServiceStatus.utils = statusUtils(RiotBar.data.serviceStatus);
        ServiceStatus.utils.fetchStatus();
      }
    };
  });
  var serviceStatus_1 = serviceStatus.config;
  var serviceStatus_2 = serviceStatus.styles;
  var serviceStatus_3 = serviceStatus.defaults;
  var serviceStatus_4 = serviceStatus.init;

  'use strict';
  /**
   * @file Alerts related utilities.
   *
   * This object will be ultimately accessible from RiotBar.notifications.
   * It represents the plugin notifications API exposed by RiotBar.
   *
   */

  /**
   * Public notifications API provided by RiotBar.
   *
   * @param  {Object} config The configuration object.
   */

  var extensions$1 = function NotificationsExtensionsFactory() {
    var NotificationsExtensions = {
      // Designed to be called from the Notifications widget with
      // updated unread count upon user action
      updateUnreadCount: function updateUnreadCount(count) {
        var unreadCountDiv = document.getElementById('fn-player-messages-unread');

        if (unreadCountDiv) {
          unreadCountDiv.textContent = count;
        }

        var iconDiv = document.getElementById('riotbar-notification-count');

        if (iconDiv) {
          if (parseInt(count, 10) > 0) {
            iconDiv.className = 'unread';
          } else {
            iconDiv.className = '';
          }
        }
      }
    };
    return NotificationsExtensions;
  };

  var notifications = createCommonjsModule(function (module) {
    'use strict';
    /**
     * RiotBar Notifications functionality.
     *
     */

    var Notifications = module.exports = {
      config: {},

      /**
       * @type {Function}
       *   include css styles for notifications.
       */
      styles: null,

      /**
       * @type {Object}
       *   The default settings for this plugin. Any settings that could be
       *   overriden by the users need to be here.
       */
      defaults: {
        enabled: true,
        jQueryJS: 'https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js',
        apolloWidgetsJS: 'https://cdn.leagueoflegends.com/apollo/widgets/1.0.14/apollo.min.js',
        notificationsServiceUrl: 'https://notifications.leagueoflegends.com/api/1.0/',
        updatesCountEnabled: true,
        apolloServiceUrl: 'https://apollo.na.leagueoflegends.com/apollo/',
        boardsUrl: 'https://boards.na.leagueoflegends.com/'
      },

      /**
       * Initialization function to be called by the bar.
       *
       * Must create a base DOM element for this plugin. May add funcitonality, or
       * asynchronously load elements and add them to the plugin's base element.
       *
       * @param  {Object} config          Configuration for this plugin.
       * @param  {DOMElement} baseElement Base DOM element for the bar.
       */
      init: function init(config, renderRegions) {
        return; //disable for now

        var summonerName = window.RiotBar.account && window.RiotBar.account.getSummonerName(); // Only render if we are logged in

        if (summonerName && summonerName !== constants.invalidSummonerName) {
          common.ensureScript('RiotBar.plugins.notificationsDeferred', {
            url: 'https://lolstatic-a.akamaihd.net/riotbar/live/1.1.1/ru_RU-defer-notifications.js'
          }).then(function () {
            var plugin$1 = window.RiotBar.plugins.notificationsDeferred;
            var styles = [];
            plugin$1.init(config, renderRegions, common);
            plugin.getPluginStyles(styles, plugin$1);
            common.appendStyles(styles.join(''));
          });
        }

        Notifications.extensions = extensions$1();
      }
    };
  });
  var notifications_1 = notifications.config;
  var notifications_2 = notifications.styles;
  var notifications_3 = notifications.defaults;
  var notifications_4 = notifications.init;

  'use strict';
  /**
   * Locale module Utility Functions.
   */


  var regionNames = i18n_1.getRegionNames();
  var languageNames = i18n_1.getLanguageNames();

  var localeUtils = function LocaleUtilsFactory(config) {
    var LocaleUtils = {
      /**
       * @type {Function}
       *   Rendering function for locale switcher.
       */
      //tmplLocaleSwitcher: require('./templates/locale-switcher.ejs'),

      /**
       * @type {Object}
       *   Allows for looking up region names using the region id.
       */
      regionNames: i18n_1.getRegionNames(),

      /**
       * @type {Object}
       *   Allows for looking up language names using the lang id.
       */
      languageNames: i18n_1.getLanguageNames(),

      /**
       * @type {Array<Object>}
       *  Array of locale objects
       */
      allLanguagesWithRegions: i18n_1.getAllLanguagesWithRegions(),

      /**
       * @type {Function}
       *   Returns the context required for rendering the template.
       */
      getRenderContext: function getRenderContext() {
        return {
          currentRegion: 'ru',
          //"euw", //'ru',
          currentLang: 'ru',
          currentLocale: 'ru_RU',
          currentRegionName: LocaleUtils.regionNames['ru'],
          currentLanguageName: LocaleUtils.languageNames['ru'],
          regions: Object.keys(regionNames)
        };
      },
      getAllLanguagesWithRegions: function getAllLanguagesWithRegions(localeConfig) {
        return i18n_1.getAllLanguagesWithRegions(localeConfig && _typeof(localeConfig) === 'object' ? localeConfig.landingUrlPattern : undefined);
      },

      /**
       * @deprecated
       * @type {Function}
       *   Processes regions defined in locale config.
       *   Returns the rendering context for the region.
       */
      processRegionConfig: function processRegionConfig() {
        var regionContext = [];
        common.map(config.locales, function (region, regionConfig) {
          // create an array to store the locale objects
          var localesContext = [];

          for (var l = 0; l < regionConfig.length; l++) {
            localesContext[l] = LocaleUtils.processLangConfig(regionConfig[l], region);
          }

          regionContext.push({
            'id': region,
            'regionName': LocaleUtils.regionNames[region],
            'locales': localesContext
          });
        });
        return regionContext;
      },

      /**
       * @type {Function}
       *   Returns the rendering context for a language.
       */
      processLangConfig: function processLangConfig(localeConfig, regionId) {
        var landingUrlPattern = config.landingUrlPattern;
        var languageContext;

        if (typeof localeConfig === 'string') {
          // if the config returns a string for locale,
          //  then assume locale code is passed.
          var lang = localeConfig.substring(0, 2); // Replaced url tokens

          var landingUrl = landingUrlPattern.replace('{{lang}}', lang).replace('{{region}}', regionId).replace('{{locale}}', localeConfig).replace("{{locale-hyphen}}", localeConfig.toLowerCase().replace("_", "-")); //  return the render context object.

          languageContext = {
            'locale': localeConfig,
            'lang': lang,
            'languageName': LocaleUtils.languageNames[lang],
            'landingUrl': landingUrl
          };
        } else if (_typeof(localeConfig) === 'object') {
          // @TODO: allow for setting individual config options.
          //    currently requires entire config to be passed.
          languageContext = localeConfig;
        }

        return languageContext;
      }
    };
    return LocaleUtils;
  };

  'use strict';
  /**
   * Locale RiotBar.
   *
   * This plugin allows the Riotbar to provide a locale switcher.
   */


  var defaultLocales = i18n_1.getDefaultLocales();
  var locale = {
    config: {},

    /**
     * @type {Function}
     *   include css styles for the locale switcher.
     */
    styles: null,

    /**
     * @type {Object}
     *   The default settings for this plugin. Any settings that could be
     *   overriden by the users need to be here.
     */
    defaults: {
      enabled: true,
      landingUrlPattern: i18n_1.getDefaultLandingURLPattern(),
      languages: null,
      // Pass a full array of locale objects instead of flat array of supported locale codes for more control
      switcherEnabled: true,
      supportedLocales: i18n_1.getDefaultLocaleCodes()
    },

    /**
     * Initialization function to be called by the bar.
     *
     * Must create a base DOM element for this plugin. May add funcitonality, or
     * asynchronously load elements and add them to the plugin's base element.
     *
     * @param  {Object} config          Configuration for this plugin.
     * @param  {DOMElement} baseElement Base DOM element for the bar.
     */
    init: function init(config, renderRegions) {
      this.config = config;
      var localeUtils$1 = localeUtils(this.config);
      this.localeUtils = localeUtils$1;
    }
  };
  var locale_1 = locale.config;
  var locale_2 = locale.styles;
  var locale_3 = locale.defaults;
  var locale_4 = locale.init;

  'use strict';
  /**
   * Ping plugin for RiotBar.
   *
   * This plugin adds ping support to the page using the bar.
   */


  var ping = {
    config: {},

    /**
     * @type {Object}
     *   The default settings for this plugin. Any settings that could be
     *   overriden by the users need to be here.
     */
    defaults: {
      enabled: true,
      pingUrl: 'https://lolstatic-a.akamaihd.net/ping/ping-0.1.663.min.js',
      pCfg: null
    },

    /**
     * Initialization function for ping.
     *
     * @param  {Object} config          Configuration for this plugin.
     */
    init: function init(config) {
      this.config = config; // Setup ping configuration.

      if (!window.pCfg && RiotBar.data.ping && RiotBar.data.ping.pCfg) {
        window.pCfg = RiotBar.data.ping.pCfg;
      }

      if (RiotBar.data.ping && RiotBar.data.ping.pingUrl) {
        common.appendScript(RiotBar.data.ping.pingUrl);
      }
    }
  };
  var ping_1 = ping.config;
  var ping_2 = ping.defaults;
  var ping_3 = ping.init;

  'use strict';
  /**
   * @type {Object}
   *   The default settings for this plugin. Any settings that could be
   *   overriden by the users need to be here.
   *
   *   This gets required into both footer and footerContent plugins.
   */

  var configDefaults = {
    enabled: false,
    disableRender: false,
    container: {
      renderFooterInto: null,
      marginTop: null,
      disableFooterBackground: false
    },
    footerLinks: {
      enabled: true
    },
    socialLinks: {
      enabled: false
    }
  };
  var configDefaults_1 = configDefaults.enabled;
  var configDefaults_2 = configDefaults.disableRender;
  var configDefaults_3 = configDefaults.container;
  var configDefaults_4 = configDefaults.footerLinks;
  var configDefaults_5 = configDefaults.socialLinks;

  var footer = createCommonjsModule(function (module) {
    'use strict';
    /**
     * RiotBar Cookie Manager FUnctionality
     *
     */

    module.exports = {
      initialized: false,
      config: {},
      defaults: configDefaults,

      /**
       * Initialization function to be called by the bar.
       *
       * @param  {Object} config          Configuration for this plugin.
       */
      init: function init(config, renderRegions) {
        // check if enabled and not initialized
        if (!RiotBar.data.footer.enabled || module.exports.initialized) {
          return;
        }

        var filePrefix = common.determineDeferredFilePrefix();
        common.ensureScript('RiotBar.plugins.footerContent', {
          url: 'https://lolstatic-a.akamaihd.net/riotbar/live/1.1.1/' + filePrefix + 'ru_RU-defer-footer.js'
        }).then(function () {
          // Ensure we never display the footer twice
          // (this can happen when RiotBar.show() is called more than once)
          if (module.exports.initialized) {
            return;
          }

          module.exports.initialized = true;
          var plugin = window.RiotBar.plugins.footerContent; // @TODO Eh? Why not just RiotBar.plugins.footer ?

          plugin.init(RiotBar.data.footer, renderRegions);
        });
      }
    };
  });
  var footer_1 = footer.initialized;
  var footer_2 = footer.config;
  var footer_3 = footer.defaults;
  var footer_4 = footer.init;

  var baseFont = getCjsExportFromNamespace(styles$1);

  'use strict';
  /**
   * @file
   *
   * @description Core RiotBar module system.
   *
   * Defines window.RiotBar as the public interface for the bar.
   */


  svg4everybody({
    polyfill: true
  });
  /*!
   */

  if (window.RiotBar === undefined) {
    var util = plugin;
    var commonUtil = common;
    commonUtil.appendStyles(baseFont);
    var i18n = i18n_1; // Define RiotBar as Singleton in the global scope.

    var RiotBar$1 = window.RiotBar = {
      /**
       * Expose common utility functions
       *
       * @type {Object}
       */
      util: commonUtil,
      data: {"touchpoints":{"links":[{"id":"game-info","text":"ОБ ИГРЕ","url":"#","subMenuItems":[{"id":"agents","text":"АГЕНТЫ","url":"/ru-ru/agents/"},{"id":"maps","text":"КАРТЫ","url":"/ru-ru/maps/"},{"id":"arsenal","text":"АРСЕНАЛ","url":"/ru-ru/arsenal/"}]},{"id":"news","text":"НОВОСТИ","url":"/ru-ru/news/","activeLinkRegex":"news(\\/?).+"},{"id":"support","text":"ПОДДЕРЖКА","url":"#","subMenuItems":[{"id":"specs","text":"ТРЕБОВАНИЯ","url":"/ru-ru/specs/"},{"id":"support-subnav","text":"ПОДДЕРЖКА","url":"https://support-valorant.riotgames.com/hc/ru/"}]}]},"account":{"enabled":true,"initializeAuthState":false,"urls":{"login":"https://{{login_prefix}}{{current_domain}}/?region=ru&lang=ru_RU&redirect_uri={{then}}","logout":"https://{{login_prefix}}{{current_domain}}/{{summonerRegion}}/out?redirect_uri={{then}}","management":"https://account.riotgames.com/account","usernameRecovery":"https://recovery.riotgames.com/en/forgot-username?region=NA1","passwordRecovery":"https://recovery.riotgames.com/en/forgot-password?region=NA1"},"currentDomain":null,"anonymousLinks":[{"id":"play-now","text":"ИГРАТЬ","isButton":true,"action":"openModal"}],"authenticatedLinks":[{"id":"logout","text":"Выход","action":"logout"}]},"footer":{"enabled":true,"renderInto":"","copyright":{"leagueCopyright":"© %year% Riot Games, Inc. Riot Games, VALORANT и все связанные с ними логотипы являются торговыми знаками или зарегистрированными торговыми знаками, принадлежащими Riot Games, Inc.","copyrightText":"© %year% Riot Games, Inc. Riot Games, VALORANT и все связанные с ними логотипы являются торговыми знаками или зарегистрированными торговыми знаками, принадлежащими Riot Games, Inc."},"footerLinks":[{"id":"download-footer","url":"/ru-ru/download/","text":"Загрузите игру"}],"socialLinks":[],"legalLinks":[{"id":"Privacy","bold":false,"url":"https://www.riotgames.com/ru/privacy-notice-RU","text":"Политика конфиденциальности"},{"id":"Terms of Service","bold":false,"url":"https://www.riotgames.com/ru/terms-of-service-RU","text":"Условия использования"}],"gameRatings":[{"id":"ru-rars","url":"https://www.riotgames.com/ru/terms-of-service-RU","logoAltText":"","image":"https://images.contentstack.io/v3/assets/blt0eb2a2986b796d29/blt85bea726d4b56373/5eceeb3654e7166d098d0c68/Russia_-_16_(color).png?&height=100&disable=upscale"}],"subLogos":[]},"theme":{"name":"playvalorantfinal","isSticky":true,"accentColor":"#FF4655","accentColorHover":"#FF4655","accentColorActive":"#FF4655","homepageURL":"https://playvalorant.com/ru-ru/","desktopSVG":"<svg fill=\"none\" height=\"35\" viewBox=\"0 0 100 100\" width=\"35\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M99.25 48.66V10.28c0-.59-.75-.86-1.12-.39l-41.92 52.4a.627.627 0 00.49 1.02h30.29c.82 0 1.59-.37 2.1-1.01l9.57-11.96c.38-.48.59-1.07.59-1.68zM1.17 50.34L32.66 89.7c.51.64 1.28 1.01 2.1 1.01h30.29c.53 0 .82-.61.49-1.02L1.7 9.89c-.37-.46-1.12-.2-1.12.39v38.38c0 .61.21 1.2.59 1.68z\" fill=\"#fff\"></path></svg>","mobileSVG":"<svg fill=\"none\" height=\"35\" viewBox=\"0 0 690 98.9\" width=\"109\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M615.11 19.15h24.69l.08 75.59c0 .97.79 1.77 1.77 1.77l14.14-.01c.98 0 1.77-.79 1.77-1.77l-.08-75.58h30.96c.91 0 1.43-1.06.85-1.77l-10.6-13.26a4.68 4.68 0 00-3.65-1.76h-59.93c-.98 0-1.77.79-1.77 1.77v13.26c0 .96.79 1.76 1.77 1.76M19.25 94.75L91.67 4.13c.57-.71.06-1.77-.85-1.77H72.71c-1.42 0-2.77.65-3.65 1.76L17.68 68.4V4.12c0-.98-.79-1.77-1.77-1.77H1.77C.79 2.35 0 3.14 0 4.12v90.62c0 .98.79 1.77 1.77 1.77H15.6c1.42 0 2.76-.65 3.65-1.76M70.31 94.75l24.91-31.17 24.91 31.17a4.685 4.685 0 003.66 1.76h13.83c.98 0 1.77-.79 1.77-1.77V4.12c0-.97-.79-1.77-1.77-1.77h-11.6c-2.84 0-5.53 1.29-7.31 3.51L47.69 94.73c-.57.71-.06 1.77.85 1.77h18.11c1.43.01 2.77-.64 3.66-1.75m51.39-66.21v41.75l-16.68-20.87 16.68-20.88zM526.07 94.73L453.65 4.11A4.68 4.68 0 00450 2.35h-13.84c-.98 0-1.77.79-1.77 1.77v90.62c0 .98.79 1.77 1.77 1.77h13.83c1.42 0 2.77-.65 3.65-1.76l24.91-31.17 24.91 31.17a4.68 4.68 0 003.65 1.76h18.11c.91 0 1.42-1.06.85-1.78m-57.33-45.31L452.05 70.3V28.54l16.69 20.88zM269.45 0c-27.3 0-49.43 22.13-49.43 49.43s22.13 49.43 49.43 49.43 49.43-22.13 49.43-49.43C318.89 22.13 296.75 0 269.45 0m0 82.06c-17.54 0-31.75-14.61-31.75-32.63 0-18.02 14.21-32.64 31.75-32.64S301.2 31.4 301.2 49.43c.01 18.02-14.21 32.63-31.75 32.63M583.38 4.12V68.4L532 4.11a4.68 4.68 0 00-3.65-1.76H514.5c-.97 0-1.77.79-1.77 1.77v43.67c0 1.06.36 2.09 1.03 2.92l14.71 18.41c.65.81 1.95.35 1.95-.68v-38l51.39 64.31a4.68 4.68 0 003.65 1.76h13.83c.98 0 1.77-.79 1.77-1.77V4.12c0-.97-.79-1.77-1.77-1.77h-14.14c-.98 0-1.77.8-1.77 1.77M410.62 23.76V4.12c0-.98-.79-1.77-1.77-1.77h-72.37c-.98 0-1.77.79-1.77 1.77v90.62c0 .98.79 1.77 1.77 1.77h14.14c.98 0 1.77-.79 1.77-1.77V19.16h40.55l-27.37 34.26c-.51.64-.51 1.56 0 2.21l31.27 39.13a4.68 4.68 0 003.65 1.76h18.11c.91 0 1.42-1.06.85-1.77l-32.14-40.21 22.28-27.84c.66-.85 1.03-1.88 1.03-2.94M162.39 96.51h41.96c1.42 0 2.77-.65 3.65-1.76l10.6-13.27c.57-.71.06-1.77-.85-1.77H178.3V4.12c0-.98-.79-1.77-1.77-1.77h-14.14c-.98 0-1.77.79-1.77 1.77v90.62c0 .97.8 1.77 1.77 1.77\" fill=\"#fff\"></path></svg>"},"localizationSwitcher":{"enabled":true,"links":[{"url":"/en-us/","text":"English (NA)","active":false},{"url":"/en-gb/","text":"English (EUW)","active":false},{"url":"/de-de/","text":"Deutsch","active":false},{"url":"/es-es/","text":"Español (EUW)","active":false},{"url":"/fr-fr/","text":"Français","active":false},{"url":"/it-it/","text":"Italiano","active":false},{"url":"/pl-pl/","text":"Polski","active":false},{"url":"/ru-ru/","text":"Русский","active":true},{"url":"/tr-tr/","text":"Türkçe","active":false},{"url":"/es-mx/","text":"Español (LATAM)","active":false},{"url":"/id-id/","text":"Indonesian","active":false},{"url":"/ja-jp/","text":"日本語","active":false},{"url":"/ko-kr/","text":"한국어","active":false},{"url":"/pt-br/","text":"Português","active":false},{"url":"/th-th/","text":"ภาษาไทย","active":false},{"url":"/vi-vn/","text":"Tiếng Việt","active":false},{"url":"/zh-tw/","text":"繁體中文","active":false}]},"applicationSwitcher":{"enabled":true,"contentManifestCDN":"https://lolstatic-a.akamaihd.net/riotbar/live/1.1.1/../content-manifests/"},"cookiePolicyV2":{"enabled":false,"settings":{}},"serviceStatus":{"enabled":false,"statusUrl":"https://status.leagueoflegends.com/shards/ru/summary"},"ping":{"enabled":true,"pCfg":{},"pingUrl":"https://lolstatic-a.akamaihd.net/ping/ping-0.1.663.min.js"},"showAutomatically":true,"renderInto":"riotbar-header"},

      /**
       * Object containing the list of plugins used by the bar.
       * These will be loaded in the same order as defined here.
       *
       * @type {Object}
       */
      plugins: {
        cookiePolicyV2: cookiePolicyV2,
        navigation: navigation$1,
        account: account,
        serviceStatus: serviceStatus,
        notifications: notifications,
        locale: locale,
        ping: ping,
        footer: footer
      },

      /**
       * Default global options for the bar. This will be aggregated with
       * plugin-defined options on execution time.
       *
       * @type {Object}
       */
      defaults: {
        mobileResponsive: true,
        // default mobile responsive to true
        plugins: null,
        onLoad: null,
        global: {
          theme: 'lol',
          renderInto: null
        }
      },

      /**
       * Locale defined configuration.
       * @type {Object}
       */
      // localeDefaults: '/* config_file_placeholder */',

      /**
       * Runtime configuration with locale and user defined settings
       * applied to defaults.
       *
       * @type {Object}
       */
      config: {},

      /**
       * Initializes and displays the RiotBar
       * @param  {Object} config An object containing configuration for the bar.
       */
      show: function RiotBarShow(config) {
        if (!config) {
          config = {};
        }

        if (RiotBar$1.initialized) {
          return; // prevent double loading
        }

        RiotBar$1.initialized = true;
        RiotBar$1.config = config;
        var beforeLoadCallback = config.beforeLoad;

        if (beforeLoadCallback && typeof beforeLoadCallback === 'function') {
          config.beforeLoad();
        } // Once we have all of the plugin defaults, determine whether or not to include
        // internal regions in our list of regions based upon the
        // config of the account plugin


        var accountAuthMode = RiotBar$1.data.account.authMode || 'prod';

        if (accountAuthMode !== 'prod') {
          i18n.includeInternalRegions();
        } // renderRegions stores a list of regions into which plugins may
        //   render content.
        // Append custom plugins.


        if (RiotBar$1.config.plugins) {
          commonUtil.map(RiotBar$1.config.plugins, function (name, plugin) {
            RiotBar$1.plugins[name] = plugin; // Configuration for external plugins needs to be managed externally.

            var defaultConfig = plugin.defaults || {
              enabled: true
            };
            var appConfig = config[name] || {};

            for (var prop in appConfig) {
              // commonUtil.deepOverride does not add properties that exist on the override, but not the default
              if (!defaultConfig.hasOwnProperty(prop)) {
                defaultConfig[prop] = appConfig[prop];
              }
            }

            var pluginConfig = commonUtil.deepOverride(defaultConfig, appConfig, 0);
            RiotBar$1.config[name] = pluginConfig;
          });
        }

        var renderRegions = {};
        var styles = []; // preinit the account plugin (booo)

        RiotBar$1.plugins.account.preInit(RiotBar$1.config.account); // early dependency on locale plugin too

        initPlugin("locale"); // intiialize remaining plugins
        // now render the bar

        renderRiotbar(renderRegions).then(function () {
          // and hit the callback
          commonUtil.map(RiotBar$1.plugins, function (p) {
            if (p !== "locale") {
              initPlugin(p);
            }
          }); // append styles

          commonUtil.appendStyles(styles.join(''));
          var onLoadCallback = RiotBar$1.config.onLoad;

          if (onLoadCallback && typeof onLoadCallback === 'function') {
            RiotBar$1.config.onLoad();
          }
        }).catch(function (err) {
          console.error(err);
          console.log("Unable to load Riot Bar");
        });

        function initPlugin(p) {
          var plugin = RiotBar$1.plugins[p];
          var config = RiotBar$1.config[p];

          if (!config || config && config.enabled) {
            plugin.init(config, renderRegions);
            util.getPluginStyles(styles, plugin);

            if (p != "account") {
              util.addPluginExtensions(RiotBar$1, p, plugin);
            }
          }
        }
      }
    };
  } // Hmm, since we are now config-less except for when we actually want to pass a config
  // when intentionally invoked
  // For modern apps, setting a window global is just gross.
  // Ideally, the "auto display" would be a part of the config from content stack
  // OR it can be a separate build output, like


  if (window.riotBarConfig) {
    RiotBar$1.show(window.riotBarConfig);
  } else if (RiotBar$1.data.hasOwnProperty('showAutomatically') && RiotBar$1.data.showAutomatically === true) {
    RiotBar$1.show({});
  }

  var src = {};

  return src;

}());
